// - SCHEMA ap210is/n// Include StepTools resources

#include "rose.h"

#include <add_design_object_management_relationship.h>
#include <design_object_management_relationship.h>
#include <ee_product_definition.h>
#include <managed_design_object.h>
#include <SetOfperson_organization.h>
#include <person_organization.h>
#include <person_and_organization.h>
#include <person.h>
#include <organization.h>
#include <security_classification.h>
#include <ee_approval.h>
#include <ee_text.h>
#include <status.h>
#include <date_or_date_and_time.h>
#include <date_and_time.h>
#include <date.h>
#include <ee_product_version.h>
#include <contract.h>
#include <ee_product.h>
#include <life_cycle_stage.h>
#include <SetOfee_document.h>
#include <ee_document.h>
#include <SetOfstructured_text.h>
#include <structured_text.h>
#include <external_definition.h>
#include <standard_or_reference_document.h>
#include <ee_document_identifier.h>
#include <ListOfdate_and_time.h>
#include <ListOfplain_or_structured_text.h>
#include <plain_or_structured_text.h>
#include <SetOfperson.h>
#include <adjacent_stratum_surface_definition.h>
#include <stratum_surface.h>
#include <stratum.h>
#include <stratum_technology.h>
#include <ee_material.h>
#include <SetOfcoordinated_characteristic.h>
#include <coordinated_characteristic.h>
#include <SetOfcharacteristic.h>
#include <characteristic.h>
#include <numeric_or_non_numeric_select.h>
#include <non_numeric_property_type.h>
#include <data_element.h>
#include <material_conductivity_classification.h>
#include <length_data_element.h>
#include <stiffness_class.h>
#include <process_specification.h>
#include <ee_specification.h>
#include <stratum_surface_designation.h>
#include <advanced_b_rep.h>
#include <bound_volume_shape.h>
#include <feature_shape_definition.h>
#include <cartesian_coordinate_system.h>
#include <two_or_three_dimensional.h>
#include <degree_or_radian.h>
#include <angle_data_element.h>
#include <aggregate_connectivity_requirement.h>
#include <functional_unit_network_node_definition.h>
#include <functional_unit_network_definition.h>
#include <functional_unit_definition.h>
#include <SetOfanalytical_representation.h>
#include <analytical_representation.h>
#include <SetOfparameter_assignment.h>
#include <parameter_assignment.h>
#include <scalar_or_coordinated_characteristics.h>
#include <model_parameter.h>
#include <model_parameter_type.h>
#include <analytical_model.h>
#include <language_reference_manual.h>
#include <SetOfmodel_parameter.h>
#include <functional_unit_usage_view.h>
#include <design_composition_path.h>
#include <SetOffunctional_unit.h>
#include <functional_unit.h>
#include <altered_package.h>
#include <package.h>
#include <physical_unit_usage_view.h>
#include <physical_unit.h>
#include <technology.h>
#include <SetOfee_requirement_occurrence.h>
#include <ee_requirement_occurrence.h>
#include <SetOfee_specification.h>
#include <SetOfee_product.h>
#include <SetOfee_material.h>
#include <SetOfregistered_style.h>
#include <registered_style.h>
#include <seating_plane.h>
#include <non_feature_shape_element.h>
#include <shape_element.h>
#include <SetOffeature_shape_occurrence.h>
#include <feature_shape_occurrence.h>
#include <cartesian_point.h>
#include <altered_package_terminal.h>
#include <package_terminal.h>
#include <part_feature.h>
#include <physical_feature_or_part_template.h>
#include <SetOfconnection_zone.h>
#include <connection_zone.h>
#include <ee_colour.h>
#include <material_assembly_relationship.h>
#include <altered_packaged_part.h>
#include <packaged_part.h>
#include <package_or_package_external_reference.h>
#include <package_external_reference.h>
#include <alternate_product.h>
#include <alternate_select_product.h>
#include <analytical_model_port.h>
#include <signal_flow_direction.h>
#include <analytical_model_port_assignment.h>
#include <scalar_terminal_definition.h>
#include <functional_unit_usage_view_terminal_definition.h>
#include <analytical_model_scalar_port.h>
#include <analytical_model_vector_port.h>
#include <analytical_model_vector_port_assignment.h>
#include <ListOfscalar_terminal_definition.h>
#include <angular_dimension_with_direction_vector.h>
#include <dimensional_location.h>
#include <dimensional_characteristic.h>
#include <dimensional_types.h>
#include <shape_element_locating_relationship.h>
#include <axis_placement_or_datum_based_vector_orientation_select.h>
#include <axis_placement.h>
#include <orientation.h>
#include <datum_based_vector_orientation.h>
#include <SetOfdirection_element.h>
#include <direction_element.h>
#include <datum_based_direction_vector.h>
#include <datum_plane.h>
#include <datum.h>
#include <angular_size_dimension.h>
#include <dimensional_size.h>
#include <angularity_tolerance.h>
#include <geometric_tolerance_with_referenced_datum_system.h>
#include <geometric_tolerance.h>
#include <constraining_element_definitions.h>
#include <tolerance_zone_definition.h>
#include <tolerance_zone.h>
#include <tolerance_zone_boundary.h>
#include <tolerance_zone_boundary_definition.h>
#include <tolerance_zone_form.h>
#include <profile_related_positional_boundary_definition.h>
#include <positional_boundary_definition.h>
#include <positional_boundary.h>
#include <positional_boundary_offset.h>
#include <positional_boundary_and_profile_boundary_member_relationship.h>
#include <profile_related_positional_boundary.h>
#include <tolerance_zone_boundary_member.h>
#include <positional_boundary_member_definition.h>
#include <positional_boundary_member.h>
#include <conical_tolerance_zone_boundary_diametrical_size_characteristic.h>
#include <conical_tolerance_zone_boundary_and_surface_relationship.h>
#include <conical_tolerance_zone_boundary.h>
#include <toleranceable_shape_element.h>
#include <centre_axis.h>
#include <centre_of_symmetry.h>
#include <derived_shape_element.h>
#include <centre_plane.h>
#include <centre_point.h>
#include <tangent_plane.h>
#include <tangent_shape_element.h>
#include <datum_system_defining_conditions.h>
#include <datum_system.h>
#include <datum_reference_frame.h>
#include <SetOfdatum_plane.h>
#include <SetOfdatum_axis.h>
#include <datum_axis.h>
#include <datum_point.h>
#include <SetOfdatum_precedence_assignment.h>
#include <datum_precedence_assignment.h>
#include <datum_usage_in_datum_system_relationship.h>
#include <precedence_type.h>
#include <apex.h>
#include <array_placement_group.h>
#include <assembly_group_component.h>
#include <assembly_component.h>
#include <physical_unit_or_part_template.h>
#include <part_template.h>
#include <library_item.h>
#include <SetOfcorrelated_or_independent.h>
#include <correlated_or_independent.h>
#include <assembled_with_bonding.h>
#include <assembly_joint.h>
#include <SetOfassembled_feature_select.h>
#include <assembled_feature_select.h>
#include <interconnect_component_join_terminal.h>
#include <component_terminal.h>
#include <component_feature.h>
#include <part_feature_or_template_feature.h>
#include <land_template_terminal.h>
#include <land_physical_template.h>
#include <stratum_feature_template.h>
#include <land_template_terminal_class.h>
#include <component_termination_passage_template_terminal.h>
#include <component_termination_passage_template.h>
#include <inter_stratum_feature_template.h>
#include <passage_technology.h>
#include <inter_stratum_extent.h>
#include <printed_part_template_terminal.h>
#include <printed_part_template.h>
#include <ListOfprinted_part_template_material.h>
#include <printed_part_template_material.h>
#include <printed_part_cross_section_template.h>
#include <printed_part_template_terminal_class.h>
#include <part_terminal_external_reference.h>
#include <via_template_terminal.h>
#include <via_template.h>
#include <interconnect_component_interface_terminal.h>
#include <component_interface_terminal.h>
#include <packaged_connector_component_interface_terminal.h>
#include <package_terminal_occurrence.h>
#include <packaged_component.h>
#include <bare_die_component_terminal.h>
#include <packaged_component_join_terminal.h>
#include <assembly_module_component_terminal.h>
#include <interconnect_module_component_terminal.h>
#include <assembly_bond_definition.h>
#include <assembled_with_fasteners.h>
#include <sub_assembly_relationship.h>
#include <SetOfassembly_component.h>
#include <assembly_alternate_product.h>
#include <physical_unit_design_view.h>
#include <assembly_component_2d_shape.h>
#include <assembly_component_3d_shape.h>
#include <assembly_composition_relationship.h>
#include <assembly_material_composition_relationship.h>
#include <assembly_module.h>
#include <assembly_module_component.h>
#include <assembly_module_terminal.h>
#include <part_terminal.h>
#include <packaged_part_interface_terminal.h>
#include <packaged_part_terminal.h>
#include <package_terminal_or_package_terminal_external_reference.h>
#include <package_terminal_external_reference.h>
#include <assembly_module_usage_view_connector_relationship.h>
#include <usage_concept_usage_relationship.h>
#include <usage_concept.h>
#include <assembly_module_usage_view.h>
#include <datum_based_length_measure.h>
#include <descriptive_or_geometric_orientation.h>
#include <measure_orientation.h>
#include <assembly_requirement_allocation.h>
#include <component_or_feature.h>
#include <assembly_separation_requirement_allocation.h>
#include <SetOfcomponent_or_feature.h>
#include <assembly_technology_specification.h>
#include <axis_placement_2d.h>
#include <axis_placement_3d.h>
#include <b_rep_2d.h>
#include <bare_die.h>
#include <bare_die_component.h>
#include <bare_die_terminal.h>
#include <minimally_defined_bare_die_terminal.h>
#include <bevel_edge_feature_shape.h>
#include <edge_shape.h>
#include <planar_shape.h>
#include <blind_passage_template.h>
#include <unsupported_passage_template.h>
#include <shape_dimension_representation.h>
#include <blind_via.h>
#include <via.h>
#include <plated_passage.h>
#include <plated_inter_stratum_feature.h>
#include <inter_stratum_feature.h>
#include <laminate_component.h>
#include <block.h>
#include <csg_primitive.h>
#include <bond_assembly_position.h>
#include <physical_unit_3d_shape.h>
#include <material_condition.h>
#include <purpose.h>
#include <environment.h>
#include <default_assembly_bond_shape.h>
#include <bonded_conductive_base_blind_via.h>
#include <stratum_feature_conductive_join.h>
#include <stratum_concept_relationship.h>
#include <stratum_feature_template_component.h>
#include <stratum_feature.h>
#include <boolean_csg_result.h>
#include <boolean_csg_operand.h>
#include <boolean_operator.h>
#include <boundary_based_position_tolerance.h>
#include <position_tolerance_with_referenced_datum_system.h>
#include <position_tolerance.h>
#include <geometric_tolerance_with_applied_material_condition_property.h>
#include <material_condition_property_names.h>
#include <profile_of_any_surface_tolerance_with_referenced_datum_system.h>
#include <profile_of_any_surface_tolerance.h>
#include <boundary_size_characteristic.h>
#include <boundary_zone_definition_with_specified_size.h>
#include <bounding_curve.h>
#include <curve.h>
#include <trimmed_line.h>
#include <buried_via.h>
#include <bus_element_relationship.h>
#include <ListOfbus_structural_definition_or_node.h>
#include <bus_structural_definition_or_node.h>
#include <bus_structural_definition.h>
#include <cartesian_transformation_operator_2d.h>
#include <positive_ratio_measure.h>
#include <certification.h>
#include <supplied_product_version.h>
#include <change_design_object_management_relationship.h>
#include <change_order.h>
#include <work_order.h>
#include <SetOfwork_request.h>
#include <work_request.h>
#include <SetOfee_product_version.h>
#include <evaluated_characteristic_or_description.h>
#include <evaluated_characteristic.h>
#include <planned_characteristic.h>
#include <requirement_allocation_select.h>
#include <requirement_allocation.h>
#include <SetOfproduct_object_select.h>
#include <product_object_select.h>
#include <ee_product_configuration.h>
#include <ee_product_model.h>
#include <physical_connectivity_element.h>
#include <connectivity_component.h>
#include <connectivity_sub_structure.h>
#include <SetOftermination_or_junction.h>
#include <termination_or_junction.h>
#include <topological_junction.h>
#include <physical_connectivity_structure_definition.h>
#include <physical_connectivity_definition.h>
#include <SetOfcomponent_terminal.h>
#include <restriction_basis_item.h>
#include <stratum_concept.h>
#include <component_or_component_feature.h>
#include <component_external_reference.h>
#include <component_feature_external_reference.h>
#include <functional_unit_requirement_allocation.h>
#include <evaluation_type.h>
#include <design_object_management_relationship_or_description.h>
#include <change_request.h>
#include <SetOfdesign_object_management_relationship_or_description.h>
#include <SetOfee_text.h>
#include <circular_runout_tolerance.h>
#include <circularity_tolerance.h>
#include <geometric_tolerance_without_referenced_datum_system.h>
#include <closed_curve.h>
#include <common_datum.h>
#include <component_2d_edge_location.h>
#include <component_2d_location.h>
#include <interconnect_module_component_surface_feature.h>
#include <component_3d_location.h>
#include <component_assembly_2d_position.h>
#include <physical_unit_planar_shape.h>
#include <planar_projected_shape.h>
#include <next_higher_assembly_relationship.h>
#include <component_assembly_3d_position.h>
#include <component_based_annotation_symbol_placement_relationship.h>
#include <component_feature_to_layout_feature_relationship.h>
#include <component_based_annotation_text_relationship.h>
#include <component_based_message_type.h>
#include <component_feature_make_from_relationship.h>
#include <component_feature_relationship.h>
#include <component_feature_to_physical_usage_view_assignment.h>
#include <component_group_assignment.h>
#include <placement_group.h>
#include <component_make_from_relationship.h>
#include <component_mounting_clearance_relationship.h>
#include <component_overlap_relationship.h>
#include <component_part_2d_geometric_representation_relationship.h>
#include <part_template_or_physical_unit_2d_shape_select.h>
#include <part_template_planar_shape.h>
#include <component_part_3d_geometric_representation_relationship.h>
#include <part_template_or_physical_unit_3d_shape_select.h>
#include <part_template_3d_shape.h>
#include <part_template_non_planar_2d_shape.h>
#include <open_shell_based_surface.h>
#include <component_placement_restriction_assignment.h>
#include <mounting_restriction_area.h>
#include <interconnect_module_component.h>
#include <item_restricted_requirement_occurrence.h>
#include <component_swap_specification.h>
#include <component_terminal_to_assembly_module_terminal_assignment.h>
#include <pca_interface_select.h>
#include <component_terminal_to_interconnect_module_terminal_assignment.h>
#include <interconnect_module_terminal.h>
#include <interconnect_or_assembly_module_select.h>
#include <component_termination_passage_interface_terminal.h>
#include <printed_connector_component_interface_terminal.h>
#include <non_functional_land_interface_terminal.h>
#include <land_interface_terminal.h>
#include <component_terminal_to_pca_terminal_assignment.h>
#include <pca_terminal.h>
#include <component_termination_passage.h>
#include <component_termination_passage_and_contact_size_dependent_land.h>
#include <land.h>
#include <component_termination_passage_and_contact_size_dependent_non_functional_land.h>
#include <non_functional_land.h>
#include <component_termination_passage_dependent_land.h>
#include <component_termination_passage_dependent_non_functional_land.h>
#include <component_termination_passage_join_terminal.h>
#include <component_termination_passage_template_interface_terminal.h>
#include <component_termination_passage_template_join_terminal.h>
#include <SetOfinter_stratum_extent.h>
#include <composite_curve.h>
#include <ListOfcomposite_curve_segment.h>
#include <composite_curve_segment.h>
#include <composite_feature_locating_position_tolerance.h>
#include <composite_feature_relating_position_tolerance.h>
#include <locating_or_relating_position_tolerance.h>
#include <composite_group_shape_element.h>
#include <composite_shape_element.h>
#include <composite_linear_profile_locating_tolerance.h>
#include <profile_of_any_line_tolerance_with_referenced_datum_system.h>
#include <profile_of_any_line_tolerance.h>
#include <composite_linear_profile_refinement_tolerance.h>
#include <locating_or_refinement_linear_profile_tolerance.h>
#include <composite_signal_property.h>
#include <signal_property.h>
#include <representation.h>
#include <signal.h>
#include <composite_signal_property_relationship.h>
#include <composite_surface_profile_locating_tolerance.h>
#include <composite_surface_profile_refinement_tolerance.h>
#include <locating_or_refinement_surface_profile_tolerance.h>
#include <composite_unit_shape_element.h>
#include <concentricity_and_coaxiality_tolerance.h>
#include <conductive_filled_area.h>
#include <conductive_interconnect_element.h>
#include <conductive_interconnect_element_terminal.h>
#include <conductive_interconnect_element_with_pre_defined_transitions.h>
#include <SetOflayer_connection_point_link.h>
#include <layer_connection_point_link.h>
#include <layer_connection_point.h>
#include <design_layer_stratum.h>
#include <conductive_interconnect_element_with_user_defined_single_transition.h>
#include <trace_template.h>
#include <curve_style.h>
#include <extend_or_chord_2_extend_or_truncate_or_round.h>
#include <curve_font_or_scaled_curve_font_select.h>
#include <curve_style_font_and_scaling.h>
#include <curve_style_font_select.h>
#include <solid_curve.h>
#include <externally_defined_curve_font.h>
#include <curve_style_font.h>
#include <extend_or_truncate.h>
#include <square_or_round.h>
#include <trimmed_or_bounding_curve.h>
#include <conductor.h>
#include <intra_stratum_join_relationship.h>
#include <join_relationship.h>
#include <SetOflayer_connection_point.h>
#include <configuration_controlled_message.h>
#include <message_source_select.h>
#include <message_type.h>
#include <conical_tolerance_zone_boundary_definition.h>
#include <SetOfconical_tolerance_zone_boundary_diametrical_size_characteristic.h>
#include <conical_tolerance_zone_definition.h>
#include <connected_filled_area.h>
#include <connection_zone_based_assembly_joint.h>
#include <connection_zone_interface_plane_relationship.h>
#include <connection_zone_model_port_assignment.h>
#include <connectivity_allocation.h>
#include <consistent_part_template_shape_projection.h>
#include <consistent_physical_unit_shape_projection.h>
#include <consistent_stratum_shape_projection.h>
#include <stratum_3d_shape.h>
#include <stratum_planar_shape.h>
#include <constraint_occurrence.h>
#include <ee_rule_version.h>
#include <ee_rule.h>
#include <document_or_organization.h>
#include <contact_size_dependent_land.h>
#include <contact_size_dependent_non_functional_land.h>
#include <counterbore_passage_template.h>
#include <countersunk_passage_template.h>
#include <csg_solid.h>
#include <curve_dimension.h>
#include <single_boundary_dimension.h>
#include <cutout.h>
#include <cutout_edge_segment.h>
#include <edge_segment_vertex.h>
#include <single_datum.h>
#include <cylindricity_tolerance.h>
#include <datum_axis_and_tolerance_zone_orienting_relationship.h>
#include <datum_axis_related_orientation.h>
#include <centre_type.h>
#include <datum_difference.h>
#include <shape_element_relationship.h>
#include <datum_difference_analytical_model_port_assignment.h>
#include <datum_difference_based_characteristic.h>
#include <datum_difference_based_model_parameter.h>
#include <datum_difference_functional_unit_usage_view_terminal_assignment.h>
#include <datum_feature.h>
#include <datum_feature_material_condition_property.h>
#include <datum_feature_usage_in_datum_system_relationship.h>
#include <datum_feature_usage_in_common_datum_relationship.h>
#include <datum_feature_usage_in_datum_relationship.h>
#include <datum_feature_usage_in_single_datum_relationship.h>
#include <datum_system_defining_conditions_with_material_conditions.h>
#include <SetOfdatum_feature_material_condition_property.h>
#include <datum_system_defining_conditions_without_material_conditions.h>
#include <datum_target.h>
#include <datum_target_set.h>
#include <datum_target_usage_in_datum_target_set_relationship.h>
#include <default_attachment_size_and_component_termination_passage_based_land_physical_template.h>
#include <default_component_termination_passage_based_land_physical_template.h>
#include <default_passage_based_land_physical_template.h>
#include <default_land_physical_template.h>
#include <default_attachment_size_based_land_physical_template.h>
#include <default_attachment_size_and_via_based_land_physical_template.h>
#include <default_via_based_land_physical_template.h>
#include <default_component_termination_passage_definition.h>
#include <default_trace_template.h>
#include <default_unsupported_passage_based_land_physical_template.h>
#include <default_unsupported_passage_definition.h>
#include <default_via_definition.h>
#include <delete_design_object_management_relationship.h>
#include <dependently_located_layer_connection_point.h>
#include <interconnect_module_terminal_or_inter_stratum_feature.h>
#include <design_characteristic_occurrence.h>
#include <design_functional_unit_allocation_to_assembly_component.h>
#include <design_functional_unit_allocation_to_assembly_joint.h>
#include <design_functional_unit_allocation_to_fabrication_joint.h>
#include <fabrication_joint.h>
#include <SetOffabricated_feature_select.h>
#include <fabricated_feature_select.h>
#include <via_terminal.h>
#include <printed_component_join_terminal.h>
#include <land_join_terminal.h>
#include <non_functional_land_join_terminal.h>
#include <design_functional_unit_allocation_to_reference_functional_unit.h>
#include <reference_composition_path.h>
#include <design_intent_modification.h>
#include <design_intent_modification_3d_shape.h>
#include <design_intent_modification_in_stratum_3d_position.h>
#include <design_intent_modification_3d_shape_select.h>
#include <design_intent_modification_non_planar_2d_shape.h>
#include <design_intent_modification_in_stratum_planar_position.h>
#include <design_intent_modification_planar_shape_select.h>
#include <design_intent_modification_styled_area_representation.h>
#include <SetOfdesign_intent_modification_planar_shape.h>
#include <design_intent_modification_planar_shape.h>
#include <styled_area_representation.h>
#include <fill_area_occurrence.h>
#include <SetOffill_area_style.h>
#include <fill_area_style.h>
#include <fill_style_select.h>
#include <solid_fill_style.h>
#include <fill_area_style_tile.h>
#include <SetOfvector.h>
#include <vector.h>
#include <fill_area_style_tile_shape_select.h>
#include <externally_defined_tile.h>
#include <fill_area_style_tile_symbol_with_style.h>
#include <fill_area_style_tile_solid_region.h>
#include <fill_area_style_tile_curve_with_style.h>
#include <externally_defined_tile_style.h>
#include <externally_defined_hatch_style.h>
#include <fill_area_style_hatching.h>
#include <fill_area.h>
#include <SetOfcurve.h>
#include <styled_curve_occurrence.h>
#include <design_intent_modification_sequence.h>
#include <design_layer_technology.h>
#include <layer_purpose.h>
#include <layer_position.h>
#include <design_requirement_occurrence.h>
#include <design_specification.h>
#include <device_2d_position.h>
#include <part_device.h>
#include <device_3d_position.h>
#include <device_terminal_map.h>
#include <part_device_terminal.h>
#include <device_terminal_map_relationship.h>
#include <diametrical_boundary_size_characteristic.h>
#include <tolerance_zone_circular_or_cylindrical_or_spherical_boundary.h>
#include <dielectric_crossover_area.h>
#include <dielectric_material_passage.h>
#include <material_or_specification.h>
#include <digital_analytical_model_port.h>
#include <dimension_along_curve.h>
#include <dimension_location_with_direction_vector.h>
#include <dimension_location_with_specified_datum_system.h>
#include <dimension_qualifier.h>
#include <SetOfdimensional_characteristic.h>
#include <dimension_related_positional_boundary.h>
#include <SetOfpositional_boundary_member.h>
#include <dimension_related_positional_boundary_definition.h>
#include <SetOfpositional_boundary_member_definition.h>
#include <dimension_set.h>
#include <dimensional_characteristic_representation.h>
#include <dimensional_location_or_dimensional_size.h>
#include <dimensional_size_based_on_opposing_boundaries.h>
#include <directed_axis.h>
#include <documentation_layer_stratum.h>
#include <documentation_layer_technology.h>
#include <edge_based_2d_wireframe.h>
#include <edge_based_wireframe.h>
#include <ee_product_category.h>
#include <ee_product_category_relationship.h>
#include <ee_product_related_product_category.h>
#include <ee_product_specific_parameter_value_assignment.h>
#include <ee_rule_complex_clause.h>
#include <SetOfee_rule_simple_clause.h>
#include <ee_rule_simple_clause.h>
#include <ee_rule_function.h>
#include <ee_rule_conclusion_definition.h>
#include <ee_rule_definition.h>
#include <ee_rule_premise_definition.h>
#include <SetOfee_rule_complex_clause.h>
#include <electrical_isolation_removal_structure.h>
#include <filled_area_material_removal_structure.h>
#include <material_removal_feature.h>
#include <material_removal_feature_template.h>
#include <electrical_network_definition.h>
#include <electrical_requirement_occurrence.h>
#include <electromagnetic_compatibility_requirement_allocation.h>
#include <electromagnetic_requirement_occurrence.h>
#include <engineering_make_from.h>
#include <equivalent_functional_terminals_assignment.h>
#include <SetOffunctional_unit_usage_view_terminal_definition.h>
#include <equivalent_functional_unit_definition_assignment.h>
#include <SetOffunctional_unit_definition.h>
#include <explicitly_located_layer_connection_point.h>
#include <externally_defined_dimension_representation.h>
#include <SetOfexternal_definition.h>
#include <externally_defined_ee_product_definition.h>
#include <fabrication_technology_specification.h>
#include <feature_group_relationship.h>
#include <part_group_feature.h>
#include <SetOfpart_feature.h>
#include <feature_shape_composition_relationship.h>
#include <fiducial.h>
#include <fiducial_part_feature.h>
#include <part_tooling_feature.h>
#include <fiducial_stratum_feature.h>
#include <flatness_tolerance.h>
#include <font_definition.h>
#include <frozen_assignment.h>
#include <SetOffrozen_design_object.h>
#include <frozen_design_object.h>
#include <functional_specification.h>
#include <signal_specification.h>
#include <test_specification.h>
#include <functional_specification_to_requirement_occurrence_assignment.h>
#include <functional_terminal_group.h>
#include <functional_terminal_group_assignment.h>
#include <functional_unit_network_terminal_definition_bus_assignment.h>
#include <functional_unit_network_terminal_definition_node_assignment.h>
#include <functional_unit_terminal.h>
#include <functional_unit_terminal_bus_assignment.h>
#include <functional_unit_terminal_node_assignment.h>
#include <functional_usage_view_to_part_terminal_assignment.h>
#include <functional_usage_view_to_printed_part_template_terminal_assignment.h>
#include <gate_path_swap_specification.h>
#include <geometric_alignment.h>
#include <geometric_intersection.h>
#include <geometric_tolerance_qualifier.h>
#include <SetOfgeometric_tolerance.h>
#include <geometrically_bounded_2d_wireframe.h>
#include <geometrically_bounded_surface.h>
#include <guided_wave_bare_die_terminal.h>
#include <guided_wave_terminal.h>
#include <inter_stratum_feature_edge_segment_template.h>
#include <inter_stratum_feature_edge_template.h>
#include <inter_stratum_join_implementation.h>
#include <inter_stratum_join_relationship.h>
#include <interconnect_module.h>
#include <SetOfassembly_module.h>
#include <interconnect_module_component_stratum_based_terminal.h>
#include <interconnect_module_constraint_region.h>
#include <SetOfinterconnect_module_design_object_select.h>
#include <interconnect_module_design_object_select.h>
#include <SetOfinterconnect_module.h>
#include <interconnect_module_design_object_category.h>
#include <interconnect_module_edge.h>
#include <interconnect_module_edge_segment.h>
#include <interconnect_module_edge_segment_surface.h>
#include <interconnect_module_surface_feature.h>
#include <interconnect_module_edge_surface.h>
#include <interconnect_module_primary_surface.h>
#include <interconnect_module_product_assembly_view_fabrication_joint.h>
#include <SetOfinterconnect_module_component_stratum_based_terminal.h>
#include <interconnect_module_secondary_surface.h>
#include <interconnect_module_stratum_assembly_relationship.h>
#include <interconnect_module_stratum_based_terminal.h>
#include <interconnect_module_usage_view.h>
#include <restraint_condition.h>
#include <restrained_item_select.h>
#include <located_interconnect_module_thickness_requirement.h>
#include <interface_component.h>
#include <interface_component_allocation.h>
#include <mating_connector_component.h>
#include <mating_connector_part.h>
#include <printed_connector_template.h>
#include <packaged_connector.h>
#include <interface_mounted_join.h>
#include <interface_requirement_occurrence.h>
#include <next_higher_assembly_interface_requirement.h>
#include <interface_specification.h>
#include <interfaced_group_component.h>
#include <SetOfinterface_component.h>
#include <interfacial_connection.h>
#include <internal_probe_access_area.h>
#include <probe_access_area.h>
#include <internal_stratum_access.h>
#include <join_two_physical_connectivity_definition_supporting_printed_component.h>
#include <printed_component.h>
#include <SetOfstratum_feature.h>
#include <ListOfphysical_connectivity_definition.h>
#include <junction_vertex_allocation.h>
#include <trace_junction_or_via.h>
#include <laminate_text_component.h>
#include <laminate_text_string_component.h>
#include <horizontal_justification.h>
#include <vertical_justification.h>
#include <land_template_interface_terminal.h>
#include <land_template_join_terminal.h>
#include <layer.h>
#include <layer_qualified_layout_spacing_requirement_occurrence.h>
#include <layout_spacing_requirement_occurrence.h>
#include <pca_product_design_object_category.h>
#include <layout_spacing_requirement_non_conforming_design_object.h>
#include <SetOfassembly_or_interconnect_design_object_select.h>
#include <assembly_or_interconnect_design_object_select.h>
#include <lead_form_specification.h>
#include <length_trimmed_terminal.h>
#include <library_ee_product_definition.h>
#include <library_model.h>
#include <limit_dimension_representation.h>
#include <line_width_class.h>
#include <SetOfcurve_style.h>
#include <linear_extension.h>
#include <marking.h>
#include <marked_message_select.h>
#include <markable_item.h>
#include <pca.h>
#include <pcb.h>
#include <styled_text.h>
#include <font_select.h>
#include <registered_font.h>
#include <material_addition_feature.h>
#include <material_addition_feature_template.h>
#include <material_composition_relationship.h>
#include <material_electrical_conductivity_requirement_occurrence.h>
#include <material_shape_modification.h>
#include <material_specification.h>
#include <mating_connector_placement_relationship.h>
#include <mating_connector_termination.h>
#include <packaged_or_printed_terminal.h>
#include <maximum_dimension_representation.h>
#include <singular_dimension_representation.h>
#include <maximum_tolerance_characteristic.h>
#include <tolerance_characteristic.h>
#include <minimally_defined_component_terminal.h>
#include <minimum_dimension_representation.h>
#include <minimum_tolerance_characteristic.h>
#include <non_conductive_base_blind_via.h>
#include <numeric_parameter.h>
#include <operational_requirement_occurrence_relationship.h>
#include <relationship_operation.h>
#include <opposing_boundary_set_size_characteristic.h>
#include <tolerance_zone_opposing_boundary_set.h>
#include <package_body.h>
#include <package_body_bottom_surface.h>
#include <package_body_surface.h>
#include <package_body_top_surface.h>
#include <packaged_connector_component.h>
#include <packaged_connector_terminal_relationship.h>
#include <packaged_part_join_terminal.h>
#include <parallel_shape_element_relationship.h>
#include <parallelism_tolerance.h>
#include <part_array_feature.h>
#include <part_based_constraint_occurrence.h>
#include <part_connected_terminals_definition.h>
#include <SetOfpart_terminal.h>
#include <part_device_terminal_model_port_assignment.h>
#include <part_feature_model_port_assignment.h>
#include <part_mounting_feature.h>
#include <part_text_template.h>
#include <partially_plated_cutout.h>
#include <partially_plated_interconnect_module_edge.h>
#include <participant_date_and_time_assignment.h>
#include <pca_usage_view.h>
#include <pcb_usage_view.h>
#include <perpendicular_shape_element_relationship.h>
#include <perpendicularity_tolerance.h>
#include <physical_component_feature.h>
#include <physical_connectivity_abstraction_map.h>
#include <physical_connectivity_definition_relationship.h>
#include <physical_connectivity_interrupting_cutout.h>
#include <SetOfconductive_interconnect_element.h>
#include <physical_connectivity_make_from_relationship.h>
#include <physical_laminate_component.h>
#include <physical_network.h>
#include <SetOfjoin_relationship.h>
#include <physical_network_supporting_inter_stratum_feature.h>
#include <physical_network_supporting_stratum_feature_conductive_join.h>
#include <physical_node_requirement_to_implementing_component_allocation.h>
#include <SetOfinterface_mounted_join.h>
#include <SetOfassembly_joint.h>
#include <physical_unit_relationship.h>
#include <placement_group_area_assignment.h>
#include <planned_date_effectivity.h>
#include <planned_effectivity.h>
#include <planned_lot_effectivity.h>
#include <planned_serial_number_effectivity.h>
#include <plated_conductive_base_blind_via.h>
#include <plated_cutout.h>
#include <plated_cutout_edge_segment.h>
#include <plated_interconnect_module_edge.h>
#include <plated_interconnect_module_edge_segment.h>
#include <plus_minus_tolerance_characteristic.h>
#include <plus_minus_tolerance_range_representation.h>
#include <polarity_indication_feature.h>
#include <SetOfpackage_body_surface.h>
#include <position_tolerance_without_referenced_datum_system.h>
#include <pre_defined_dimension_qualifier.h>
#include <dimension_qualifiers.h>
#include <pre_defined_geometric_tolerance_qualifier.h>
#include <geometric_tolerance_qualifiers.h>
#include <primary_orientation_feature.h>
#include <primary_reference_terminal.h>
#include <primary_stratum_indicator_symbol.h>
#include <special_symbol_laminate_component.h>
#include <printed_connector_component.h>
#include <printed_connector_template_terminal_relationship.h>
#include <printed_part_template_join_terminal.h>
#include <printed_part_template_interface_terminal.h>
#include <printed_part_cross_section_template_terminal.h>
#include <printed_part_template_connected_terminals_definition.h>
#include <SetOfprinted_part_template_terminal.h>
#include <printed_part_template_terminal_relationship.h>
#include <product_association.h>
#include <profile_boundary_definition.h>
#include <true_profile.h>
#include <true_profile_representations.h>
#include <profile_boundary_definition_with_offsets.h>
#include <SetOftolerance_zone_boundary_member_offset.h>
#include <tolerance_zone_boundary_member_offset.h>
#include <offset_types.h>
#include <profile_of_any_line_tolerance_without_referenced_datum_system.h>
#include <profile_of_any_surface_tolerance_without_referenced_datum_system.h>
#include <projected_tolerance_zone_definition.h>
#include <projected_zone_height_characteristic.h>
#include <projected_zone_and_base_relationship.h>
#include <promissory_usage_relationship.h>
#include <purpose_occurrence.h>
#include <qualified_data_element.h>
#include <radius_edge_feature_shape.h>
#include <reference_functional_unit_assignment_to_part.h>
#include <requirement_composition.h>
#include <requirement_group_occurrence.h>
#include <right_angular_wedge.h>
#include <right_circular_cylinder.h>
#include <routed_interconnect_component.h>
#include <routed_packaged_component.h>
#include <routed_printed_component.h>
#include <rule_action.h>
#include <rule_adoption.h>
#include <rule_change_request.h>
#include <rule_creation.h>
#include <rule_expiration.h>
#include <rule_justification.h>
#include <rule_modification.h>
#include <rule_priority.h>
#include <rule_rejection.h>
#include <rule_request.h>
#include <rule_set.h>
#include <SetOfrule_priority.h>
#include <rule_set_group.h>
#include <SetOfrule_set.h>
#include <rule_submission.h>
#include <rule_supersedence.h>
#include <runout_tolerance_zone_definition_with_specified_angle.h>
#include <runout_zone_orientation.h>
#include <runout_tolerance_zone_orienting_relationship.h>
#include <secondary_orientation_feature.h>
#include <separate_geometric_tolerance_requirement.h>
#include <SetOfgeometric_tolerance_with_referenced_datum_system.h>
#include <shape_element_boundary_relationship.h>
#include <shape_element_composing_relationship.h>
#include <shape_element_constituent_relationship.h>
#include <shape_element_deriving_relationship.h>
#include <shape_formed_terminal.h>
#include <shell_based_2d_wireframe.h>
#include <shell_based_wireframe.h>
#include <shield.h>
#include <SetOfshieldable_item.h>
#include <shieldable_item.h>
#include <shield_allocation.h>
#include <simultaneous_geometric_tolerance_requirement.h>
#include <solid_of_linear_extrusion.h>
#include <special_symbol_part_template.h>
#include <specification_allocation.h>
#include <start_order.h>
#include <start_request.h>
#include <statistical_dimensional_tolerance.h>
#include <statistical_geometric_tolerance.h>
#include <statistical_tolerance_characteristic.h>
#include <step_edge_feature_shape.h>
#include <straightness_tolerance.h>
#include <stratum_average_surface.h>
#include <stratum_average_surface_shape.h>
#include <stratum_concept_to_physical_usage_view_assignment.h>
#include <stratum_feature_3d_shape.h>
#include <stratum_feature_in_stratum_3d_position.h>
#include <stratum_feature_3d_shape_select.h>
#include <stratum_feature_non_planar_2d_shape.h>
#include <stratum_feature_in_stratum_planar_position.h>
#include <stratum_feature_planar_representation_select.h>
#include <stratum_feature_styled_area_representation.h>
#include <SetOfstratum_feature_planar_shape.h>
#include <stratum_feature_planar_shape.h>
#include <stratum_feature_shape_stratum_average_surface_shape_relationship.h>
#include <stratum_feature_shape_stratum_surface_shape_relationship.h>
#include <stratum_surface_shape.h>
#include <stratum_interconnect_module_3d_position.h>
#include <stratum_interconnect_module_planar_position.h>
#include <stratum_make_from_relationship.h>
#include <stratum_surface_in_stratum_3d_position.h>
#include <stratum_surface_shape_select.h>
#include <stratum_technology_line_width_tolerance_assignment.h>
#include <substitute_product.h>
#include <surface_finish_specification.h>
#include <surface_prepped_terminal.h>
#include <symmetrical_tolerance_characteristic.h>
#include <symmetry_tolerance.h>
#include <terminal_pair_port_equivalence_relationship.h>
#include <ListOfanalytical_model_scalar_port.h>
#include <terminal_swap_specification.h>
#include <termination_constraint.h>
#include <SetOfmating_connector_termination.h>
#include <test_select_product.h>
#include <theoretically_exact_dimension_representation.h>
#include <thermal_component.h>
#include <thermal_feature.h>
#include <thermal_isolation_removal_structure.h>
#include <thermal_isolation_requirement_assignment.h>
#include <thermal_network_definition.h>
#include <thermal_requirement_allocation.h>
#include <thermal_requirement_occurrence.h>
#include <tolerance_specific_restraint_condition.h>
#include <SetOfgeometric_or_dimension_select.h>
#include <geometric_or_dimension_select.h>
#include <tolerance_zone_and_viewing_plane_orienting_relationship.h>
#include <viewing_plane.h>
#include <tolerance_zone_definition_with_per_unit_size_specification.h>
#include <tolerance_zone_per_unit_size_specification.h>
#include <SetOflength_data_element.h>
#include <tolerance_zone_definition_with_specified_orientation.h>
#include <orientation_select.h>
#include <viewing_plane_based_orientation.h>
#include <viewing_plane_definition.h>
#include <tolerance_zone_explicit_opposing_boundary_set.h>
#include <SetOftolerance_zone_boundary_member.h>
#include <tolerance_zone_implicit_opposing_boundary_set.h>
#include <total_runout_tolerance.h>
#include <transmission_line_functional_unit_terminal_allocation.h>
#include <transmission_line_functional_unit_to_routed_printed_component_allocation.h>
#include <unsupported_passage.h>
#include <unsupported_passage_dependent_non_functional_land.h>
#include <user_defined_dimension_qualifier.h>
#include <user_defined_geometric_tolerance_qualifier.h>
#include <via_and_contact_size_dependent_land.h>
#include <via_and_contact_size_dependent_non_functional_land.h>
#include <via_dependent_land.h>
#include <via_dependent_non_functional_land.h>
#include <volume_shape_projection.h>
#include <wire_terminal.h>
#include <digital_signal_flow_direction.h>
#include <analytical_model_port_assignment_select.h>
// - END SCHEMA ap210is
