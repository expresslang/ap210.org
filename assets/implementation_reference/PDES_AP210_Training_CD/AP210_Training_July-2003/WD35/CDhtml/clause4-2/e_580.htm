<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN""http://www.w3.org/TR/REC-html40/strict.dtd">
<HTML
><HEAD
><LINK
TITLE="AP-PUB Style Sheet"
HREF="../ap-pub.css"
REL="stylesheet"
TYPE="text/css"><TITLE
>Packaged_part</TITLE
><META
NAME="generator"
CONTENT="Jade 1.1/STEP AP to HTML 4.0"></HEAD
><BODY
><H2
>4.2.591 Packaged_part</H2
><DIV
CLASS="APPOBJDEF"
><DIV
CLASS="DESCRIPTION"
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The text description for this Application Object has not been fully updated to agree with the EXPRESS.</DIV
>
A Packaged_part is a type of a <A
CLASS="INTERNALREF"
HREF="e_672.htm"
>Physical_unit_usage_view</A
>. A Packaged_part may be a <A
CLASS="INTERNALREF"
HREF="e_576.htm"
>Packaged_connector</A
> or additionally an <A
CLASS="INTERNALREF"
HREF="e_9.htm"
>Altered_packaged_part</A
>. A Packaged_part describes a part that exists independently from any particular assembly on which it may be used.<DIV
CLASS="NOTEGROUP"
><P
>NOTES:</P
><OL
><LI
CLASS="NOTEINGROUP"
>The Packaged_part Application object does not indicate that a product used as a component is in a particular product category.</LI
><LI
CLASS="NOTEINGROUP"
>A Packaged_part sometimes is realized by installing one or more occurrences of <A
CLASS="INTERNALREF"
HREF="e_59.htm"
>Bare_die</A
> into a <A
CLASS="INTERNALREF"
HREF="e_584.htm"
>Package_body</A
>, bonding 
conductors between appropriate ports on the occurrence of the Bare_die and <A
CLASS="INTERNALREF"
HREF="e_591.htm"
>Package_terminal</A
> on the <A
CLASS="INTERNALREF"
HREF="e_573.htm"
>Package</A
>, filling the 
void between the occurrences of the Bare_die and the Package_body with an insulating potting material, and marking the 
realization with an identifier.  See Figure  <SPAN
CLASS="INTERNALREF"
>pp</SPAN
> for an illustration of a cutaway view of a Packaged_part.</LI
><LI
CLASS="NOTEINGROUP"
>Two Packaged_part models may be exchanged with this part of ISO 10303, depending on usage.
One may support the exchange information that maps the functionality of the Packaged_part to the bare_die, or dies, included in the Packaged_part; and information that maps the terminals of those instances of Bare_die to the terminals of the Packaged_part.
This mechanism provides maximum flexibility and information exchange and is characterized as a "white box" model.
This model is primarily included in the standard to support design to analysis activities.
Alternatively, one may map the functionality required directly to the Packaged_part terminals, and not populate the Bare_die. This is simpler, but does not provide as much information and is characterized as the "black box" model.</LI
></OL
></DIV
>&#13;</DIV
></DIV
><P
>The data associated with this application object are the following:</P
><UL
CLASS="APPOBJATTRLIST"
><LI
CLASS="APPOBJATTRLISTITEM"
>access_mechanisms</LI
><LI
CLASS="APPOBJATTRLISTITEM"
>implemented_function</LI
><LI
CLASS="APPOBJATTRLISTITEM"
>potting_compound</LI
><LI
CLASS="APPOBJATTRLISTITEM"
>used_package</LI
></UL
><DIV
CLASS="APPOBJATTRDEFCL4"
><H3
>4.2.591.1 access_mechanisms</H3
><DIV
CLASS="APPOBJREGATTRDESC"
><DIV
CLASS="DESCRIPTION"
>The access_mechanisms is an inverse relationship that specifies that the existence of the Packaged_part is dependent on the existence of the <A
CLASS="INTERNALREF"
HREF="e_583.htm"
>Packaged_part_terminal</A
> that specifies the Packaged_part as its 
associated_definition. There shall be zero or more Packaged_part_terminal for a Packaged_part.</DIV
></DIV
></DIV
><DIV
CLASS="APPOBJATTRDEFCL4"
><H3
>4.2.591.2 implemented_function</H3
><DIV
CLASS="APPOBJREGATTRDESC"
><DIV
CLASS="DESCRIPTION"
>The implemented_function specifies the role of the <A
CLASS="INTERNALREF"
HREF="e_410.htm"
>Functional_unit_usage_view</A
> for the Packaged_part.  The function specified shall be that mapped by the functional view terminal to physical view terminal 
allocation requirement.  The implemented_function need not be specified for a particular Packaged_part unless the access_mechanism is not an empty set.</DIV
></DIV
></DIV
><DIV
CLASS="APPOBJATTRDEFCL4"
><H3
>4.2.591.3 potting_compound</H3
><DIV
CLASS="APPOBJREGATTRDESC"
><DIV
CLASS="DESCRIPTION"
>The potting_compound specifies the <A
CLASS="INTERNALREF"
HREF="e_318.htm"
>Ee_material</A
> that is used to support the enclosed <A
CLASS="INTERNALREF"
HREF="e_59.htm"
>Bare_die</A
> in the Packaged_part. The potting_compound need not be specified for a particular Packaged_part.
The potting_compound may form the <A
CLASS="INTERNALREF"
HREF="e_584.htm"
>Package_body</A
> itself for some technologies when the Package_body 
is molded from the potting_compound.</DIV
></DIV
></DIV
><DIV
CLASS="APPOBJATTRDEFCL4"
><H3
>4.2.591.4 used_package</H3
><DIV
CLASS="APPOBJREGATTRDESC"
><DIV
CLASS="DESCRIPTION"
>The used_package specifies the <A
CLASS="INTERNALREF"
HREF="e_573.htm"
>Package</A
> of the Packaged_part.  There may be one or more used_package for a Packaged_part.  All members of used_package shall reference the same Ee_product_version.</DIV
></DIV
></DIV
><DIV
CLASS="FORMALCONSTRAINTS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal constraints:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The function implemented shall exist if and only if the size of the access_mechanisms is greater than zero and the size of the access_mechanisms shall be greater than zero if and only if the implemented_function exists.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The function implemented shall be the function whose terminals are mapped to the terminals of this Packaged_part.</DIV
></DIV
><DIV
CLASS="INFORMALCONSTRAINTS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal constraints:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The combination of implemented_function and used_package\ee_product_definition.version shall be unique within a population of Packaged_part.  In the case where the Package_external_reference is used the combination shall be extended to include the Package_external_reference.part_number string.</DIV
></DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: <DIV
CLASS="EXPRESSCODE"
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY packaged_part
  SUPERTYPE OF (packaged_connector ANDOR altered_packaged_part)
  SUBTYPE OF (physical_unit_usage_view);
    used_package         : SET [1:?] OF package_or_package_external_reference;
    potting_compound     : OPTIONAL ee_material;
    implemented_function : OPTIONAL functional_unit_usage_view;
  INVERSE
    access_mechanisms : SET [0:?] OF packaged_part_terminal FOR 
                        associated_definition;
WHERE
  WR1: NOT(EXISTS(implemented_function) XOR (SIZEOF(access_mechanisms) &#62; 0));
  WR2: single_package_version(SELF);
END_ENTITY; -- packaged_part
(*</PRE
></DIV
></DIV
></BODY
></HTML
>