<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN""http://www.w3.org/TR/REC-html40/strict.dtd">
<HTML
><HEAD
><LINK
TITLE="AP-PUB Style Sheet"
HREF="../ap-pub.css"
REL="stylesheet"
TYPE="text/css"><TITLE
>Assembly_module_component</TITLE
><META
NAME="generator"
CONTENT="Jade 1.1/STEP AP to HTML 4.0"></HEAD
><BODY
><H2
>4.2.44 Assembly_module_component</H2
><DIV
CLASS="APPOBJDEF"
><DIV
CLASS="DESCRIPTION"
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The text description for this Application Object has not been fully updated to agree with the EXPRESS.</DIV
>

An Assembly_module_component is a type of <A
CLASS="INTERNALREF"
HREF="e_34.htm"
>Assembly_component</A
>.
This application object is an occurrence of the usage view of an <A
CLASS="INTERNALREF"
HREF="e_43.htm"
>Assembly_module</A
>, and could be either a design reuse item or an occurrence of the usage view of a real item. <DIV
CLASS="NOTE"
><P
></P
>NOTE: Assembly_module_component represents an occurrence of a part concept for usage in one
or more design views for the same product, where each design view
is for a different version of the product.  This is useful in a
vertically integrated concurrent engineering environment, where
full data sharing is allowed, as it permits visibility into the
fact that there is a design definition of the component that is
an Assembly_module.</DIV
><DIV
CLASS="EXAMPLE"
><P
></P
>EXAMPLE: It is useful to consider a daughter board instance as an Assembly_module_component rather than as an 
instance of <A
CLASS="INTERNALREF"
HREF="e_580.htm"
>Packaged_part</A
> in this part of ISO 10303 for traceability to the 
design view for archival purposes for the design organization.</DIV
></DIV
></DIV
><P
>The data associated with this application object are the following:</P
><UL
CLASS="APPOBJATTRLIST"
><LI
CLASS="APPOBJATTRLISTITEM"
>access_mechanisms</LI
><LI
CLASS="APPOBJATTRLISTITEM"
>usage_definition</LI
></UL
><DIV
CLASS="APPOBJATTRDEFCL4"
><H3
>4.2.44.1 access_mechanisms</H3
><DIV
CLASS="APPOBJREGATTRDESC"
><DIV
CLASS="DESCRIPTION"
>The access_mechanisms is an inverse relationship that specifies that the existence of the Assembly_module_component is dependent 
on the existence of the <A
CLASS="INTERNALREF"
HREF="e_45.htm"
>Assembly_module_component_terminal</A
> that specifies the Assembly_module_component as 
its associated_component. There shall be two or more Assembly_module_component_terminals for an 
Assembly_module_component.</DIV
></DIV
></DIV
><DIV
CLASS="APPOBJATTRDEFCL4"
><H3
>4.2.44.2 usage_definition</H3
><DIV
CLASS="APPOBJREGATTRDESC"
><DIV
CLASS="DESCRIPTION"
>The usage_definition specifies the role of the <A
CLASS="INTERNALREF"
HREF="e_51.htm"
>Assembly_module_usage_view</A
> for the Assembly_module_component.</DIV
></DIV
></DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: <DIV
CLASS="EXPRESSCODE"
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_module_component
--tt tc1 wd9 modified
  SUPERTYPE OF(assembly_module_macro_component)
--tt tc1 wd11 modified
  SUBTYPE OF (physical_component);
    SELF\assembly_component.usage_definition : assembly_module_usage_view;
  INVERSE
    access_mechanisms : SET [2:?] OF assembly_module_component_terminal FOR 
                        associated_component;
END_ENTITY; -- assembly_module_component

(*</PRE
></DIV
></DIV
></BODY
></HTML
>