<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN""http://www.w3.org/TR/REC-html40/strict.dtd">
<HTML
><HEAD
><LINK
TITLE="AP-PUB Style Sheet"
HREF="../ap-pub.css"
REL="stylesheet"
TYPE="text/css"><TITLE
>Entities</TITLE
><META
NAME="generator"
CONTENT="Jade 1.1/STEP AP to HTML 4.0"></HEAD
><BODY
><DIV
CLASS="ENTITYDEFSSECTION"
><H2
><A
NAME="entities"
></A
>5.2.3 Entities</H2
><DIV
CLASS="ENTITYDEFSCL4"
><H3
><A
NAME="entitydefs"
></A
>5.2.3.1 Entity definitions</H3
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="180"
></A
>5.2.3.1.1 absorbed_dose_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An absorbed_dose_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Absorbed_dose_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY absorbed_dose_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\absorbed_dose_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = gray;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- absorbed_dose_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The absorbed_dose_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The absorbed_dose_measure_with_unit shall reference an si_unit with the name of gray.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="190"
></A
>5.2.3.1.2 activity_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An activity_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Activity_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY activity_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\activity_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = becquerel;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- activity_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The activity_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The activity_measure_with_unit shall reference a becquerel si_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="200"
></A
>5.2.3.1.3 add_design_object_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An add_design_object_assignment is an action_assignment that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Add_design_object_management_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY add_design_object_assignment
   SUBTYPE OF (action_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(it &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(it))
        AND (it\product_definition_relationship.name = 
                       'design object addition'))) = 1;
END_ENTITY; -- add_design_object_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The add_design_object_assignment shall have exactly one item
that is a product_definition_relationship with a name of 'design object addition'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The add_design_object_assignment shall have exactly one item that is a
managed_design_object that is not a product_definition_relationship 
with a name of 'design object addition' and is not referenced by 
another product_definition_relationship with a name of 
'design object addition', 'design object change', or 'design object deletion'
in the same design.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="210"
></A
>5.2.3.1.4 add_design_object_request_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An add_design_object_request_assignment is an action_request_assignment that implements
the ARM concepts of  <SPAN
CLASS="INTERNALREF"
>Add_design_object_management_relationship</SPAN
> and  <SPAN
CLASS="INTERNALREF"
>Change_request</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY add_design_object_request_assignment
   SUBTYPE OF (action_request_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(it &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(it))
        AND (it\product_definition_relationship.name = 
                         'design object addition'))) = 1;
END_ENTITY; -- add_design_object_request_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The add_design_object_request_assignment shall have exactly one item
that is a product_definition_relationship with a name of 'design object addition'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The add_design_object_request_assignment shall have exactly one item that is a
managed_design_object that is not a product_definition_relationship 
with a name of 'design object addition' and is not referenced by 
another product_definition_relationship with a name of 
'design object addition', 'design object change', or 'design object deletion'
in the same design.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="221"
></A
>5.2.3.1.5 altered_package_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A altered_package_terminal is a package_terminal that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Altered_package_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY altered_package_terminal
  ABSTRACT SUPERTYPE OF ((shape_formed_terminal ANDOR
      surface_prepped_terminal) ANDOR length_trimmed_terminal)
   SUBTYPE OF (package_terminal);
WHERE
 WR1: SIZEOF(QUERY ( sar &#60;* USEDIN (SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'terminal to be altered' ))
       = 1;
 WR2: (SELF.of_shape.definition\product_definition.description =
       'altered package');
END_ENTITY; -- altered_package_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The altered_package_terminal shall be referenced by one shape_aspect_relationship with a description of 'terminal to be altered' as the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The altered_package_terminal shall be an aspect of the shape of a product_definition with a description of 'altered package'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="230"
></A
>5.2.3.1.6 analytical_model</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An analytical_model is a representation that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Analytical_model</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY analytical_model
  SUBTYPE OF (representation);
UNIQUE
  UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 2;
  WR2: SIZEOF (QUERY (dr &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       dr.assigned_document.kind\document_type.product_data_type = 
       'language reference manual')) = 1;
  WR3: SIZEOF (QUERY (it &#60;* SELF.items |
       NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MODEL_PARAMETER' IN 
       TYPEOF (it)))) = 0;
  WR4: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       (rr\representation_relationship.name = 'access mechanism') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL_PORT' IN
       TYPEOF (rr.rep_2)))) &#62;= 1;
END_ENTITY; -- analytical_model
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within a population of analytical_model.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The analytical_model shall be referenced by exactly two
document_references.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The analytical_model shall be referenced by exactly one
document_reference where the document_type is 'language reference manual'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The analytical_model shall have at least one model_parameter in its set
of items.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The analytical_model shall be referenced as rep_1 in at least one
representation_relationship with a name of 'access mechanism' where the rep_2
references an analytical_model_port.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="244"
></A
>5.2.3.1.7 analytical_model_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An analytical_model_definition is a product_definition that implements the ARM concepts of: <SPAN
CLASS="INTERNALREF"
>Analytical_model_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY analytical_model_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs &#60;* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) &#60;= 1);
  WR2: SIZEOF (QUERY (adta &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) &#62;= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\analytical_model_definition))) = 0;
  WR7: SIZEOF (QUERY (prpc &#60;* USEDIN (SELF.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'simulation model')) &#62;= 1;
END_ENTITY; -- analytical_model_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the analytical_model_definition is a product_definition_with_associated_documents,
there shall be at most one document in the set of documentation_ids that has a
product_data_type of 'CAD filename'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The analytical_model_definition shall have exactly one creation date.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The analytical_model_definition shall have exactly one approval.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The analytical_model_definition shall have at least one organization or 
person_and_organization as the creator.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The analytical_model_definition shall have exactly one security_classification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The analytical_model_definition shall not be any other type of product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The analytical_model_definition shall have a product_category name of 'simulation model'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="258"
></A
>5.2.3.1.8 analytical_model_make_from_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An analytical_model_make_from_relationship is a representation and a representation_relationship
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Analytical_model_make_from</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY analytical_model_make_from_relationship
  SUBTYPE OF (representation, representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL'] *
       TYPEOF (SELF.rep_1)) = 1;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL'] *
       TYPEOF (SELF.rep_2)) = 1;
  WR3: SIZEOF( QUERY(rr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |NOT(
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAKE_FROM_MODEL_PORT_RELATIONSHIP' IN TYPEOF(rr.rep_2))))) = 0;
  WR4: SIZEOF( QUERY(rr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |NOT(
       (rr\representation_relationship.name = 'associated make from') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAKE_FROM_MODEL_PORT_RELATIONSHIP' IN TYPEOF(rr.rep_2))))) = 0;
  WR5: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL'] *
       TYPEOF (SELF)) = 0;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\analytical_model_make_from_relationship))) = 0;
END_ENTITY; -- analytical_model_make_from_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of rep_1 and rep_2 shall be unique within a population of analytical_model_make_from_relationship.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The analytical_model_make_from_relationship shall reference an analytical_model as its rep_1.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The analytical_model_make_from_relationship shall reference an analytical_model as its rep_2.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The analytical_model_make_from_relationship shall be related to only a make_from_model_port_relationship via a representation_relationship. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The analytical_model_make_from_relationship shall be related to only a make_from_model_port_relationship via a representation_relationship with a name of 'associated make from'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The analytical_model_make_from_relationship shall not be an analytical_model.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The analytical_model_make_from_relationship shall only be a representation, represetation_item or in addition to itself.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="274"
></A
>5.2.3.1.9 analytical_model_port</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An analytical_model_port is a representation that describes an interface 
point for an analytical_model.  An 
analytical_model_port implements the ARM constructs of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Analytical_model_port</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Analytical_model_scalar_port</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Analytical_model_vector_port</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Digital_analytical_model_port</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY analytical_model_port
  SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'distributed property') AND
       (it\descriptive_representation_item.description IN 
       ['true', 'false']))) = 1;
  WR2: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'nominal signal flow direction') AND
       (it\descriptive_representation_item.description IN 
       ['input direction',
       'output direction', 'bidirectional', 'unknown direction',
       'not applicable']))) &#60;= 1;
  WR3: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'port type') AND
       (it\descriptive_representation_item.description IN 
       ['string property type',
       'logical property type', 'physical property type',
       'boolean property type']))) = 1;
  WR4: SIZEOF (QUERY (am &#60;* QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') |
       rr\representation_relationship.name = 'access mechanism') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL' IN 
       TYPEOF (am.rep_1))) = 1;
  WR5: SIZEOF (QUERY (aga &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       aga.assigned_group\group.name IN ['scalar port', 'digital scalar port', 
       'vector port', 'digital vector port', 
       'digital analytical model port'])) &#60;= 1;
  WR6: (NOT (SIZEOF (QUERY (aga &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       aga.assigned_group\group.name IN ['vector port', 'digital vector port'])) 
       = 1)) OR
       (SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'size') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COUNT_MEASURE' IN
       TYPEOF (it\measure_with_unit.value_component)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONTEXT_DEPENDENT_UNIT' IN
       TYPEOF (it\measure_with_unit.unit_component)))) = 1);
  WR7: (NOT (SIZEOF (QUERY (aga &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       aga.assigned_group\group.name IN ['digital scalar port', 
       'digital vector port', 'digital analytical model port'])) = 1)) OR
       (SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'nominal signal flow direction') AND
    (it\descriptive_representation_item.description IN ['input direction',
       'output direction', 'bidirectional', 'unknown direction']))) = 1);
END_ENTITY; -- analytical_model_port
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The analytical_model_port shall have exactly one 
descriptive_representation_item with a name of 'distributed property' and a 
description of
'true' or 'false'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The analytical_model_port shall have at most one 
descriptive_representation_item with a name of 'nominal signal flow direction' 
and a
description of 'input direction', 'output direction', 'bidirectional',
'unknown direction', or 'not applicable'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The analytical_model_port shall have exactly one 
descriptive_representation_item with a name 
of 'port type' and a description of 'string property type', 
'logical property type', 'physical property type', or 'boolean property type'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The analytical_model_port shall be related to exactly one analytical_model 
as the 'access mechanism'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The analytical_model_port shall be assigned to at most one group with a
name of 'scalar port', 'digital scalar port', 'vector port', 'digital vector
port', or 'digital analytical model port'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the analytical_model_port is assigned to a group with a name of
'vector port' or 'digital vector port', it shall have exactly one
measure_representation_item with a name of 'size', a value_component that is a
count_measure, and a unit_component that is a context_dependent_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the analytical_model_port is assigned to a group with a name of
'digital scalar port', 'digital vector port', or 'digital analytical model
port', it shall have exactly one descriptive_representation_item with a name
of 'nominal signal flow direction' and a description of 'input direction',
'output direction', 'bidirectional', or 'unknown direction'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="296"
></A
>5.2.3.1.10 analytical_representation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An analytical_representation is a
representation that associates specific properties
with an analytical_model.
An analytical_representation implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Analytical_representation</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY analytical_representation
  SUBTYPE OF (representation);
UNIQUE
  UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION' IN
       TYPEOF (rr.rep_2))) &#62;= 1;
  WR2: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL' IN TYPEOF (rr.rep_1))) = 1;
END_ENTITY; -- analytical_representation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within a population of analytical_representation.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The analytical_representation shall have at least one
representation_relationship that references a
parameter_assignment_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The analytical_representation shall have exactly one
representation_relationship that references an analytical_model.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="308"
></A
>5.2.3.1.11 angular_dimension_with_orientation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An angular_dimension_with_orientation is a dimensional_location
that defines the angle between two shape elements.  
An angular_dimension_with_orientation implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Angular_dimension_with_direction_vector</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY angular_dimension_with_orientation
  SUBTYPE OF (dimensional_location);
WHERE
    wr1: SELF\shape_aspect_relationship.description = 'angular';
END_ENTITY; -- angular_dimension_with_orientation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The description of the angular_dimension_with_orientation shall be 'angular'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The angular_dimension_with_orientation shall have exactly one property_definition with a 
description of 'dimensional location property', and that property_definition either shall be 
represented by a representation that contains a placement with a name of 'orientation' or shall 
relate to a property_definition with a description of 'datum based vector orientation' to specify 
the 'measurement orientation'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the angular_dimension_with_orientation has a property_definition with a description of 
'dimensional location property' and that property_definition relates to a property_definition with 
a description of 'datum based vector orientation' to specify the 'measurement orientation', the 
combination of the shape_aspect specified as the related_shape_aspect, the shape_aspect specified as the relating_shape_aspect, 
and the property_definition with a description of 'datum based vector orientation' shall be unique.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the angular_dimension_with_orientation has a property_definition with a description of 
'dimensional location property' and that property_definition is represented by a representation 
that contains a placement with a name of 'orientation', the combination of the shape_aspect 
specified as the related_shape_aspect, the shape_aspect specified as the relating_shape_aspect, and the placement with a name of 
'orientation' shall be unique.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="320"
></A
>5.2.3.1.12 angularity_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An angularity_tolerance is a 
geometric_tolerance_with_specified_datum_system.  An angularity_tolerance
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Angularity_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY angularity_tolerance
  SUBTYPE OF (geometric_tolerance_with_specified_datum_system);
WHERE
  WR1: SELF\geometric_tolerance.name = 'angularity';
END_ENTITY; -- angularity_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name for the angularity_tolerance shall be 'angularity'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The toleranced_shape_aspect of the angularity_tolerance shall either lie on the 
boundary of the shape of the product; be a centre_of_symmetry with a description of 
either 'axis' or 'plane'; be a tangent with a description of 'plane'; be a 
part_template_definition; or be a composite_shape_aspect the 'composing' shape_aspects 
of which either are all of type part_template_definition, are all of type 
centre_of_symmetry and have the same description -- either 'axis' or 'plane', or are 
all of type tangent with a description of 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The angularity_tolerance shall have at most two physical_unit_datum in its referenced datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The angularity_tolerance shall have at least one physical_unit_datum in its referenced datum_system 
that has description of either 'axis' or 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the toleranced_shape_aspect of the angularity_tolerance is neither a 
centre_of_symmetry with a description of 'axis' nor a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'axis', the tolerance_zone_boundary shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="333"
></A
>5.2.3.1.13 applied_action_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_action_assignment is an action_assignment that specifies
a set of action_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_action_assignment
  SUBTYPE OF (action_assignment);
    items : SET [1:?] OF action_assigned_item;
END_ENTITY; -- applied_action_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="338"
></A
>5.2.3.1.14 applied_approval_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_approval_assignment is an approval_assignment that specifies
a set of approval_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_approval_assignment 
 SUBTYPE OF (approval_assignment); 
 items : SET [1:?] OF approval_assigned_item; 
END_ENTITY; -- applied_approval_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="343"
></A
>5.2.3.1.15 applied_certification_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_certification_assignment is a certification_assignment that
specifies a set of certification_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_certification_assignment
  SUBTYPE OF (certification_assignment);
  items : SET [1:?] OF certification_assigned_item;
END_ENTITY; -- applied_certification_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="348"
></A
>5.2.3.1.16 applied_classification_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_classification_assignment is a group_assignment that specifies
a set of classification_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_classification_assignment
   SUBTYPE OF (group_assignment);
     items : SET [1:?] OF classification_assigned_item;
END_ENTITY; -- applied_classification_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="353"
></A
>5.2.3.1.17 applied_contract_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_contract_assignment is a contract_assignment that specifies
a set of contract_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_contract_assignment
  SUBTYPE OF (contract_assignment);
  items : SET [1:?] OF contract_assigned_item;
END_ENTITY; -- applied_contract_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="358"
></A
>5.2.3.1.18 applied_date_and_time_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_date_and_time_assignment is a date_and_time_assignment that
specifies a set of date_and_time_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_date_and_time_assignment
  SUBTYPE OF (date_and_time_assignment);
  items : SET [1:?] OF date_and_time_assigned_item;
WHERE
  WR1: applied_date_time_correlation
       (SELF,'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN');
  WR2: (NOT (SELF.role\date_time_role.name = 'participant date and time')) OR
       (SIZEOF (QUERY (ra &#60;* QUERY (it &#60;* SELF.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_ACTION' IN
       TYPEOF (it)) |
       NOT (SIZEOF (USEDIN (ra,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS')) = 1))) = 0);
END_ENTITY; -- applied_date_and_time_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The role of the applied_date_and_time_assignment shall correlate with the
items of the applied_date_and_time_assignment.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the applied_date_and_time_assignment has a role of 'participant date
and time', each rule_action in the set of items shall have exactly one
applied_person_and_organization_assignment.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="366"
></A
>5.2.3.1.19 applied_date_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_date_assignment is a date_assignment that specifies a set of
date_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_date_assignment
  SUBTYPE OF (date_assignment);
  items : SET [1:?] OF date_assigned_item;
WHERE
  WR1: applied_date_correlation (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN');
END_ENTITY; -- applied_date_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The role of the applied_date_assignment shall correlate with the
items of the applied_date_assignment.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="373"
></A
>5.2.3.1.20 applied_document_reference</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_document_reference is a document reference that specifies
a set of document_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_document_reference
  SUBTYPE OF (document_reference);
  items : SET [1:?] OF document_assigned_item;
END_ENTITY; -- applied_document_reference
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="378"
></A
>5.2.3.1.21 applied_group_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_group_assignment is a group_assignment that specifies
a set of group_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_group_assignment
 SUBTYPE OF (group_assignment);
     items : SET [1:?] OF group_assigned_item;
END_ENTITY; -- applied_group_assignment
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the applied_group_assignment has an assigned_group that is a 
functional_terminal_group then it shall only have items that are
functional_unit_terminal_definitions with a description of 
'scalar terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="385"
></A
>5.2.3.1.22 applied_organization_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_organization_assignment is an organization_assignment that
specifies a set of organization_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_organization_assignment
  SUBTYPE OF (organization_assignment);
  items : SET [1:?] OF organization_assigned_item;
END_ENTITY; -- applied_organization_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="390"
></A
>5.2.3.1.23 applied_person_and_organization_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_person_and_organization_assignment is a
person_and_organization_assignment that specifies a set of
person_and_organization_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_person_and_organization_assignment
  SUBTYPE OF (person_and_organization_assignment);
  items : SET [1:?] OF person_and_organization_assigned_item;
END_ENTITY; -- applied_person_and_organization_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="395"
></A
>5.2.3.1.24 applied_person_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_person_assignment is a person_assignment that specifies
a set of person_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_person_assignment
 SUBTYPE OF (person_assignment);
     items : SET [1:?] OF person_assigned_item;
END_ENTITY; -- applied_person_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="400"
></A
>5.2.3.1.25 applied_promissory_usage_in_product_model_assignment</H4
>An applied_promissory_usage_in_product_model_assignment is a group_assignment that specifies
a set of promissory_usage_in_product_model_assigned_item. One item shall be a product_concept and the other item shall be a product_definition.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_promissory_usage_in_product_model_assignment
 SUBTYPE OF (group_assignment);
     items : SET [1:?] OF promissory_usage_in_product_model_assigned_item;
WHERE
 WR1: SIZEOF(QUERY(pm &#60;* items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_CONCEPT' IN TYPEOF(pm)
        )) = 1;
 WR2: SIZEOF(QUERY(pd &#60;* items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION' IN TYPEOF(pd)
        )) = 1;
 WR3: SIZEOF(items) = 2;
 WR4: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROMISSORY_USAGE_IN_PRODUCT_MODEL' IN TYPEOF(SELF\group_assignment.assigned_group);
 WR5: SIZEOF(USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) &#60;= 1;
END_ENTITY; -- applied_promissory_usage_in_product_model_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="404"
></A
>5.2.3.1.26 applied_security_classification_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An applied_security_classification_assignment is a
security_classification_assignment that specifies a set of
security_classification_assigned_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY applied_security_classification_assignment
  SUBTYPE OF (security_classification_assignment);
  items : SET [1:?] OF security_classification_assigned_item;
END_ENTITY; -- applied_security_classification_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="409"
></A
>5.2.3.1.27 array_placement_group_component_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An array_placement_group_component_definition is a assembly_group_component_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Array_placement_group</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY array_placement_group_component_definition
  SUPERTYPE OF (ONEOF(linear_array_placement_group_component_definition,
                      rectangular_array_placement_group_component_definition))
  SUBTYPE OF (assembly_group_component_definition);
END_ENTITY; -- array_placement_group_component_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="415"
></A
>5.2.3.1.28 array_placement_group_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An array_placement_group_component_shape_aspect is a assembly_group_component_shape_aspect that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Array_placement_group</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY array_placement_group_component_shape_aspect
  SUPERTYPE OF (ONEOF(linear_array_placement_group_component_shape_aspect,
                      rectangular_array_placement_group_component_shape_aspect))
  SUBTYPE OF (assembly_group_component_shape_aspect);
END_ENTITY; -- array_placement_group_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="421"
></A
>5.2.3.1.29 assembly_bond_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An assembly_bond_definition is a shape_aspect
that defines a joint that uses material to bond together portions
of the assembly.  An assembly_bond_definition implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Assembly_bond_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_bond_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
  WR2: SIZEOF (QUERY (aga &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BOND_CATEGORY' IN
       TYPEOF (aga.assigned_group))) = 1;
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 1' ))  = 1;
  WR4: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 2' ))  = 1;
  WR5: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PRODUCT_DEFINITION' IN TYPEOF (SELF.of_shape.definition))
       AND
       (SIZEOF (QUERY (prpc &#60;* USEDIN (SELF.of_shape.definition.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'technology specific model')) &#62;= 1));
END_ENTITY; -- assembly_bond_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name of the assembly_bond_definition shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The assembly_bond_definition shall have exactly one material_designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The assembly_bond_definition shall be in exactly one bond_category.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The assembly_bond_definition shall be related to exactly one shape_aspect as the 'bonded feature 1'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The assembly_bond_definition shall be related to exactly one shape_aspect as the 'bonded feature 2'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The assembly_bond_definition shall be an aspect of the shape of the externally_defined_product_definition of a 'technology specific model' product. </DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="436"
></A
>5.2.3.1.30 assembly_definition</H4
>An assembly_definition is a physical_unit.  An assembly_definition implements
the ARM concepts of a  <SPAN
CLASS="INTERNALREF"
>Pca</SPAN
> and
a  <SPAN
CLASS="INTERNALREF"
>Pca_usage_view</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_definition
 SUBTYPE OF (physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR 
        (SELF\product_definition.name = 'assembly module');
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design')) OR
       (SIZEOF (QUERY (du &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_ASSEMBLY_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_ASSEMBLY_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name = 'assembly module')
        )) = 1);
  WR4: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'pca terminal'))) &#62;= 2))) = 0);
END_ENTITY; -- assembly_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The assembly_definition shall be a definition of a product that has a name of 'assembly module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the assembly_definition is a physical design, it shall relate to exactly
one assembly_definition, externally_defined_assembly_definition, or 
library_defined_assembly_definition that is a physical design usage with a 
name of 'assembly module' as the design usage.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the assembly_definition has a frame_of_reference name of 'physical design
usage', it shall have at least two shape_aspects that are 
assembly_module_terminals with a description of 'pca terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="447"
></A
>5.2.3.1.31 assembly_group_component_definition</H4
>An assembly_group_component_definition is a component_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Assembly_group_component</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_group_component_definition
  SUBTYPE OF (component_definition);
WHERE
  WR1: (SIZEOF (QUERY (gc &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'group component') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (gc.related_product_definition)))) &#62;= 1)  OR
       (SIZEOF (QUERY(agcsa &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_GROUP_COMPONENT_SHAPE_ASPECT' IN TYPEOF (agcsa)))) = 0);
  WR2: (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_JOINT' IN TYPEOF (aj)) AND
       (SIZEOF (QUERY( acu &#60;* USEDIN (aj\shape_aspect_relationship.relating_shape_aspect,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
       AND (acu\product_definition_relationship.relating_product_definition = SELF)
       )) &#62;= 1))) &#62;= 1);
  WR3: (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj))AND
       (SIZEOF (QUERY( acu &#60;* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
        AND (acu\product_definition_relationship.relating_product_definition = SELF)
        )) = 0))) = 0);
  WR4: (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)) AND
       (SIZEOF (QUERY( cl &#60;* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect.of_shape.definition,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'REPRESENTATION.ITEMS') |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_LOCATION' IN TYPEOF (cl))
        AND (aj IN cl\representation.items))) = 0))) = 0);
END_ENTITY; -- assembly_group_component_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The assembly_group_component_definition shall be related to at least one component_definition by a product_definition_relationship with a name of 'group component' or it shall be a definition for an assembly_component_group_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the assembly_group_component_definition is referenced by an
assembly_joint through the of_shape attribute, at least one of the members
of component_definition that are related by the relating_shape_aspect of that
assembly_joint shall be related by members of assembly_component_usage to
this assembly_group_component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the assembly_group_component_definition is referenced by an
assembly_joint through the of_shape attribute, each member
of component_definition that are related by the related_shape_aspect of that
assembly_joint shall be related by members of assembly_component_usage to
this assembly_group_component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the assembly_group_component_definition is referenced by an assembly_joint through the of_shape.definition attribute, the component_definition that is related by the assembly_joint\shape_aspect_relationship.related_shape_aspect.of_shape.definition attribute of that assembly_joint shall be positioned by a member of component_location which also references that assembly_joint. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="457"
></A
>5.2.3.1.32 assembly_group_component_definition_placement_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A assembly_group_component_definition_placement_link is a product_definition and a product_definition_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Assembly_component_placement_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_group_component_definition_placement_link
  SUBTYPE OF (product_definition,product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :&#60;&#62;:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\assembly_group_component_definition_placement_link)) = 0;
  WR5: SELF\product_definition.name = '';
  WR6: SELF\product_definition_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) = 1;
END_ENTITY; -- assembly_group_component_definition_placement_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The assembly_group_component_definition_placement_link shall relate to only a component_definition in the related_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The assembly_group_component_definition_placement_link shall relate to only a component_definition in the relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of assembly_group_component_definition_placement_link shall be only assembly_group_component_definition_placement_link, product_definition, and product_definition_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the product_definition supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the product_definition_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each assembly_group_component_definition_placement_link shall be referenced exactly once by a product_definition_relationship related_product_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="471"
></A
>5.2.3.1.33 assembly_group_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An assembly_group_component_shape_aspect is a component_shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Assembly_group_component</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_group_component_shape_aspect
  SUBTYPE OF (component_shape_aspect);
WHERE
  WR1: (SIZEOF (QUERY (gc &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'group component') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (gc.related_shape_aspect))))
       &#62;= 1);
END_ENTITY; -- assembly_group_component_shape_aspect
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The assembly_group_component_shape_aspect shall be related to at least
one component_shape_aspect by a shape_aspect_relationship with a name of 'group component'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="479"
></A
>5.2.3.1.34 assembly_group_component_shape_aspect_placement_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An assembly_group_component_shape_aspect_placement_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Assembly_component_placement_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_group_component_shape_aspect_placement_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\assembly_group_component_shape_aspect_placement_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) = 1;
END_ENTITY; -- assembly_group_component_shape_aspect_placement_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The assembly_group_component_shape_aspect_placement_link shall relate to only a component_shape_aspect in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The assembly_group_component_shape_aspect_placement_link shall relate to only a component_shape_aspect in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of assembly_group_component_shape_aspect_placement_link shall be only assembly_group_component_shape_aspect_placement_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each assembly_group_component_shape_aspect_placement_link shall be referenced exactly once by a shape_aspect_relationship related_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="493"
></A
>5.2.3.1.35 assembly_joint</H4
>An assembly_joint is a shape_aspect_relationship and
a shape_aspect that is the result of a physical connection between two
components in the assembly.  The order shall be inferred from the
use of relating and related attributes on shape_aspect_relationship.
An assembly_joint implements the ARM
concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_joint</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembled_with_bonding</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembled_with_fasteners</SPAN
></LI
></UL
></DIV
>
<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_joint
  SUBTYPE OF (shape_aspect_relationship, shape_aspect);
WHERE
  WR1: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       (SELF.relating_shape_aspect\shape_aspect.description IN 
       ['assembly module component terminal', 
       'bare die component terminal',
       'interconnect component join terminal', 
       'interconnect module component terminal',  
       'package terminal occurrence', 
       'packaged component join terminal'])) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_MOUNTING_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect));
  WR2: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description IN 
       ['assembly module component terminal', 
       'bare die component terminal', 
       'interconnect component join terminal', 
       'interconnect module component terminal',  
       'package terminal occurrence', 
       'packaged component join terminal'])) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_MOUNTING_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect));
  WR3: (NOT (SELF\shape_aspect_relationship.name = 
       'assembled with bonding')) OR
       (SIZEOF (QUERY (ddu &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'default definition usage') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_BOND_DEFINITION' IN
       TYPEOF (ddu.relating_shape_aspect))) = 1);
  WR4: (NOT (SELF\shape_aspect_relationship.name = 
       'assembled with bonding')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'bond assembly position') AND
       (SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM' IN TYPEOF (it)) AND
       (it\representation_item.name = 'assembly position'))) = 1))) = 1)) &#60;= 1);
  WR5: (NOT (SELF\shape_aspect_relationship.name = 
       'assembled with fasteners')) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition));
  WR6: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) OR
       is_assembly_module_design(SELF.of_shape.definition); 
  WR7: (NOT (SELF\shape_aspect_relationship.name =
       'assembled with bonding')) OR
       (SIZEOF (QUERY (ddu &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'default definition usage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_BOND_DEFINITION' IN
       TYPEOF (ddu.relating_shape_aspect)) AND
       (SIZEOF (QUERY (sar &#60;* USEDIN (ddu.relating_shape_aspect,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 1' ))  = 1)
       AND (SIZEOF (QUERY (sar &#60;* USEDIN (ddu.relating_shape_aspect,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 1' ))  = 1)
       )) = 1);
  WR8: acyclic_shape_aspect_relationship(SELF,
       [SELF\shape_aspect_relationship.related_shape_aspect],
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.'+
       'ASSEMBLY_JOINT');
END_ENTITY; -- assembly_joint
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The assembly_joint shall have a relating_shape_aspect that references
either a component_terminal with a description of 'assembly module component
terminal', 'bare die component terminal', 'interconnect component join
terminal', 'interconnect module component terminal', 
'package terminal occurrence', or  'packaged component join terminal', or a
component_interface_terminal or a component_mounting_feature or an
interconnect_module_component_surface_feature.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The assembly_joint shall have a related_shape_aspect that references
either a component_terminal with a description of 'assembly module component
terminal', 'bare die component terminal', 'interconnect component join
terminal', 'interconnect module component terminal', 
'package terminal occurrence', or  'packaged component join terminal', or a
component_interface_terminal or a component_mounting_feature or an
interconnect_module_component_surface_feature.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the name of the shape_aspect_relationship of the assembly_joint is
'assembled with bonding', it shall be related to exactly one  
assembly_bond_definition as the 'default definition usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the name of the shape_aspect_relationship of the assembly_joint is
'assembled with bonding', it shall have at most one property_definition that
is associated with exactly one representation with a name of 'bond assembly
position' that contains exactly one mapped_item with the name 'assembly
position'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the name of the shape_aspect_relationship of the assembly_joint is 
'assembled with fasteners', it shall be an aspect of the shape of an assembly_group_component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The assembly_joint is shall be an aspect of the shape of a physical_unit that is an assembly module design or of an assembly_group_component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the name of the shape_aspect_relationship of the assembly_joint is 'assembled with bonding', its bonded features shall be defined by the referenced features.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The members of assembly_joint shall form a directed acyclic graph with the relating_shape_aspect, related_shape_aspect attributes of assembly_joint.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="513"
></A
>5.2.3.1.36 assembly_module_interface_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An assembly_module_interface_terminal is an assembly_module_terminal that implement the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Assembly_module_interface_terminal</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_module_interface_terminal
  SUBTYPE OF (assembly_module_terminal);
END_ENTITY; -- assembly_module_interface_terminal
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="519"
></A
>5.2.3.1.37 assembly_module_join_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An assembly_module_join_terminal is an assembly_module_terminal that implement the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Assembly_module_join_terminal</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_module_join_terminal
  SUBTYPE OF (assembly_module_terminal);
END_ENTITY; -- assembly_module_join_terminal
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="525"
></A
>5.2.3.1.38 assembly_module_macro_component_join_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An assembly_module_macro_component_join_terminal is a shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Assembly_module_macro_component_join_terminal</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_module_macro_component_join_terminal
  SUBTYPE OF (component_terminal);
WHERE
  WR1: NOT (SELF\shape_aspect.description IN 
      ['bare die component terminal', 
       'component termination passage join terminal', 
       'conductive interconnect element terminal', 
       'interconnect component join terminal', 
       'interconnect module component terminal', 'land join terminal', 
       'minimally defined component terminal',
       'non functional land join terminal', 
       'packaged component join terminal', 
       'printed component join terminal', 'package terminal occurrence',
       'via terminal']);
END_ENTITY; -- assembly_module_macro_component_join_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The assembly_module_macro_component_join_terminal shall not have a description of
'bare die component terminal', 'component termination
passage join terminal', 'conductive interconnect element terminal',
'interconnect component join terminal', 'interconnect module component
terminal', 'land join terminal', 'minimally defined component terminal',
'non functional land join terminal', 'packaged component join terminal',
'printed component join terminal', 'package terminal occurrence',
or 'via terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="533"
></A
>5.2.3.1.39 assembly_module_terminal</H4
>An assembly_module_terminal is a shape_aspect that implement the ARM concepts of: <DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Part_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Pca_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_module_terminal
  SUPERTYPE OF (ONEOF(
           assembly_module_interface_terminal, 
           assembly_module_join_terminal))
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
  WR2: NOT EXISTS(SELF.of_shape.definition\product_definition.name) OR
      (SELF.of_shape.definition\product_definition.name = 'assembly module');
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) &#62;= 1))) = 0;
  WR4: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) &#60;= 1;
  WR5: (NOT (SELF\shape_aspect.description = 'pca terminal')) OR
       ((SIZEOF(TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_DEFINITION',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_ASSEMBLY_DEFINITION',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_ASSEMBLY_DEFINITION']) &#62;=1)
       AND (SELF.of_shape.definition\product_definition.
       frame_of_reference.name = 'physical design usage'));
  WR6: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 'connection zone')) = 1;
  WR7: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 'interface terminal')) &#60;= 1;
END_ENTITY; -- assembly_module_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The product_definition name shall exist. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The assembly_module_terminal shall be the shape_aspect of a product_definition of a product that has a name of 'assembly module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The assembly_module_terminal shall have at least one
shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The assembly_module_terminal shall be related to at most one 
part_connected_terminals_definition as a 'member connected terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the assembly_module_terminal has a description of 'pca terminal',
it shall be an aspect of the shape of an assembly_definition, 
externally_defined_assembly_definition, or library_defined_assembly_definition 
that has a frame_of_reference name 'physical design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The assembly_module_terminal shall be related to exactly one shape_aspect with 
a description of 'connection zone'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The assembly_module_terminal shall be related to at most one shape_aspect with a description of 'interface terminal'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The assembly_module_terminal shall be related to at most one assembly_module_usage_view_connector_relationship.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="554"
></A
>5.2.3.1.40 assembly_module_usage_view_connector_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A assembly_module_usage_view_connector_relationship is a type of mapped_item that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>assembly_module_usage_view_connector_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY assembly_module_usage_view_connector_relationship
  SUBTYPE OF (mapped_item);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_3D' IN TYPEOF (SELF\mapped_item.mapping_target);
  wr2: SELF\mapped_item.mapping_source.mapped_representation\representation.name =
       '3d bound volume shape';
  wr3:  SIZEOF (QUERY (pdr &#60;* USEDIN 
       ( SELF\mapped_item.mapping_source.mapped_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_CONNECTOR',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_CONNECTOR',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_CONNECTOR'] * 
        TYPEOF (pdr.definition.definition) ) = 1) )) = 1;
  wr4:  SIZEOF (QUERY (r &#60;* USEDIN ( SELF\representation_item,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') |
        SIZEOF (QUERY (pdr &#60;* USEDIN (r,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION' IN TYPEOF(pdr.definition.definition))
         AND
        (pdr.definition.definition.
          frame_of_reference\application_context_element.name = 
          'physical design usage')
          AND
          (pdr.definition.definition\product_definition.
          name = 'assembly module')
           )) = 1 )) = 1;
END_ENTITY; -- assembly_module_usage_view_connector_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The assembly_module_usage_view_connector_relationship shall have an axis2_placement_3d as a placement. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The assembly_module_usage_view_connector_relationship shall place a 3d representation. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The assembly_module_usage_view_connector_relationship shall place a 3d representation of a packaged_connector,
externally_defined_packaged_connector, or a library_defined_packaged_connector. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The assembly_module_usage_view_connector_relationship shall place the 3d representation into a representation
of a product_definition that is an 'assembly module'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="565"
></A
>5.2.3.1.41 auxiliary_characteristic_dimension_representation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An auxiliary_characteristic_dimension_representation is a
dimensional_characteristic_representation
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Dimensional_characteristic_representation</SPAN
>
 where
the ARM attribute "auxiliary_dimension_representation" has a value of TRUE.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY auxiliary_characteristic_dimension_representation
 SUBTYPE OF (dimensional_characteristic_representation);
END_ENTITY; -- auxiliary_characteristic_dimension_representation
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="571"
></A
>5.2.3.1.42 bare_die</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bare_die is a physical_unit that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Bare_die</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bare_die
 SUBTYPE OF (physical_unit);
WHERE
  WR1: SIZEOF (QUERY (ifdu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\property_definition_relationship.name = 'implemented function') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifdu.relating_product_definition)) AND
       (ifdu.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'device unit technology') |
       dut.relating_property_definition\property_definition.name = 
       'unit technology')) = 1)) = 1;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 2))) = 0;
END_ENTITY; -- bare_die
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bare_die shall be related to exactly one functional_unit with a
frame_of_reference name of 'functional design usage' as the 'implemented
function'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bare_die shall have exactly one property_definition that is related
to exactly one property_definition with a name of 'unit technology' as the
'device unit technology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The bare_die shall have at least two shape_aspects that are bare_die_terminals.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The bare_die shall have exactly one representation with the name of material property data
that shall be related to cartesian_points with names of 
'least material condition centroid location' and 'maximum material condition centroid location'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="583"
></A
>5.2.3.1.43 bare_die_bottom_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bare_die_bottom_surface is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Bare_die_bottom_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bare_die_bottom_surface
 SUBTYPE OF (bare_die_surface);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\bare_die_bottom_surface ||
       SELF\part_mounting_feature ||
       SELF\bare_die_surface)) = 0;
END_ENTITY; -- bare_die_bottom_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bare_die_bottom_surface shall be the aspect of the shape of a bare_die,
externally_defined_bare_die, or library_defined_bare_die.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bare_die_bottom_surface shall be on the boundary of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The bare_die_bottom_surface shall be no other subtype of shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="593"
></A
>5.2.3.1.44 bare_die_edge_segment_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bare_die_edge_segment_surface is a shape_aspect and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Bare_die_edge_segment_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bare_die_edge_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  wr1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  wr2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  wr3: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE_EDGE_SURFACE' IN TYPEOF
       (ce.relating_shape_aspect) ))) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\bare_die_edge_segment_surface)) = 0;
END_ENTITY; -- bare_die_edge_segment_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bare_die_edge_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bare_die_edge_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The edge_segment_vertex instances referenced shall not be the same instance of edge_segment_vertex.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The bare_die_edge_segment_surface shall be related to
exactly one bare_die_edge_surface as the 'composed surface'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The bare_die_edge_segment_surface shall not be in a complex instance other 
than with it's immediate supertypes. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="605"
></A
>5.2.3.1.45 bare_die_edge_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bare_die_edge_surface is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Bare_die_edge_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bare_die_edge_surface
 SUBTYPE OF (bare_die_surface);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\part_mounting_feature ||
       SELF\bare_die_edge_surface ||
       SELF\bare_die_surface)) = 0;
END_ENTITY; -- bare_die_edge_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bare_die_edge_surface shall be the aspect of the shape of a bare_die,
externally_defined_bare_die, or library_defined_bare_die.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bare_die_edge_surface shall be on the boundary of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The bare_die_edge_surface shall be no other subtype of shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="615"
></A
>5.2.3.1.46 bare_die_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bare_die_surface is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Bare_die_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bare_die_surface
 ABSTRACT SUPERTYPE OF (ONEOF( bare_die_bottom_surface, 
                         bare_die_top_surface, 
                        bare_die_edge_surface))
 SUBTYPE OF (part_mounting_feature);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
END_ENTITY; -- bare_die_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bare_die_surface shall be the aspect of the shape of a bare_die,
externally_defined_bare_die, or library_defined_bare_die.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bare_die_surface shall be on the boundary of the product.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="624"
></A
>5.2.3.1.47 bare_die_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bare_die_terminal is a minimally_defined_bare_die_terminal that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Bare_die_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bare_die_terminal
  SUBTYPE OF (minimally_defined_bare_die_terminal);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE' IN 
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (eca &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'external connection area') |
       eca.related_shape_aspect\shape_aspect.description = 'connection zone')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
  WR4: SIZEOF (QUERY (eca &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'seating plane zone') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONNECTION_ZONE_INTERFACE_PLANE_RELATIONSHIP' IN 
       TYPEOF (eca.related_shape_aspect))) &#60;= 1;
END_ENTITY; -- bare_die_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bare_die_terminal shall be a terminal of a bare_die.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bare_die_terminal shall relate to exactly one shape_aspect that has a
description of 'connection zone' as the 'external connection area'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The bare_die_terminal shall have exactly one material designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The bare_die_terminal shall have no more than one 'seating plane zone'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="635"
></A
>5.2.3.1.48 bare_die_top_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bare_die_top_surface is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Bare_die_top_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bare_die_top_surface
 SUBTYPE OF (bare_die_surface);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\part_mounting_feature ||
       SELF\bare_die_top_surface ||
       SELF\bare_die_surface)) = 0;
END_ENTITY; -- bare_die_top_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bare_die_top_surface shall be the aspect of the shape of a bare_die,
externally_defined_bare_die, or library_defined_bare_die.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bare_die_top_surface shall be on the boundary of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The bare_die_top_surface shall be no other subtype of shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="645"
></A
>5.2.3.1.49 bond_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bond_category is a group and an external_definition that implements the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>External_definition</SPAN
> in the role of
bond category.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bond_category
  SUBTYPE OF (group, external_definition);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
END_ENTITY; -- bond_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bond_category shall be referenced by exactly one document.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="653"
></A
>5.2.3.1.50 bus_element_link</H4
>A bus_element_link is a product_definition and a product_definition_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Bus_element_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bus_element_link
  SUBTYPE OF (product_definition,product_definition_relationship);
UNIQUE
  UR1: SELF\product_definition_relationship.related_product_definition,
       SELF\product_definition_relationship.relating_product_definition;
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :&#60;&#62;:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BUS_STRUCTURAL_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'NETWORK_NODE_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition));
  WR3: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BUS_STRUCTURAL_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'NETWORK_NODE_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition));
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\bus_element_link)) = 0;
  WR5: NOT EXISTS(SELF\product_definition.name) OR 
        (SELF\product_definition.name = '');
  WR6: SELF\product_definition_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) &#62;= 1;
END_ENTITY; -- bus_element_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of related, relating attributes inherited from product_definition_relationship be unique within a population of bus_element_link.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bus_element_link shall relate to only a bus_structural_definition or a network_node_definition in the related_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The bus_element_link shall relate to only a bus_structural_definition or a network_node_definition in the relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of bus_element_link shall be only bus_element_link, product_definition, and product_definition_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the product_definition supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the product_definition_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each bus_element_link shall be referenced at least once by a product_definition_relationship related_product_definition.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="669"
></A
>5.2.3.1.51 bus_structural_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A bus_structural_definition is a product_definition that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Bus_structural_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY bus_structural_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: SIZEOF (QUERY (bce &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'bus composition') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BUS_ELEMENT_LINK' IN
       TYPEOF (bce.related_product_definition))) &#62;= 1;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 
       'functional unit network terminal definition bus assignment')) 
       &#60;= 1)) &#60;= 1;
  WR3: consistent_bus_structural_definition(bag_to_set(QUERY( pdr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BUS_ELEMENT_LINK' IN TYPEOF(pdr.related_product_definition))));
END_ENTITY; -- bus_structural_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The bus_structural_definition shall relate to at least one bus_element_link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The bus_structural_definition shall have at most one property_definition
that relates to another property_definition to specify the 'functional unit
network terminal definition bus assignment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The bus_structural_definition shall be a connected structure and shall not have any vertex with a degree greater than 2.  The number of vertices shall equal the number of links + 1.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="679"
></A
>5.2.3.1.52 cable_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A cable_component is a component_definition that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Cable_component</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY cable_component
  SUBTYPE OF (component_definition);
WHERE
  WR1: SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1;
  WR2: SELF\product_definition.description :&#60;&#62;: 'laminate component';
END_ENTITY; -- cable_component
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The cable_component shall be related, as the 'instantiated part', to exactly one physical_unit that is in the 'physical design usage' product_definition_context.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The cable_component shall not have a description of 'laminate component'. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="688"
></A
>5.2.3.1.53 capacitance_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A capacitance_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Capacitance_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY capacitance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\capacitance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = farad;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- capacitance_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The capacitance_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The capacitance_measure_with_unit shall reference an si_unit with a name of farad.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="698"
></A
>5.2.3.1.54 change</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A change is an action_assignment that points to a set 
of .<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY change
 SUBTYPE OF (action_assignment);
     items : SET [1:?] OF work_item;
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DIRECTED_ACTION' 
       IN TYPEOF (SELF.assigned_action);
  WR2: unique_version_change_order (SELF.assigned_action, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN');

END_ENTITY; -- change
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The change shall assign a directed_action.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>A single change shall not change more than one version of a single product,
but may change more than one product_definition_formation if each
product_definition_formation references a different product.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="707"
></A
>5.2.3.1.55 change_from_design_object_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A change_from_design_object_assignment is an action_assignment that implements
the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Change_design_object_management_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Gate_path_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Terminal_swap_specification</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY change_from_design_object_assignment
   SUBTYPE OF (action_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(aa &#60;* USEDIN(SELF\action_assignment.assigned_action,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ACTION_ASSIGNMENT.ASSIGNED_ACTION')
        |'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'CHANGE_TO_DESIGN_OBJECT_ASSIGNMENT' IN TYPEOF(aa))) &#62;= 1;
    END_ENTITY; -- change_from_design_object_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>SELF\action_assignment.assigned_action shall also be a 
SELF\action_assignment.assigned_action for a 
change_to_design_object_assignment.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The change_from_design_object_assignment shall have exactly one item that is a
managed_design_object that is not referenced by
another product_definition_relationship with a name of
'design object addition', 'design object change', or 'design object deletion'
in the same design that is not an item of a action_assignment with the same assigned_action.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="725"
></A
>5.2.3.1.56 change_from_design_object_request_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A change_from_design_object_request_assignment is an action_request_assignment that implements
the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Change_design_object_management_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Change_request</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Gate_path_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Terminal_swap_specification</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY change_from_design_object_request_assignment
   SUBTYPE OF (action_request_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(aa &#60;*
        USEDIN(SELF\action_request_assignment.assigned_action_request,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ACTION_REQUEST_ASSIGNMENT.ASSIGNED_ACTION_REQUEST')
        |'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'CHANGE_TO_DESIGN_OBJECT_REQUEST_ASSIGNMENT' IN TYPEOF(aa))) &#62;= 1;

END_ENTITY; -- change_from_design_object_request_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>SELF\action_request_assignment.assigned_action_request shall also be a 
SELF\action_request_assignment.assigned_action_request for a 
change_to_design_object_request_assignment.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The change_from_design_object_request_assignment shall have exactly one item that is a
managed_design_object that is not referenced by
another product_definition_relationship with a name of
'design object addition', 'design object change', or 'design object deletion'
in the same design that is not an item of a action_request_assignment with the same assigned_action_request.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="745"
></A
>5.2.3.1.57 change_request</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A change_request is an action_request_assignment that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Change_request</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY change_request
  SUBTYPE OF (action_request_assignment);
  items : SET [1:?] OF change_request_item;
END_ENTITY; -- change_request
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="751"
></A
>5.2.3.1.58 change_to_design_object_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A change_to_design_object_assignment is an action_assignment that implements
the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Change_design_object_management_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Gate_path_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Terminal_swap_specification</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY change_to_design_object_assignment
   SUBTYPE OF (action_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(aa &#60;* USEDIN(SELF\action_assignment.assigned_action,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ACTION_ASSIGNMENT.ASSIGNED_ACTION')
        |'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'CHANGE_FROM_DESIGN_OBJECT_ASSIGNMENT' IN TYPEOF(aa))) &#62;= 1;
   WR2: SIZEOF(QUERY ( pdr &#60;* SELF.items | 
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(pdr)) AND
        (pdr\product_definition_relationship.name = 'design object change'))) = 1;
    
END_ENTITY; -- change_to_design_object_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
> 
SELF\action_assignment.assigned_action shall also be a 
SELF\action_assignment.assigned_action for a 
change_from_design_object_assignment.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The change_to_design_object_assignment shall have exactly one item
that is a product_definition_relationship with a name of 'design object change'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The change_to_design_object_assignment shall have exactly one item that is a
managed_design_object that is not a product_definition_relationship 
with a name of 'design object change' and is not referenced by 
another product_definition_relationship with a name of 
'design object addition', 'design object change', or 'design object deletion'
in the same design that is not an item of a action_assignment with the same assigned_action.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="770"
></A
>5.2.3.1.59 change_to_design_object_request_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A change_to_design_object_request_assignment is an action_request_assignment that implements
the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Change_design_object_management_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Change_request</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Gate_path_swap_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Terminal_swap_specification</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY change_to_design_object_request_assignment
   SUBTYPE OF (action_request_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(aa &#60;* 
        USEDIN(SELF\action_request_assignment.assigned_action_request,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ACTION_REQUEST_ASSIGNMENT.ASSIGNED_ACTION_REQUEST')
        |'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'CHANGE_FROM_DESIGN_OBJECT_REQUEST_ASSIGNMENT' 
         IN TYPEOF(aa))) &#62;= 1;
   WR2: SIZEOF(QUERY ( pdr &#60;* SELF.items | 
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(pdr)) AND
        (pdr\product_definition_relationship.name = 'design object change'))) = 1;
END_ENTITY; -- change_to_design_object_request_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
> 
SELF\action_request_assignment.assigned_action_request shall also be a 
SELF\action_request_assignment.assigned_action_request for a 
change_from_design_object_request_assignment.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The change_to_design_object_request_assignment shall have exactly one item
that is a product_definition_relationship with a name of 'design object change'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The change_to_design_object_request_assignment shall have exactly one item that is a
managed_design_object that is not a product_definition_relationship 
with a name of 'design object change' and is not referenced by 
another product_definition_relationship with a name of 
'design object addition', 'design object change', or 'design object deletion'
in the same design that is not an item of a action_request_assignment with the same assigned_action_request.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="791"
></A
>5.2.3.1.60 characteristic_type</H4
>A characteristic_type is a group that specifies a boolean property, a numeric property whose units are in accordance with ISO 10303-41, a compound characteristic, a
logical property, a string property, or an externally defined property for a characteristic.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY characteristic_type
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN [
       'string property',
       'logical property',
       'boolean property',
       'numeric property',
       'externally defined property',
       'compound characteristic'
        ];
END_ENTITY; -- characteristic_type
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>A characteristic_type shall have a name that is 
'string property', 
'logical property', 
'boolean property',
'numeric property',
'externally defined property' or
'compound characteristic'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="797"
></A
>5.2.3.1.61 characterized_product_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A characterized_product_category is a characterized_object and a 
product_category that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Ee_product_category</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY characterized_product_category
  SUBTYPE OF (characterized_object,product_category);
WHERE
  WR1:  SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
   'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
   'PROPERTY_DEFINITION.DEFINITION') | 
   (pd\property_definition.description = 'product category values') AND
   (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
   'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
   'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
   ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
   'PARAMETER_ASSIGNMENT_REPRESENTATION'
   IN TYPEOF (pdr.used_representation)))) &#62;= 1 ))) &#60;= 1;

  WR2:  SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
   'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
   'PROPERTY_DEFINITION.DEFINITION') | 
   ((pd\property_definition.description = 'product category parameters') AND
   (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
   'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
   'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
   (SIZEOF (QUERY (ri &#60;* pdr.used_representation.items
   | (NOT (SIZEOF (TYPEOF (ri) *
   ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MODEL_PARAMETER']) =1)) )) =0))) &#62;= 1 )))) &#60;= 1;

  WR3: SELF\characterized_object.name = SELF\product_category.name;

  WR4:  SIZEOF (USEDIN (SELF,
   'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
   'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1; 

END_ENTITY; -- characterized_product_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The characterized_product_category shall be referenced by no more than one
property_definition that has a description of 'product category values' that
shall reference one or more parameter_assignment_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The characterized_product_category shall be referenced by no more than one
property_definition that has a description of 'product category parameters' that
shall reference one or more model_parameter.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The name attribute inherited from product_category shall be the same value as the name attribute inherited from characterized_object. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The characterized_product_category shall be referenced by exactly one applied_document_reference.</DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: The RULE characterized_product_category_unique_constraint also constrains this entity.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="809"
></A
>5.2.3.1.62 circular_runout_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A circular_runout_tolerance is a 
geometric_tolerance_with_specified_datum_system that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Circular_runout_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY circular_runout_tolerance
  SUBTYPE OF (geometric_tolerance_with_specified_datum_system);
WHERE
  WR1: SELF\geometric_tolerance.name = 'circular runout';
  WR2: NOT('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
           'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF));
  WR3: SIZEOF (QUERY (pdr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       (pdr\property_definition_relationship.name = 'referenced datum system definition')  AND  
       (pdr.related_property_definition\property_definition.description =
       'datum system property without material conditions'))) = 1;
END_ENTITY; -- circular_runout_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name for the circular_runout_tolerance shall be 'circular runout'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The circular_runout_tolerance shall not be a modified_geometric_tolerance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The circular_runout_tolerance shall relate to exactly one property_definition that has the description of 'datum 
system property without material conditions' to specify the 'referenced datum system definition'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The toleranced_shape_aspect of the circular_runout_tolerance shall either be a 
part_template_definition, lie on the boundary of the shape of the product, or be 
a composite_shape_aspect the 'composing' shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The circular_runout_tolerance shall have at most two physical_unit_datum in its referenced 
datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The circular_runout_tolerance shall have at least one physical_unit_datum in its referenced 
datum_system that has description of 'axis'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>The tolerance_zone_boundary of the circular_runout_tolerance shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a tolerance_zone_implicit_opposing_boundary_set.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="824"
></A
>5.2.3.1.63 component_definition</H4
>A component_definition is a product_definition that represents a product
that is used in an assembly.  The component_definition entity implements
the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Array_placement_group</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_group_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_macro_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Bare_die_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Cable_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_macro_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interface_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interfaced_group_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Mating_connector_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_laminate_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Routed_interconnect_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Routed_physical_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Thermal_component</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_definition
  SUPERTYPE OF (ONEOF (printed_component, packaged_component, routed_physical_component)
                ANDOR (thermal_component) ANDOR (cable_component))
  SUBTYPE OF (product_definition);
WHERE
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = 'planar projected shape')) 
       &#60;= 1))) = 0;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = '3d bound volume shape')) 
       &#60;= 1))) = 0;
  WR3: (NOT (SELF\product_definition.description = 
                                         'bare die component')) OR
       (SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_BARE_DIE'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1);
  WR4: NOT(is_assembly_module_occurrence(SELF))
       OR
       (SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage') AND
       (ip.relating_product_definition\product_definition.name = 
          'assembly module')
       )) = 1);
  WR5: NOT(is_assembly_module_occurrence(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN 
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'assembly module component terminal'))) 
       &#62;= 2)) &#62;= 1);
  WR6: NOT(is_interconnect_module_occurrence(SELF))
       OR
       (SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage') AND
        (SELF\product_definition.name = 'interconnect module')
       )) = 1);
  WR7: (NOT (SELF\product_definition.description = 'mating connector')) OR
       ((('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF)) AND
       (SIZEOF (QUERY (doc &#60;* 
   SELF\product_definition_with_associated_documents.documentation_ids |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EE_SPECIFICATION' IN 
       TYPEOF (doc))) = 1)) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ &#60;* QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'part template occurrence') |
       SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (pt_occ,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |  
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description = 
       'printed connector template'))) = 1)) = 1))) = 0) OR
       (SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition\product_definition.description =
       'packaged connector'))) = 1));
  WR8: (NOT (SELF\product_definition.description = 'mating connector')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name  = 
       'mating connector placement')) = 1)) = 1);
 WR9: (NOT (SELF\product_definition.description = 'mating connector')) OR
       ((SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') | 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF(pdr))) = 0) AND
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF(pdr))) = 0));
 WR10: SIZEOF(QUERY(pdr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        NOT(NOT(pdr\product_definition_relationship.name = 'instantiated part')
        OR 
        (SELF.formation :=: 
        pdr.relating_product_definition.formation))))
        = 0;
 WR11: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       (sr_pdr.used_representation\representation.name = 
        'part template non planar 2d shape')
       OR
       (sr_pdr.used_representation\representation.name = 'non planar 2d shape')
       OR
       (sr_pdr.used_representation\representation.name = 
        'open shell based surface'))) 
       &#60;= 1))) = 0;
 WR12: NOT(SELF.frame_of_reference.name = 'layout occurrence') OR
       ((SIZEOF (QUERY (prpc &#60;* USEDIN (SELF.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF(SELF)));
 WR13: NOT((SELF.frame_of_reference.name = 'layout occurrence') 
          AND
       NOT('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_COMPONENT' IN TYPEOF(SELF))) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ((SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (sa)) &#62;= 1)) 
        )) = 1))) = 0);

 WR14: NOT(is_assembly_module_macro_occurrence(SELF))
       OR
       (SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design definition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design') AND
       (ip.relating_product_definition\product_definition.name = 
           'assembly module')
       )) = 1);
 WR15: NOT(is_interconnect_module_macro_occurrence(SELF))
        OR
       (SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design definition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design') AND
       (ip.relating_product_definition\product_definition.name = 
             'interconnect module')
        )) = 1);
 WR16: SIZEOF(QUERY(pdr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        ((pdr\product_definition_relationship.name = 'instantiated definition')
        AND
        (NOT(SELF.formation :=:
        pdr.relating_product_definition.formation)))))
        = 0;
 WR17: (NOT (SELF\product_definition.description =
                                         'routed interconnect component')) OR
       ((SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1) AND
       (SELF.frame_of_reference.name = 'physical occurrence'));
END_ENTITY; -- component_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_definition shall have at most one shape_representation with a name of 'planar projected shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_definition shall have at most one shape_representation
with a name of '3d bound volume shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the component_definition has a description of 'bare die component',
the component_definition shall be related, as the 'instantiated part', to
exactly one bare_die, externally_defined_bare_die, or
library_defined_bare_die; that is in the 'physical design usage'
product_definition_context.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the component_definition is in the 'physical occurrence'
product_definition_context and has a name of 
'assembly module', the component_definition shall be
related, as the 'instantiated part', to exactly one physical_unit that is
in the 'physical design usage' product_definition_context and has a name of 
'assembly module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the component_definition has a frame_of_reference name of 'physical
occurrence' and it is associated with a product that is categorized as an
'assembly module', it shall have at least two shape_aspects that are
component_terminals with a description of 'assembly module component
terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the component_definition is in the 'physical occurrence'
product_definition_context and has a name of 
'interconnect module', the component_definition shall be
related, as the 'instantiated part', to exactly one physical_unit that is
in the 'physical design usage' product_definition_context and has a
name that is 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the component_definition has a description of 'mating connector', it
shall be of type product_definition_with_associated_documents that contains
exactly one ee_specification, or it shall have exactly one shape_aspect with a
description of 'part template occurrence' and is related to exactly one 
part_template_definition with a description of 'printed connector template' 
as the
'instantiated template', or it shall be related to exactly one packaged_part,
externally_defined_packaged_part, or library_defined_packaged_part with a
description of 'packaged connector' as the 'instantiated part'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the component_definition has a description of 'mating connector',
it shall have exactly one shape_representation with a name of
'mating connector placement'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the component_definition has a description of 'mating connector',
it shall not participate in a next_assembly_usage_occurance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the component_definition is the related_product_definition of a
product_definition_relationship that has a name of 'instantiated part',
it shall have the same formation as the relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>The component_definition shall have at most one shape_representation with a name of 'part template non planar 2d shape' or of 'open shell based surface'
or of 'non planar 2d shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the component_definition has a frame_of_reference with a name of 'layout occurrence',
the component_definition shall be a definition of a product that is categorized as a 'template model'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the component_definition has a frame_of_reference with a name of 'layout occurrence',
and if the component_definition is not a printed_component, 
the component_definition shall have exactly one component_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the component_definition is in the 'macro occurrence'
product_definition_context and has a name of 
'assembly module', the component_definition shall be
related, by the 'design definition' relationship, to exactly one physical_unit that is
in the 'physical design ' product_definition_context and has a
name of 'assembly module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the component_definition is in the 'macro occurrence'
product_definition_context and has a name of 
'interconnect module', the component_definition shall be
related, by the 'design definition' relationship, to exactly one physical_unit that is
in the 'physical design ' product_definition_context and has a name of 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the component_definition is the related_product_definition of a
product_definition_relationship that has a name of 'instantiated definition',
it shall have the same formation as the relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>If the component_definition has a description of 'routed interconnect component', it shall be related to a physical_unit as an 'instantiated part' and shall be in the 'physical occurrence' context. </DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The assembly referenced by the assembly composition relationship that references this component definition shall be the same assembly as that referenced by the shape that is referenced by the component position that references that assembly_composition_relationship.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the component_definition has a description of 'routed interconnect component', it shall have exactly one property_definition that is associated to exactly one representation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="884"
></A
>5.2.3.1.64 component_feature</H4
>A component_feature is a shape_aspect.  A component_feature
implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Component_feature</SPAN
> when no ARM subtype is
implemented.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_feature
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) &#60;= 1;
END_ENTITY; -- component_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_feature shall be an aspect of the shape of a component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_feature shall be related to at most one shape_aspect as an 'instantiated feature'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="892"
></A
>5.2.3.1.65 component_feature_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A component_feature_relationship is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Component_feature_relationship</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_feature_relationship
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\component_feature_relationship)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
END_ENTITY; -- component_feature_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The types of component_feature_relationship shall be only component_feature_relationship, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="903"
></A
>5.2.3.1.66 component_functional_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A component_function_terminal is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Functional_unit_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_functional_terminal
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_FUNCTIONAL_UNIT' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated terminal') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION'
       IN TYPEOF (it.relating_shape_aspect))) = 1;
  WR3: SIZEOF (QUERY (futba &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'functional unit terminal bus assignment') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BUS_STRUCTURAL_DEFINITION' IN 
       TYPEOF (futba.relating_property_definition.definition))) &#60;= 1;
  WR4: SIZEOF (QUERY (futna &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'functional unit terminal node assignment') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'NETWORK_NODE_DEFINITION' IN 
       TYPEOF (futna.relating_property_definition.definition))) &#60;= 1;
END_ENTITY; -- component_functional_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_functional_terminal shall be an aspect of the shape of a
component_functional_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_functional_terminal shall be related to exactly one
functional_unit_terminal_definition as the 'instantiated terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The component_functional_terminal shall be related to at most one
property of a bus_structural_definition as the 
'functional unit terminal bus assignment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The component_functional_terminal shall be related to at most one 
property of a network_node_definition as the
'functional unit terminal node assignment'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="914"
></A
>5.2.3.1.67 component_functional_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A component_functional_unit is a product_definition that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Functional_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_functional_unit
  SUBTYPE OF (product_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'functional occurrence';
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_FUNCTIONAL_TERMINAL' IN
       TYPEOF (sa))) &#62;= 1)) &#62;= 1;
  WR3: SIZEOF (QUERY (ifu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated functional unit') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifu.relating_product_definition))) = 1;
  WR4: SIZEOF (QUERY (nc &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'network composition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (nc.relating_product_definition)) AND
       (nc.relating_product_definition.frame_of_reference.name =
       'functional network design'))) = 1;
END_ENTITY; -- component_functional_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_functional_unit shall have the context element named
'functional occurrence'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_functional_unit shall have at least one
component_functional_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The component_functional_unit shall be related to exactly one
functional_unit as the 'instantiated functional unit'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The component_functional_unit shall be related to exactly one
functional_unit that has a context element with a name of 'functional network
design' as the 'network composition'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="925"
></A
>5.2.3.1.68 component_interface_terminal</H4
>A component_interface_terminal is a shape_aspect that implements the ARM
concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_component_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_connector_component_interface_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_interface_terminal
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN [
       'interconnect component interface terminal',
       'packaged connector component interface terminal'];
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN 
       TYPEOF (SELF.of_shape.definition);
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) &#60;= 1;
  WR4: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design usage')) &#60;= 1;
  WR5: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERFACE_COMPONENT_DEFINITION' IN 
       TYPEOF (SELF.of_shape.definition));
  WR6: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (SELF.of_shape.definition\product_definition.
        frame_of_reference.name = 
       'physical occurrence');
  WR7: (NOT (SELF\shape_aspect.description = 
       'interconnect component interface terminal')) OR
       ((SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1)
       AND 
       NOT(SELF.of_shape.definition\product_definition.description 
       IN ['assembly module component', 'bare die component',
       'interconnect module component', 'laminate component',
       'packaged component']));
  WR8: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (SELF.product_definitional);
  WR9: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_COMPONENT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.description = 
       'packaged connector component') AND
       (SELF.of_shape.definition\product_definition.
       frame_of_reference.name = 
       'physical occurrence'));
 WR10: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'interface terminal'))) = 1);
END_ENTITY; -- component_interface_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_interface_terminal shall have a description of
'interconnect component interface terminal' or 'packaged connector component
interface terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_interface_terminal shall be an aspect of the shape of a
component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The component_interface_terminal shall be related to at most
one shape_aspect as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The component_interface_terminal shall relate to at most one
shape_aspect to specify the 'design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the name of the component_interface_terminal is 'interconnect
component interface terminal', it shall be an aspect of the shape of an
interface_component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the name of the component_interface_terminal is 'interconnect
component interface terminal', it shall be an aspect of the shape of a
product_definition with a frame_of_reference name of 'physical occurrence'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the component_interface_terminal has a description of
'interconnect component interface terminal', the
component_interface_terminal shall relate to exactly one shape_aspect that
has a description of 'connection zone' and that is associated with a
product that is categorized as an 'interconnect module' and does not
have a description of 'assembly module component', 'bare die component',
'interconnect module component', 'laminate component', or 'packaged component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the name of the component_interface_terminal is 'packaged connector
component interface terminal', it shall lie on the boundary of the shape of
the component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the component_interface_terminal has a description of 'packaged
connector component interface terminal', it shall be an aspect of the shape of
a packaged_component that has a description of 'packaged connector component'
and a frame_of_reference name of 'physical occurrence'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the component_interface_terminal has a description of 'packaged
connector component interface terminal', the component_interface_terminal
shall be related to exactly one packaged_part_terminal with a description
of 'interface terminal' as the 'instantiated feature'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="947"
></A
>5.2.3.1.69 component_location</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A component_location is a representation that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_2d_edge_location</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_2d_location</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_2d_stacked_location</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_3d_location</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_location
  SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'placement fixed') AND 
       ((it\descriptive_representation_item.description = 'true') OR
       (it\descriptive_representation_item.description = 'false')))) = 1;
  WR2: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)))) = 1;
  WR3: (NOT 
       (SELF.context_of_items\geometric_representation_context.
       coordinate_space_dimension
       = 2)) OR (SIZEOF (QUERY (it &#60;* SELF.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (it))) = 1);
  WR4: (NOT 
       (SELF.context_of_items\geometric_representation_context.
       coordinate_space_dimension
        = 3)) OR (SIZEOF (QUERY (it &#60;* SELF.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_3D' IN TYPEOF (it))) = 1);
  WR5: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM'
       IN TYPEOF (it)) 
       )) = 1;
  WR6: NOT (SIZEOF (QUERY (it &#60;* SELF.items |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (it))) = 1)
        OR
        (SIZEOF (QUERY (cto2d &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D'
        IN TYPEOF (cto2d)) AND
        (SIZEOF (QUERY (mi &#60;* USEDIN (cto2d,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM.MAPPING_TARGET') | (
       (SIZEOF (QUERY (cl &#60;* USEDIN (mi,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') |(cl = SELF))) = 1)))) &#62;= 1)
        )) = 1);
  WR7: NOT (SIZEOF (QUERY (it &#60;* SELF.items |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'AXIS2_PLACEMENT_3D' IN TYPEOF (it))) = 1)
      OR
       (SIZEOF (QUERY (cto2d &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'AXIS2_PLACEMENT_3D'
        IN TYPEOF (cto2d)) AND
        (SIZEOF (QUERY (mi &#60;* USEDIN (cto2d,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM.MAPPING_TARGET') | (
       (SIZEOF (QUERY (cl &#60;* USEDIN (mi,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') |(cl = SELF))) = 1)))) = 1)
        )) = 1);
  WR8:NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2) AND 
          (SELF.context_of_items.context_type = 'component surface') AND
        (( SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'mounting surface assembly joint') AND
       (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
         'interconnect module component surface feature') AND
       (SIZEOF(QUERY ( sar &#60;* USEDIN (pdr.definition.definition.relating_shape_aspect,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        ((sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module primary surface') OR
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge surface') OR
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge segment surface')))) = 1)
       )
       )) = 1)))
       OR
       (SIZEOF(QUERY (cto2d &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);
  WR9:NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2) AND 
          (SELF.context_of_items.context_type = 'component surface') AND
         (( SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'mounting surface assembly joint') AND
       (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
         'interconnect module component surface feature') AND
       (SIZEOF(QUERY ( sar &#60;* USEDIN (pdr.definition.definition.relating_shape_aspect,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module secondary surface')) = 1)
       ))) = 1)))
       OR
    (SIZEOF(QUERY( cto2d &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,-1.0,0.001 )))) = 1);
  WR10: (NOT(is_laminate_component_location(SELF))) OR
      (SIZEOF(QUERY( pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
      (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
        'interconnect module component surface feature'))) = 0);
  WR11: (NOT(is_laminate_component_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);
  WR12: SIZEOF(QUERY( pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'SHAPE_ASPECT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.definition.definition\shape_aspect.description =
        'interconnect module component surface feature'))) = 0;
  WR13: (NOT((SELF.context_of_items\geometric_representation_context.
        coordinate_space_dimension = 2) AND
        (SELF.context_of_items.context_type = 'component stacked')))
        OR 
      (SIZEOF(QUERY( pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
      (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
        'interconnect module component surface feature'))) = 0);
 WR14: NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)
          AND
         (SELF.context_of_items.context_type = 'component edge'))
       OR
        ((NOT(is_laminate_component_location(SELF)))
          AND
       (( SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'reference terminal assembly joint') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_TERMINAL' IN 
                      TYPEOF (pdr.definition.definition.related_shape_aspect)) 
         AND
       (pdr.definition.definition.related_shape_aspect\shape_aspect.description IN
       ['packaged component join terminal',
       'package terminal occurrence'])
         AND
       (SIZEOF(QUERY ( sar &#60;* USEDIN 
                          (pdr.definition.definition.related_shape_aspect,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (sar\shape_aspect_relationship.name = 'instantiated feature')
           AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRIMARY_REFERENCE_TERMINAL' IN TYPEOF (sar.relating_shape_aspect))
         )) = 1)
         AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_DEFINITION' IN
         TYPEOF (pdr.definition.definition.related_shape_aspect.of_shape.definition))
         AND
       (component_definition_located_by_component_location(SELF) =
                 pdr.definition.definition.related_shape_aspect.of_shape.definition) 
       ))) = 1))
         AND
       (( SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'mounting surface assembly joint') AND
       (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
         'interconnect module component surface feature') AND
       (SIZEOF(QUERY ( sar &#60;* USEDIN (pdr.definition.definition.relating_shape_aspect,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge surface') OR
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge segment surface'))) = 1)
         AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_MOUNTING_FEATURE' IN 
                      TYPEOF (pdr.definition.definition.related_shape_aspect)) 
         AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_DEFINITION' IN
         TYPEOF (pdr.definition.definition.related_shape_aspect.of_shape.definition))
         AND
       (component_definition_located_by_component_location(SELF) =
                 pdr.definition.definition.related_shape_aspect.of_shape.definition) 
       ))) = 1))
      );
 WR15: NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)
          AND
         (SELF.context_of_items.context_type = 'component stacked'))
       OR
        ((NOT(is_laminate_component_location(SELF)))
          AND
       (( SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition))
         AND
       ('mounting joint' = pdr.name)
         AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_MOUNTING_FEATURE' IN
                      TYPEOF (pdr.definition.definition.related_shape_aspect))
         AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_DEFINITION' IN
         TYPEOF (pdr.definition.definition.related_shape_aspect.of_shape.definition))
         AND
       (component_definition_located_by_component_location(SELF) :=:
                 pdr.definition.definition.related_shape_aspect.of_shape.definition)    
         AND
       (component_definition_located_by_component_location(SELF) :&#60;&#62;: 
                 pdr.definition.definition.relating_shape_aspect.of_shape.definition)    
       )
      )) = 1))
        );
 WR16: (NOT(is_interconnect_module_component_location(SELF))) OR
      (SIZEOF(QUERY( pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
      (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
        'interconnect module component surface feature'))) = 0);
 WR17: NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)
          AND
         (SELF.context_of_items.context_type = 'component stacked'))
       OR
       (SIZEOF(QUERY (cto2d &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      ((cto2d_determinant_test(cto2d,1.0,0.001 )) OR
      (cto2d_determinant_test(cto2d,-1.0,0.001 )))
      )) = 1);
 WR18 : SIZEOF (QUERY (it &#60;* SELF\representation.items| NOT
     (SIZEOF(
    ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
     'CARTESIAN_TRANSFORMATION_OPERATOR_2D', 
     'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
     'MAPPED_ITEM', 
     'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
     'DESCRIPTIVE_REPRESENTATION_ITEM', 
     'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
     'AXIS2_PLACEMENT_3D'] 
     * TYPEOF(it)) = 1 ))) = 0;
 WR19: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_3D'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'origin') 
       )) = 0;
 WR20: SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM'
       IN TYPEOF (it))
       AND NOT
       (((it\representation_item.name = 'component assembly 2d position')
        OR
       (it\representation_item.name = 'component assembly 3d position'))
       AND
       (it.mapping_source.mapping_origin\representation_item.name = 'origin')
       AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_2D' IN TYPEOF (it.mapping_source.mapping_origin))
        OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_3D' IN TYPEOF (it.mapping_source.mapping_origin))))
       )) = 0;
 WR21: SIZEOF(QUERY(pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.'
       + 'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN 
            TYPEOF(pdr.definition.definition))
       )) = 1;
END_ENTITY; -- component_location
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_location shall contain exactly one descriptive_representation_item with a name 'placement fixed' and the description of that descriptive_representation_item shall be either 'true' or 'false'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_location shall contain exactly one descriptive_representation_item.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2, it shall contain exactly one cartesian_transformation_operator_2d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 3, it shall contain exactly one axis2_placement_3d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The component_location shall contain exactly one mapped_item.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The component_location that contains a cto2d shall contain exactly one mapped_item that specifies the cto2d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The component_location that contains an a2p3d shall contain exactly one mapped_item that specifies the a2p3d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2 and if the component_location references a primary surface, edge surface, or edge segment surface, the determinant of the cto2d shall be +1.0 within a delta of 0.001.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2 and if the component_location references a secondary surface, the determinant of the cto2d shall be -1.0 within a delta of 0.001.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the component_location is the location of the implementation of the ARM concept of Laminate_component, it shall not be associated with a component_shape_aspect where the description is 'interconnect module component surface feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2 and is the location of the implementation of the ARM concept of Laminate_component, the determinant of the cto2d shall be +1.0 within a delta of 0.001.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>The component_location shall not directly reference any component_shape_aspect where the description is 'interconnect module component surface feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2 and a context_type of 'component stacked', it shall not reference a component_shape_aspect where the description is 'interconnect module component surface feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2 and a context_type of 'component edge', it shall be associated with exactly one assembly_joint where the assembly_joint shall specify with the related_shape_aspect a component_terminal that is defined by a primary_reference_terminal.  
The component_location shall be associated with a component_shape_aspect where the description is 'interconnect module component surface feature' that is defined by an edge or edge_segment of an interconnect module.
The component_terminal specified by the related_shape_aspect of the assembly_joint shall be a component_terminal of the component_definition being located by this component_location.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2 and a context_type of 'component stacked', it shall be associated with exactly one assembly_joint where the assembly_joint shall specify with the related_shape_aspect a component_mounting_feature.
The component_mounting_feature referenced by the assembly_joint related_shape_aspect shall be a component_mounting_feature of the component_definition being located by this component_location.  The relating_shape_aspect of the assembly_joint shall specify a component_feature of a component_definition that is not being located by this component_location.<DIV
CLASS="NOTE"
><P
></P
>NOTE: The base component of the stack is not considered to be stacked.  The assembly_joint referenced to support stacking are directed for stack traversal.</DIV
><DIV
CLASS="EXAMPLE"
><P
></P
>EXAMPLE: In this example, three bare die are vertically mounted on top of a substrate.
The substrate is not considered to be part of the stack.
The first bare die is not considered to be 'stacked'.  The component_location references the substrate.
The second bare die is considered to be 'stacked'.  The component_location references an assembly_joint. 
The related_shape_aspect of the assembly_joint references the second bare die, and the relating_shape_aspect of the assembly_joint references the first bare die.
The third bare die is considered to be 'stacked'.  The component_location references a different assembly_joint.
The related_shape_aspect of the assembly_joint references the third bare die, and the relating_shape_aspect of the assembly_joint references the second bare die.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the component_location is the location of the implementation of the ARM concept of Interconnect_module_component, it shall not be associated with a component_shape_aspect where the description is 'interconnect module component surface feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>If the component_location has a geometric_representation_context with a coordinate_space_dimension value of 2 and a context_type of 'component stacked', the determinant of the cto2d shall be +1.0 or -1.0, in either case within a delta of 0.001. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR18: </SPAN
>The items in a component_location shall be a mapped_item, a descriptive_representation_item, a cartesian_transformation_operator_2d, or an axis2_placement_3d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR19: </SPAN
>The axis2_placement_3d shall not have a name of 'origin'.<DIV
CLASS="NOTE"
><P
></P
>NOTE: This does not prohibit placing the component at the origin.  It prohibits an axis2_placement_3d that is in the role of 'origin' from serving as the location.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR20: </SPAN
>The representation_item used as a mapping_source shall be either an axis2_placement_2d or shall be an axis2_placement_3d and it shall have a name of 'origin'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR21: </SPAN
>The component_location shall be used by exactly one next_assembly_usage_occurrence.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="986"
></A
>5.2.3.1.70 component_mating_constraint_condition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A component_mating_constraint_condition is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Component_mating_constraint_condition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_mating_constraint_condition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name, SELF\shape_aspect.of_shape;
END_ENTITY; -- component_mating_constraint_condition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within the context of the product_definition_shape referenced as of_shape inherited from the shape_aspect supertype.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_mating_constraint_condition shall relate to at least one and no more than three assembly_joint
to specify the 'constraining_joint'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_mating_constraint_condition shall be related to at least one and no more than five representation_items to describe the 'degree of freedom' constrained. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The component_mating_constraint_condition shall not be any other type of shape_aspect. </DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="999"
></A
>5.2.3.1.71 component_mounting_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A component_mounting_feature is a shape_aspect.  A component_mounting_feature
implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Component_mounting_feature</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_mounting_feature
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROBE_ACCESS_AREA',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND'] * 
       TYPEOF (SELF)) = 0);
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = 
       'planar projected shape')) 
       &#60;= 1))) = 0;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = '3d bound volume shape')) 
       &#60;= 1))) = 0;
  WR5: (NOT (SELF\shape_aspect.description IN ['component feature'])) OR
       (SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design usage')) &#60;= 1);
  WR6: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) &#60;= 1;
END_ENTITY; -- component_mounting_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_mounting_feature shall be an aspect of the shape of a component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_mounting_feature shall not be any of the following: inter_stratum_feature,
probe_access_area, land.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The component_mounting_feature shall have at most one shape_representation
with a name of 'planar projected shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The component_mounting_feature shall have at most one shape_representation
with a name of '3d bound volume shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the component_mounting_feature has a description of 'component feature',
it shall relate to at most one shape_aspect to specify the
'design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The component_mounting_feature shall be related to at most one shape_aspect as an 'instantiated feature'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1012"
></A
>5.2.3.1.72 component_shape_aspect</H4
>A component_shape_aspect is a shape_aspect.  A component_shape_aspect
implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Conductive_interconnect_element</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Conductive_interconnect_element_with_pre_defined_transitions</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Conductive_interconnect_element_with_user_defined_single_transition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Join_two_physical_connectivity_definition_supporting_printed_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Laminate_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Laminate_text_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Laminate_text_string_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Primary_stratum_indicator_symbol</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Special_symbol_laminate_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Stratum_feature_template_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Thermal_component</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_shape_aspect
  SUPERTYPE OF (ONEOF (land, connected_area_component, inter_stratum_feature)
                ANDOR (thermal_component_shape_aspect))
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FIDUCIAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONNECTED_AREA_COMPONENT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_GROUP_COMPONENT_SHAPE_ASPECT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'THERMAL_COMPONENT_SHAPE_ASPECT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_REMOVAL_COMPONENT_SHAPE_ASPECT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTEGRAL_SHIELD',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROBE_ACCESS_AREA',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND'] * 
       TYPEOF (SELF)) &#62;= 1) OR
       (SELF\shape_aspect.description IN [
       'part template occurrence', 
       'laminate component', 
       'laminate text component', 
       'laminate text string component', 
       'conductive interconnect element with pre defined transitions', 
       'join 2 physical connectivity definition supporting',
     'conductive interconnect element with user defined single transition',
      'special symbol laminate component', 
       'primary stratum indicator symbol', 
       'stratum feature template component']);
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = 'planar projected shape')) 
       &#60;= 1))) = 0;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = '3d bound volume shape')) 
       &#60;= 1))) = 0;
  WR5: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description IN ['laminate text component', 
       'laminate text string component', 
       'special symbol laminate component', 
       'primary stratum indicator symbol',  
       'stratum feature template component']) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.description = 
                  'laminate component')
       ));
  WR6: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description = 
       'laminate text component') OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEXT_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)))) = 1));
  WR7: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description IN
       ['stratum feature template component']) OR
       (SIZEOF (QUERY (sfi &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'stratum feature implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (sfi.relating_shape_aspect)))) = 1));
  WR8: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description IN
       ['conductive interconnect element with pre defined transitions', 
       'join 2 physical connectivity definition supporting',
       'conductive interconnect element with ' +
       'user defined single transition']) OR
       (SIZEOF (QUERY (cc &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed conductor') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (cc.related_shape_aspect)))) = 1));
(*
  WR9: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description IN
       ['conductive interconnect element with pre defined transitions', 
       'join 2 physical connectivity definition supporting',
       'conductive interconnect element with user ' +
       'defined single transition']) OR
       (SIZEOF (QUERY (at &#60;* associated_terminals(SELF)|
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'conductive interconnect element terminal')))) &#62;= 2));
*)
 WR10: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description IN
       ['special symbol laminate component',
       'primary stratum indicator symbol']) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.related_shape_aspect\shape_aspect.description =
       'special symbol part template')))) = 1));
 WR11: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description = 
       'stratum feature template component') OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'stratum feature template')) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)))) &#60;= 1));
 WR12: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description IN
       ['laminate text component']) OR
       (SIZEOF (QUERY (sfi &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'stratum feature implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (sfi.relating_shape_aspect)))) &#62;= 1));
 WR13: NOT ((SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FIDUCIAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONNECTED_AREA_COMPONENT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_GROUP_COMPONENT_SHAPE_ASPECT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'THERMAL_COMPONENT_SHAPE_ASPECT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_REMOVAL_COMPONENT_SHAPE_ASPECT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTEGRAL_SHIELD',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROBE_ACCESS_AREA',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND'] *
       TYPEOF (SELF)) &#62;= 1) OR
       (SELF\shape_aspect.description IN [
       'laminate component',
       'laminate text component',
       'laminate text string component',
       'conductive interconnect element with pre defined transitions', 
       'join 2 physical connectivity definition supporting',
     'conductive interconnect element with user defined single transition',
      'special symbol laminate component',
       'primary stratum indicator symbol',
       'stratum feature template component'])) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\
        product_definition.frame_of_reference\
        application_context_element.name = 'layout occurrence'));
 WR14: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template')) &#60;= 1;
 WR15: NOT(EXISTS(SELF\shape_aspect.description)) OR 
       (NOT (SELF\shape_aspect.description =
       'join 2 physical connectivity definition supporting') OR
       (SIZEOF ( QUERY (propd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (ri &#60;* QUERY (propdr &#60;* USEDIN (propd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       propdr\property_definition_relationship.name = 'requirement implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP' IN
       TYPEOF (ri.relating_property_definition.definition)) AND
       (ri.relating_property_definition.definition\shape_aspect_relationship.name =
       'ordered physical connectivity definition') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION'
       IN TYPEOF (ri.relating_property_definition.definition.
       related_shape_aspect)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION' IN TYPEOF
       (ri.relating_property_definition.definition.
       relating_shape_aspect)))) = 1))) = 1));
END_ENTITY; -- component_shape_aspect
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_shape_aspect shall be an aspect of the shape of a component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_shape_aspect shall be an inter_stratum_feature, probe_access_area, or land, or fiducial, or assembly_group_component_shape_aspect, or material_removal_component_shape_aspect,
or integral_shield, or thermal_component_shape_aspect or connected_area_component, or it shall have a
description of 
'laminate component',
'laminate text component', 'laminate text string component', 'part template occurrence',
'conductive interconnect element with pre defined transitions', 
'join 2 physical connectivity definition supporting',
'conductive interconnect element with user defined single transition', 
'special symbol laminate component', 'primary stratum
indicator symbol', or 'stratum feature template component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The component_shape_aspect shall have at most one shape_representation
with a name of 'planar projected shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The component_shape_aspect shall have at most one shape_representation
with a name of '3d bound volume shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the component_shape_aspect has a description of 'laminate text
component', 'laminate text string component',
'special symbol laminate component', 'primary stratum indicator
symbol', or 'stratum feature template component', it shall be an aspect of the
shape of a component_definition that is the definition of a product that is
categorized as an 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the component_shape_aspect has a description of 'laminate text
component', the component_shape_aspect shall be related to exactly one
part_text_template_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the component_shape_aspect has a description of 
'stratum feature template component', the
component_shape_aspect shall be related to exactly one stratum_feature as
the 'stratum feature implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the component_shape_aspect has a description of either
'conductive interconnect element with pre defined transitions',
'join 2 physical connectivity definition supporting' or 'conductive
interconnect element with user defined single transition', the
component_shape_aspect shall relate to exactly one stratum_feature to
specify the 'composed conductor'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the component_shape_aspect has a description of either
'conductive interconnect element with pre defined transitions',
'join 2 physical connectivity definition supporting' or 'conductive
interconnect element with user defined single transition', the
component_shape_aspect shall relate to at least two component_terminal that
have a description of 'conductive interconnect element terminal' to specify
the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the component_shape_aspect has a description of either 'special
symbol laminate component' or 'primary stratum indicator symbol', the
component_shape_aspect shall be related to exactly one part_template_definition with a
description of 'special symbol part template' as an 'instantiated
template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the component_shape_aspect has a description of 'stratum feature
template component', the component_shape_aspect shall be related, as an
'instantiated template', to not more than one part_template_definition that has a
description of 'stratum feature template' or to not more than one land_physical_template.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the component_shape_aspect has a description of 'laminate text component', the
component_shape_aspect shall be related to at least one stratum_feature as
the 'stratum feature implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the component_shape_aspect is an inter_stratum_feature, probe_access_area, or land, or fiducial, or assembly_group_component_shape_aspect, or material_removal_component_shape_aspect,
or integral_shield, or thermal_component_shape_aspect, or connected_area_component, or if it has a
description of 'laminate component',
'laminate text component', 'laminate text string component',
'conductive interconnect element with pre defined transitions',
'join 2 physical connectivity definition supporting',
'conductive interconnect element with user defined single transition',
'special symbol laminate component', 'primary stratum
indicator symbol', or 'stratum feature template component', 
it shall be a shape_aspect for a component_definition
with a frame_of_reference of 'layout occurrence'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>The component_shape_aspect shall be related to at most one shape_aspect as an 'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the component_shape_aspect has a description of 'join 2 physical connectivity definition supporting', the component_shape_aspect shall have exactly one property_definition that is related, as the 'requirement implementation', 
to exactly one property_definition that is the property of a shape_aspect_relationship that relates one physical_connectivity_definition to another physical_connectivity_definition as an 'ordered physical connectivity definition'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the component_shape_aspect has a description of 'conductive interconnect
element with pre defined transitions', there shall be at least one
shape_aspect_relationship with name of 'connected points' that relates the
component_shape_aspect (as relating_shape_aspect) to one layer_connection_point_link
(as related_shape_aspect). </DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the component_shape_aspect has a description of 'conductive interconnect 
element with pre defined transitions' or 'conductive interconnect element 
with user defined single transition', each shape_aspect_relationship that
uses the component_shape_aspect as its relating_shape_aspect and has a
name of 'connected points' shall have a unique description.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The aggregation of design views referenced by the path in the ARM of stratum_feature_implementation.resident_stratum.assembly.assembly shall be the same aggregation of design views as that reference by the path in the ARM of assembly.assembly when the component_shape_aspect is an implementation of the ARM concept of Stratum_feature_template_component</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1059"
></A
>5.2.3.1.73 component_terminal</H4
>A component_terminal is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_component_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_macro_component_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Bare_die_component_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_termination_passage_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Conductive_interconnect_element_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_component_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_component_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_macro_component_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Land_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Minimally_defined_component_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Non_functional_land_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Package_terminal_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_component_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_component_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Via_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY component_terminal
  SUPERTYPE OF (ONEOF(assembly_module_macro_component_join_terminal,
        interconnect_module_macro_component_join_terminal))
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: (SELF\shape_aspect.description IN 
      ['assembly module component terminal', 
       'bare die component terminal', 
       'component termination passage join terminal', 
       'conductive interconnect element terminal', 
       'interconnect component join terminal', 
       'interconnect module component terminal', 'land join terminal', 
       'minimally defined component terminal',
       'non functional land join terminal', 
       'packaged component join terminal', 
       'printed component join terminal', 'package terminal occurrence',
       'via terminal']) OR
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_MODULE_MACRO_COMPONENT_JOIN_TERMINAL' IN
       TYPEOF  (SELF)) OR
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_MODULE_MACRO_COMPONENT_JOIN_TERMINAL' IN
       TYPEOF  (SELF));
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF  (SELF.of_shape.definition);
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) &#60;= 1;
  WR4: SIZEOF (QUERY (at &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated terminals') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF (at.relating_shape_aspect))) &#60;= 1;
  WR5: SIZEOF (QUERY (cr &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connectivity requirement') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_NETWORK' IN
       TYPEOF (cr.relating_shape_aspect))) &#60;= 1;
  WR6: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design usage')) &#60;= 1;
  WR7: (NOT (SELF\shape_aspect.description IN 
       ['assembly module component terminal', 
       'bare die component terminal', 'package terminal occurrence', 
       'packaged component join terminal', 
       'printed component join terminal'])) OR
       (SELF.product_definitional);
  WR8: (NOT (SELF\shape_aspect.description = 
       'assembly module component terminal')) OR
       ((SELF.of_shape.definition.frame_of_reference.name =
       'physical occurrence') AND
       (EXISTS(SELF.of_shape.definition\product_definition.name)) AND
       (NOT(EXISTS(SELF.of_shape.definition\product_definition.name)) OR
       (SELF.of_shape.definition\product_definition.name =
       'assembly module'))
       );
  WR9: (NOT (SELF\shape_aspect.description = 
       'assembly module component terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)))) = 1);
 WR10: (NOT (SELF\shape_aspect.description = 
       'bare die component terminal')) OR
       (SELF.of_shape.definition\product_definition.description = 
       'bare die component');
 WR11: (NOT (SELF\shape_aspect.description = 
       'bare die component terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)))) = 1);
(*
 WR12: (NOT (SELF\shape_aspect.description = 
       'component termination passage join terminal')) OR
       (
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_PASSAGE' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description =
       'component termination passage'));
*)
 WR13: (NOT (SELF\shape_aspect.description = 
       'component termination passage join terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description =
       'component termination passage template join terminal')) = 1);
(*
  WR14: (NOT (SELF\shape_aspect.description = 
        'conductive interconnect element terminal')) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (associated_component(SELF)) AND
       ((associated_component(SELF).description =
       'conductive interconnect element with pre defined transitions') OR
       (associated_component(SELF).description =
   'conductive interconnect element with user defined single transition')
       ));
*)
 WR15: (NOT (SELF\shape_aspect.description IN
       ['conductive interconnect element terminal',
       'interconnect component join terminal',
       'printed component join terminal'])) OR
       (SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description =
       'connection zone')) &#60;= 1);
 WR16: (NOT (SELF\shape_aspect.description =
       'interconnect module component terminal')) OR
   ((SELF.of_shape.definition\product_definition.frame_of_reference.name =
       'physical occurrence') AND
       (EXISTS(SELF.of_shape.definition\product_definition.name)) AND
       (NOT(EXISTS(SELF.of_shape.definition\product_definition.name)) OR
       (SELF.of_shape.definition\product_definition.name =
       'interconnect module'))
       );

 WR17: (NOT (SELF\shape_aspect.description =
       'interconnect module component terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_MODULE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)
       )) = 1);
 WR18: (NOT (SELF\shape_aspect.description IN
       ['land join terminal', 'non functional land join terminal'])) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (TRUE)))) = 1);
(*
 WR19: (NOT (SELF\shape_aspect.description = 'land join terminal')) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND' IN
       TYPEOF (associated_component(SELF)));
*)
 WR20: (NOT (SELF\shape_aspect.description = 
       'minimally defined terminal')) OR
       (SIZEOF (QUERY (pdr&#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'part terminal external reference')) = 1);
(*
 WR21: (NOT (SELF\shape_aspect.description = 
       'non functional land join terminal')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description IN
       ['non functional land',
       'via dependent non functional land',
       'via and contact size dependent non functional land',
       'component termination passage dependent non functional land',
       'contact size dependent non functional land',
       'component termination passage and contact size ' +
       'dependent non functional land',
       'unsupported passage dependent non functional land'])))) = 1);
*)
 WR22: (NOT (SELF\shape_aspect.description = 
       'package terminal occurrence')) OR
       (SIZEOF (QUERY (ud &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'usage definition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_TERMINAL' IN
       TYPEOF (ud.relating_shape_aspect)))) = 1);
 WR23: (NOT (SELF\shape_aspect.description IN 
       ['package terminal occurrence',
       'packaged component join terminal'])) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_COMPONENT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.
        frame_of_reference.name = 
       'physical occurrence'));
 WR24: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'join terminal'))) = 1);
 WR25: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2)) &#60;= 2)) &#60;= 1)) &#60;= 1); 
 WR26: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu &#60;* QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'maximum wire length')) &#60;= 1)) &#60;= 1)) &#60;= 1);
 WR27: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu &#60;* QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'minimum wire length')) &#60;= 1)) &#60;= 1)) &#60;= 1); 
 WR28: (NOT (SELF\shape_aspect.description = 
       'printed component join terminal')) OR
       ((SELF.of_shape.definition\product_definition.
       frame_of_reference.name =
       'layout occurrence') AND
       (SELF.of_shape.definition\product_definition.
       name = 'interconnect module')
       );
 WR29: (NOT (SELF\shape_aspect.description = 
       'printed component join terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'join terminal'))) = 1);
 WR30: (NOT (SELF\shape_aspect.description = 
       'printed component join terminal')) OR
       (SIZEOF (QUERY (i &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       pdr\shape_aspect_relationship.name = 'implementation') |
       ((SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (i.relating_shape_aspect)) &#62;= 1) AND
       (i.relating_shape_aspect\shape_aspect.description = 
                        'stratum feature template component'))
       )) = 1);
(*
 WR31: (NOT (SELF\shape_aspect.description = 'via terminal')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_PASSAGE' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description IN
       ['buried via', 'interfacial connection',
       'bonded conductive base blind via',
       'non conductive base blind via',
       'plated conductive base blind via'])))) = 1);
*)
 WR32: (NOT (SELF\shape_aspect.description = 'via terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description =
       'via template terminal')) = 1);
 WR33: (NOT (SELF\shape_aspect.description =
       'interconnect component join terminal')) OR
       ((SELF.of_shape.definition\product_definition.
       frame_of_reference.name =
       'physical occurrence') AND
       NOT(SELF.of_shape.definition\product_definition.description 
       IN ['assembly module component', 'bare die component', 
       'interconnect module component', 'laminate component',
       'packaged component']));
 WR34: SIZEOF(QUERY(pd &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') | SIZEOF(QUERY(pdr &#60;* USEDIN(pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
       SIZEOF(QUERY(dri &#60;* pdr.used_representation.items |
       (dri\representation_item.name = 'global swappable') AND 
       (dri\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1)) &#60;= 1;
 WR35: SIZEOF(QUERY(pd &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') | SIZEOF(QUERY(pdr &#60;* USEDIN(pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
       SIZEOF(QUERY(dri &#60;* pdr.used_representation.items |
       (dri\representation_item.name = 'local swappable') AND 
       (dri\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1)) &#60;= 1;
 WR36: SIZEOF(QUERY(pd &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') | SIZEOF(QUERY(pdr &#60;* USEDIN(pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
       SIZEOF(QUERY(dri &#60;* pdr.used_representation.items | dri\representation_item.name = 
       'swap code'
       )) = 1)) = 1)) &#60;= 1;
END_ENTITY; -- component_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The component_terminal shall have a description of 'assembly module
component terminal', 'bare die component terminal', 'component termination
passage join terminal', 'conductive interconnect element terminal',
'interconnect component join terminal', 'interconnect module component
terminal', 'land join terminal', 'minimally defined component terminal',
'non functional land join terminal', 'packaged component join terminal',
'printed component join terminal', 'package terminal occurrence',
or 'via terminal' or shall be an assembly_module_macro_component_join_terminal
or shall be an interconnect_module_macro_component_join_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The component_terminal shall be an aspect of the shape of a 
component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The component_terminal shall be related to at most one
shape_aspect as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The component_terminal shall be related to at most one
physical_connectivity_definition as 'associated terminals'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The component_terminal shall be related to at most one
physical_network as the 'connectivity requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The component_terminal shall relate to at most one shape_aspect to
specify the 'design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the component_terminal has a description of 'assembly module
component terminal', 'bare die component terminal', 'package terminal
occurrence', 'packaged component join terminal', or 'printed component join
terminal', it shall lie on the boundary of the shape.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the component_terminal has a description of 'assembly module
component terminal', it shall be an aspect of the shape of a 
component_definition that has a frame_of_reference name of 
'physical occurrence' or it shall be an assembly_module_macro_component_join_terminal
and it shall be an aspect of the shape of a component_definition
that is associated with a product that is a 'assembly module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the component_terminal has a description of 'assembly module
component terminal', the component_terminal shall be related to exactly one
assembly_module_terminal as an 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the component_terminal has a description of 'bare die component
terminal', it shall be an aspect of the shape of a product_definition that has
a description of 'bare die component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the component_terminal has a description of 'bare die component
terminal', the component_terminal shall be related to exactly one
bare_die_terminal as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the component_terminal has a description of 'component
termination passage join terminal', the component_terminal shall be related
to exactly one plated_passage with a description of 'component termination
passage' as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the component_terminal has a description of 'component
termination passage join terminal', the component_terminal shall be related
to exactly one shape_aspect with a description of 'component termination
passage template join terminal' as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the component_terminal has a description of 'conductive
interconnect element terminal', the component_terminal shall be related to
exactly one component_shape_aspect with a description of either 'conductive
interconnect element with pre defined transitions' or 'conductive interconnect
element with user defined single transition' as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the component_terminal has a description of 'conductive
interconnect element terminal', 'interconnect component join terminal' or
'printed component join terminal', the component_terminal shall relate to
zero or one shape_aspect that has a name of 'connection zone'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the component_terminal has a description of 'interconnect module
component terminal', it shall be an aspect of the shape of a 
component_definition that has a frame_of_reference name of 
'physical occurrence' or it shall be an interconnect_module_macro_component_join_terminal
and it shall be an aspect of the shape of a component_definition
that is associated with a product that is a 'interconnect
module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>If the component_terminal has a description of 'interconnect module
component terminal', the component_terminal shall be related to exactly one
interconnect_module_terminal as the 'instantiated feature' where the
interconnect_module_terminal is on a product_definition of a product that
is an 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR18: </SPAN
>If the component_terminal has a description of either 'land join
terminal' or 'non functional land join terminal', the component_terminal
shall be related to exactly one land_template_terminal as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR19: </SPAN
>If the component_terminal has a description of 'land join terminal',
the component_terminal shall be related to exactly one land as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR20: </SPAN
>If the component_terminal has a description of 
'minimally defined component terminal' the component_terminal
shall be the definition of exactly one property_definition_representation
with a used_representation.name of 'part terminal external reference'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR21: </SPAN
>If the component_terminal has a description of 'non functional land
join terminal', the component_terminal shall be related to exactly one land
that has a description of 'non functional land', 'via dependent non
functional land', 'via and contact size dependent non functional land',
'component termination passage dependent non functional land', 'contact
size dependent non functional land', 'component termination passage and
contact size dependent non functional land', or 'unsupported passage
dependent non functional land' as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR22: </SPAN
>If the component_terminal has a description of 'package terminal
occurrence', the component_terminal shall be related to exactly one
package_terminal as the 'usage definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR23: </SPAN
>If the component_terminal has a description of 'package terminal
occurrence', or 'packaged component join terminal' it shall be an aspect of
the shape of a packaged_component that has a frame_of_reference name of
'physical occurrence'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR24: </SPAN
>If the component_terminal has a description of 'packaged component
join terminal', the component_terminal shall be related to exactly one
packaged_part_terminal with a description of 'join terminal' as the
'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR25: </SPAN
>If the component_terminal has a description of 'packaged component join
terminal', it shall have at most one property_definition that has at most one
representation that contains at most two length_measure_with_units.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR26: </SPAN
>If the component_terminal has a description of 'packaged component join
terminal', it shall have at most one property_definition that has at most one
representation that contains at most one length_measure_with_unit with a name
of 'maximum wire length'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR27: </SPAN
>If the component_terminal has a description of 'packaged component join
terminal', it shall have at most one property_definition that has at most one
representation that contains at most one length_measure_with_unit with a name
of 'minimum wire length'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR28: </SPAN
>If the component_terminal has a description of 'printed component join
terminal', it shall be an aspect of the shape of a component_definition that
has a frame_of_reference name of 'layout occurrence' and that is associated
with a product that is an 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR29: </SPAN
>If the component_terminal has a description of 'printed component
join terminal', the component_terminal shall be related to exactly one
printed_part_template_terminal with a description of 'join terminal' as the
'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR30: </SPAN
>If the component_terminal has a description of 'printed component
join terminal', the component_terminal shall be related, as an
'implementation', to exactly one component_shape_aspect with a description
of stratum_feature_template_component. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR31: </SPAN
>If the component_terminal has a description of 'via terminal', the
component_terminal shall be related to exactly one plated_passage that has
a description of 'buried via', 'interfacial connection', 'bonded conductive
base blind via', 'non conductive base blind via', or 'plated conductive
base blind via' as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR32: </SPAN
>If the component_terminal has a description of 'via terminal', the
component_terminal shall be related to exactly one shape_aspect with a
description of 'via template terminal' as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR33: </SPAN
>If the component_terminal has a description of 'interconnect 
component join terminal', it shall be an aspect of the shape of a 
component_definition that has a frame_of_reference name of 
'physical occurrence' and that is associated with a product that 
does not have a description of 'assembly module component',
'bare die component', 'interconnect module component', 'laminate component',
or 'packaged component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR34: </SPAN
>The component_terminal shall be the definition for at most one
property_definition that is the definition of a 
property_definition_representation that has a used representation 
that has an item that is a descriptive_representation_item with a 
name of 'global swappable' and a description of 'true' or 'false'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR35: </SPAN
>The component_terminal shall be the definition for at most one
property_definition that is the definition of a 
property_definition_representation that has a used representation 
that has an item that is a descriptive_representation_item with a 
name of 'local swappable' and a description of 'true' or 'false'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR36: </SPAN
>The component_terminal shall be the definition for at most one
property_definition that is the definition of a 
property_definition_representation that has a used representation 
that has an item that is a descriptive_representation_item with a 
name of 'swap code'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the component_terminal has a description of either 'land join
terminal' or 'non functional land join terminal', the component_terminal
shall be associated with the stratum referenced by the stratum_surface.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1135"
></A
>5.2.3.1.74 composite_array_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A composite_array_shape_aspect is a composite_shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Part_array_feature</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY composite_array_shape_aspect
  SUPERTYPE OF (ONEOF( linear_composite_array_shape_aspect,
                 rectangular_composite_array_shape_aspect))
  SUBTYPE OF (composite_shape_aspect);
END_ENTITY; -- composite_array_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1141"
></A
>5.2.3.1.75 composite_array_shape_aspect_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An composite_array_shape_aspect_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Part_feature_placement_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY composite_array_shape_aspect_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\composite_array_shape_aspect_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) = 1;
END_ENTITY; -- composite_array_shape_aspect_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The composite_array_shape_aspect_link shall relate to a shape_aspect in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The composite_array_shape_aspect_link shall relate to a shape_aspect in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of composite_array_shape_aspect_link shall be only composite_array_shape_aspect_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each composite_array_shape_aspect_link shall be referenced exactly once by a shape_aspect_relationship related_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1155"
></A
>5.2.3.1.76 composite_group_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A composite_group_shape_aspect is a composite_shape_aspect that implements the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Composite_group_shape_element</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY composite_group_shape_aspect
  SUBTYPE OF (composite_shape_aspect);
END_ENTITY; -- composite_group_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1161"
></A
>5.2.3.1.77 composite_signal_property_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A composite_signal_property_relationship is a property_definition_relationship that implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Composite_signal_property_relationship</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY composite_signal_property_relationship
  SUBTYPE OF (property_definition, property_definition_relationship);
WHERE
  WR1: SELF\property_definition_relationship.related_property_definition.definition :&#60;&#62;:
       SELF\property_definition_relationship.relating_property_definition.definition;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\property_definition_relationship ||
       SELF\composite_signal_property_relationship || SELF\property_definition)) = 0;
  WR3: SELF\property_definition_relationship.related_property_definition.name =
       'signal property';
  WR4: SELF\property_definition_relationship.relating_property_definition.name =
       'composite signal property';
  WR5: SELF\property_definition.name = '';
  WR6: SELF\property_definition.description = '';
  WR7: SELF\property_definition_relationship.name = '';
  WR8: SELF\property_definition_relationship.description = '';
  WR9: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CHARACTERIZED_OBJECT' IN TYPEOF(SELF\property_definition.definition)) AND
       (SELF\property_definition.definition.description = 'aggregate operation');
 WR10: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNAL_DEFINITION' IN TYPEOF(SELF\property_definition.definition);
END_ENTITY; -- composite_signal_property_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The composite_signal_property_relationship shall not relate to the same property_definition definition through the related and relating
attributes.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The composite_signal_property_relationship shall not be any other subtype of property_definition_relationship or property_definition. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The composite_signal_property_relationship shall reference only a 'signal property' through the related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The composite_signal_property_relationship shall reference only a 'composite signal property' through the relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The composite_signal_property_relationship name inherited from property_definition shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The composite_signal_property_relationship description inherited from property_definition shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The composite_signal_property_relationship name inherited from property_definition_relationship shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The composite_signal_property_relationship description inherited from property_definition_relationship shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The composite_signal_property_relationship shall reference exactly one characterized_object that has a description of 'aggregate opertion'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The composite_signal_property_relationship shall reference exactly one characterized_object that is also an external_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1178"
></A
>5.2.3.1.78 composite_unit_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A composite_unit_shape_aspect is a composite_shape_aspect that implements the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Composite_unit_shape_element</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY composite_unit_shape_aspect
  SUBTYPE OF (composite_shape_aspect);
END_ENTITY; -- composite_unit_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1184"
></A
>5.2.3.1.79 concentricity_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A concentricity_tolerance is a geometric_tolerance_with_specified_datum_system
that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Concentricity_and_coaxiality_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY concentricity_tolerance
  SUBTYPE OF (geometric_tolerance_with_specified_datum_system);
WHERE
  WR1: SELF\geometric_tolerance.name = 'concentricity';
END_ENTITY; -- concentricity_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name for the concentricity_tolerance shall be 'concentricity'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The toleranced_shape_aspect of the concentricity_tolerance shall either be a 
centre_of_symmetry with a description of either 'axis' or 'point'; or a 
composite_shape_aspect in which the 'composing' shape_aspects are all of type 
centre_of_symmetry and have the same description, either 'axis' or 'point'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The concentricity_tolerance shall have exactly one physical_unit_datum in its referenced 
datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the toleranced_shape_aspect of the concentricity_tolerance is either a 
centre_of_symmetry with a description of 'point', or a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'point'; the physical_unit_datum of the datum_system shall have a description of 
'point'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the toleranced_shape_aspect of the concentricity_tolerance is either a 
centre_of_symmetry with a description of 'axis', or a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'axis'; the physical_unit_datum of the datum_system shall have a description of 
'axis'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP5: </SPAN
>The tolerance_zone_boundary of the concentricity_tolerance shall have a description of 'circular or 
cylindrical or spherical'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1198"
></A
>5.2.3.1.80 conductance_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A conductance_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Conductance_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY conductance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\conductance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = siemens;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- conductance_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The conductance_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The conductance_measure_with_unit shall reference an si_unit with the name of siemens.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1208"
></A
>5.2.3.1.81 conductive_interconnect_element_terminal_link</H4
>A conductive_interconnect_element_terminal_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Conductive_interconnect_element_terminal_link</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY conductive_interconnect_element_terminal_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\conductive_interconnect_element_terminal_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\shape_aspect.of_shape.definition);
  WR8: SELF\shape_aspect_relationship.related_shape_aspect.description = 'conductive interconnect element terminal';
  WR9: SELF\shape_aspect_relationship.relating_shape_aspect.description = 'conductive interconnect element terminal';
  WR10: SELF\shape_aspect.of_shape.definition\product_definition.description = 'laminate component';
END_ENTITY; -- conductive_interconnect_element_terminal_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related point shall not be the relating point. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The conductive_interconnect_element_terminal_link shall relate to only a  conductive_interconnect_element_terminal in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The conductive_interconnect_element_terminal_link shall relate to only a conductive_interconnect_element_terminal in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of conductive_interconnect_element_terminal_link shall be only conductive_interconnect_element_terminal_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The shape_aspect supertype shall reference a component_definition</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The related shape_aspect description shall be a 'conductive interconnect element terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The relating shape_aspect description shall be a 'conductive interconnect element terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The associated product_definition description shall be a 'laminate component'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1224"
></A
>5.2.3.1.82 connected_area_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A connected_area_component is a component_shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Connected_area_component</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY connected_area_component
 SUBTYPE OF (component_shape_aspect);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN  
       TYPEOF (SELF.of_shape.definition)) AND 
       (SIZEOF (QUERY (prpc &#60;* 
       USEDIN (SELF.of_shape.definition.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1);
  WR2: SIZEOF (QUERY (sfi &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'stratum feature implementation') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (sfi.relating_shape_aspect))) = 1;
 WR3: SIZEOF (QUERY (sfi &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated layer connection point') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (sfi.relating_shape_aspect))) &#62;= 1;
 WR4: SELF\shape_aspect.description = 'stratum feature template component';
 WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\component_shape_aspect||
       SELF\connected_area_component)) = 0;
END_ENTITY; -- connected_area_component
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The connected_area_component shall be an aspect of the shape of a component_definition that
is the definition of a product that is categorized as an 'template
module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The connected_area_component shall be related to exactly one stratum_feature as a 'stratum feature implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The connected_area_component shall be related to at least one layer_connection_point as an 'associated layer connection point'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The connected_area_component shall have a description of 'stratum feature template component'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The connected_area_component shall not be a complex instance other than with its direct supertypes. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1236"
></A
>5.2.3.1.83 connection_zone_based_assembly_joint</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A connection_zone_based_assembly_joint is an assembly_joint that includes the
identification of the connection zones that are to be mated in addition to the specific
features that are to be mated.  A connection_zone_based_assembly_joint implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Connection_zone_based_assembly_joint</SPAN
>.
<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY connection_zone_based_assembly_joint
  SUBTYPE OF (assembly_joint);
WHERE
  WR1: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 1')) = 1;
  WR2: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 2')) = 1;
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar.relating_shape_aspect\shape_aspect.description = 'connection zone')) = 2;

END_ENTITY; -- connection_zone_based_assembly_joint
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The connection_zone_based_assembly_joint shall be related to exactly one shape_aspect as 'zone 1' by
a shape_aspect_relationship.related_shape_aspect. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The connection_zone_based_assembly_joint shall be related to exactly one shape_aspect as 'zone 2' by
a shape_aspect_relationship.relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The connection_zone_based_assembly_joint shall be related to only shape_aspects with a description of 'connection_zone'. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1246"
></A
>5.2.3.1.84 connection_zone_based_fabrication_joint</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A connection_zone_based_fabrication_joint is an fabrication_joint that includes the
identification of the connection zones that are to be mated in addition to the specific
features that are to be mated.  A connection_zone_based_fabrication_joint implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Connection_zone_based_fabrication_joint</SPAN
>.
<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY connection_zone_based_fabrication_joint
  SUBTYPE OF (fabrication_joint);
WHERE
  WR1: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 1')) = 1;
  WR2: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 2')) = 1;
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar.relating_shape_aspect\shape_aspect.description = 'connection zone')) = 2;

END_ENTITY; -- connection_zone_based_fabrication_joint
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The connection_zone_based_fabrication_joint shall be related to exactly one shape_aspect as 'zone 1' by
a shape_aspect_relationship.related_shape_aspect. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The connection_zone_based_fabrication_joint shall be related to exactly one shape_aspect as 'zone 2' by
a shape_aspect_relationship.relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The connection_zone_based_fabrication_joint shall be related to only shape_aspects with a description of 'connection_zone'. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1256"
></A
>5.2.3.1.85 connection_zone_interface_plane_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A connection_zone_interface_plane_relationship is a shape_aspect and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Connection_zone_interface_plane_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY connection_zone_interface_plane_relationship
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.name;
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect_relationship ||
       SELF\connection_zone_interface_plane_relationship ||
       SELF\shape_aspect)) = 0;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SEATING_PLANE' IN 
       TYPEOF(SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.relating_shape_aspect\shape_aspect.description = 
      'plane';
  WR4: SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description = 
      'connection zone';
  WR5: SELF\shape_aspect_relationship.description IN ['area', 'edge']; 
  WR6: SELF\shape_aspect.of_shape = SELF\shape_aspect_relationship.related_shape_aspect.of_shape;
  WR7: SELF\shape_aspect.of_shape = SELF\shape_aspect_relationship.relating_shape_aspect.of_shape;
  WR8: SIZEOF (QUERY (dz &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'derived zone') |
       dz.related_shape_aspect\shape_aspect.description = 'connection zone')) = 1;
END_ENTITY; -- connection_zone_interface_plane_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>A connection_zone_interface_plane_relationship shall not be any other type of shape_aspect_relationship or any other type of shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>A connection_zone_interface_plane_relationship shall relate to a seating_plane.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>A connection_zone_interface_plane_relationship shall relate to a seating_plane, with a name of 'plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>A connection_zone_interface_plane_relationship shall relate to a shape_aspect with a description of 'connection zone'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>A connection_zone_interface_plane_relationship shall have a description of 'area' or 'edge'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>A connection_zone_interface_plane_relationship shall have the same of_shape through the shape_aspect supertype and through the related_shape_aspect in the shape_aspect_relationship supertype. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>A connection_zone_interface_plane_relationship shall have the same of_shape through the shape_aspect supertype and through the relating_shape_aspect in the shape_aspect_relationship supertype. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>A connection_zone_interface_plane_relationship shall be related to one shape_aspect with a description of 'connection zone' as the 'derived zone'. </DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1274"
></A
>5.2.3.1.86 connection_zone_map_identification</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A connection_zone_map_identification is a shape_aspect and a representation_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Connection_zone_map_identification</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY connection_zone_map_identification
  SUBTYPE OF (shape_aspect,representation_relationship);
WHERE
  WR1: SELF\representation_relationship.rep_2 :&#60;&#62;:
       SELF\representation_relationship.rep_1;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'USAGE_VIEW_CONNECTION_ZONE_TERMINAL_SHAPE_RELATIONSHIP' IN 
	TYPEOF(SELF\representation_relationship.rep_1);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'USAGE_VIEW_CONNECTION_ZONE_TERMINAL_SHAPE_RELATIONSHIP' IN 
	TYPEOF(SELF\representation_relationship.rep_2);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\representation_relationship ||
       SELF\connection_zone_map_identification)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\representation_relationship.name = '';
  WR7: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FOOTPRINT_DEFINITION' IN TYPEOF(SELF.of_shape.definition);
END_ENTITY; -- connection_zone_map_identification 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related zone shall not be the relating zone. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The connection_zone_map_identification shall relate to only a usage_view_connection_zone_terminal_shape_relationship in the rep_1.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The connection_zone_map_identification shall relate to only a usage_view_connection_zone_terminal_shape_relationship in the rep_2.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of connection_zone_map_identification shall be only connection_zone_map_identification, shape_aspect, and representation_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the representation_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each connection_zone_map_identification shall be a shape_aspect for a footprint_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1288"
></A
>5.2.3.1.87 coordinated_representation_item</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A coordinated_representation_item is a representation and a representation_item
that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Plus_minus_tolerance_characteristic</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Statistical_tolerance_characteristic</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Symmetrical_tolerance_characteristic</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Tolerance_characteristic</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY coordinated_representation_item
  SUBTYPE OF (representation, representation_item);
WHERE
  WR1: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       SIZEOF (USEDIN (pdr, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DATA_ENVIRONMENT.ELEMENTS')) &#60;= 1)) &#60;= 1;
  WR2: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
  WR3: (NOT (SELF\representation_item.name = 'tolerance')) OR
       (SIZEOF (QUERY (it &#60;* SELF.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) &#62;= 1); 
  WR4: (NOT (SELF\representation_item.name = 'plus minus tolerance')) OR
       (SIZEOF (QUERY (it &#60;* SELF.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) = 3); 
  WR5: (NOT (SELF\representation_item.name = 'symmetrical tolerance')) OR
       (SIZEOF (QUERY (it &#60;* SELF.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) = 2); 
  WR6: (NOT (SELF\representation_item.name = 'plus minus tolerance'))
       OR
       (
        (SIZEOF (QUERY (it &#60;* SELF.items
         | ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
            'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) 
           AND 
            (it\representation_item.name = 'basic value'))
        ) = 1)
       AND
        (SIZEOF (QUERY (it &#60;* SELF.items
         | ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
            'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) 
           AND 
            (it\representation_item.name = 'plus value'))
        ) = 1)
       AND
        (SIZEOF (QUERY (it &#60;* SELF.items 
         | ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
            'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) 
           AND 
            (it\representation_item.name = 'minus value'))
        ) = 1)
       );

  WR7: (NOT (SELF\representation_item.name = 'symmetrical tolerance')) OR
       ((SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it)) AND (it\representation_item.name = 'basic value'))
                        ) = 1)
       AND
       (SIZEOF (QUERY (it &#60;* SELF.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it)) AND ( it\representation_item.name = 'deviation value'))
                        ) = 1)
       ); 
END_ENTITY; -- coordinated_representation_item
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The coordinated_representation_item shall represent at most one property
that is an element of at most one data_environment.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The coordinated_representation_item shall be referenced by exactly one
document.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the coordinated_representation_item has a representation_item name of
'tolerance', it shall contain at least one measure_representation_item.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the coordinated_representation_item has a representation_item name of
'plus minus tolerance', it shall contain exactly three 
measure_representation_items.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the coordinated_representation_item has a representation_item name of
'symmetrical tolerance', it shall contain exactly two 
measure_representation_items.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the coordinated_representation_item has a representation_item name
of 'plus minus tolerance', the three contained measure_representation_items
shall have their name attribute satisfied by 'basic value', 'plus value',
and 'minus value'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the coordinated_representation_item has a representation_item name of
'symmetrical tolerance', the two contained measure_representation_items
shall have their name attribute satisfied by 'basic value' and
'deviation value'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the coordinated_representation_item has a representation_item name
of 'plus minus tolerance', each contained measure_representation_items
shall have the same unit_components for the dimensions attribute.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the coordinated_representation_item has a representation_item name
of 'plus minus tolerance', the measure_representation_item
with a name attribute of 'minus value' shall have a value_component 
less then that of the measure_representation_item with a name attribute 
of 'basic value' which shall have a value_component less then that of 
the measure_representation_item with a name attribute of 'plus_value'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1313"
></A
>5.2.3.1.88 csg_2d_shape_representation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A csg_2d_shape_representation is a shape_representation that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Area_2d_shape_definition</SPAN
>.
A csg_2d_shape_representation is a two-dimensional shape_representation that represents the shape of a product using constructive solid geometry operations and techniques. The solid objects may be either 2D primitives, or half-space 2D solids. <DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY csg_2d_shape_representation
  SUBTYPE OF (shape_representation);
   WHERE 
 WR1: SELF.context_of_items\
  geometric_representation_context.coordinate_space_dimension = 2;

 WR2 : SIZEOF (QUERY (it &#60;* SELF.items| NOT
     (SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.CSG_SOLID', 
     'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.MAPPED_ITEM', 
     'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.AXIS2_PLACEMENT_2D'] 
     * TYPEOF(it)) = 1 ))) = 0;

 WR3: SIZEOF(QUERY ( it &#60;* SELF.items | 
    (SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.CSG_SOLID']
	* TYPEOF(it)) = 1) 
	OR 
	(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.MAPPED_ITEM' 
	IN TYPEOF(it)) AND
	('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
	'CSG_2D_SHAPE_REPRESENTATION' 
	  IN TYPEOF(it\mapped_item.mapping_source.mapped_representation))) 
       )) &#62;= 1;

 WR4: SIZEOF(QUERY ( it &#60;* SELF.items | 
     (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.MAPPED_ITEM' 
     IN TYPEOF(it)) AND (NOT (( 
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
      'CSG_2D_SHAPE_REPRESENTATION') 
      IN TYPEOF(it\mapped_item.mapping_source.mapped_representation)))) )) = 0;
 WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_representation ||
      SELF\csg_2d_shape_representation || SELF\representation)) = 0;
END_ENTITY; -- csg_2d_shape_representation 
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The geometric_representation_context of the csg_2d_shape_representation shall have a coordinate_space_dimension equal to two.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The items in a csg_2d_shape_representation shall be a csg_solid, mapped_item, or an axis2_placement_2d. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>At least one of the items in a csg_2d_shape_representation shall be a csg_solid, or a mapped_item with a mapped_representation of the mapping_source attribute of the type csg_2d_shape_representation. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If a mapped_item is in the items set then the mapped_representation of the mapping_source attribute shall be a csg_2d_shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The csg_2d_shape_representation shall not be another type of shape_representation.</DIV
></DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: Since WR1 requires a coordinate_space_dimension equal to two, the leaves of the tree_root_expression in csg_solid can be built by only half_space_2d or primitive_2d elements.</DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1326"
></A
>5.2.3.1.89 curve_dimension</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A curve_dimension is a dimensional_size that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Curve_dimension</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY curve_dimension
  SUBTYPE OF (dimensional_size);
WHERE
  WR1: SELF\dimensional_size.name &#60;&#62; 'angular' ;
END_ENTITY; -- curve_dimension
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name of the curve_dimension shall not be 'angular'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1334"
></A
>5.2.3.1.90 cutout_edge_segment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A cutout_edge_segment is an inter_stratum_feature and a shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Cutout_edge_segment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY cutout_edge_segment
  SUPERTYPE OF (plated_cutout_edge_segment)
  SUBTYPE OF (inter_stratum_feature,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect.description IN [
       'plated cutout edge segment',
       'cutout edge segment'];
  WR2: SIZEOF (QUERY (cc &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed cutout') |(
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (cc.relating_shape_aspect)) AND 
	(cc.relating_shape_aspect\shape_aspect.description  IN ['cutout',
         'physical connectivity interrupting cutout', 'plated cutout']))
       )) = 1;
  WR3: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect));
  WR4: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect));
  WR5: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
END_ENTITY; -- cutout_edge_segment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The cutout_edge_segment shall have a name of 'cutout edge segment' and a relating_shape_aspect_description of 'cutout', 'physical connectivity interrupting cutout', or 'plated cutout'.
'plated cutout edge segment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The cutout_edge_segment shall relate to an edge_segment_vertex in the relating role.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The cutout_edge_segment shall relate to an edge_segment_vertex in the related role.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The relating_shape_aspectand the related_shape_aspect shall not be the same instance of shatp_aspect.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The associated passage_technology shall have descriptive_representation_item with a description of 'true'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1347"
></A
>5.2.3.1.91 data_set_representation_item</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A data_set_representation_item is a compound_representation_item
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Characteristic_data_set</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY data_set_representation_item
  SUBTYPE OF (compound_representation_item);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS')) &#62; 0;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SET_REPRESENTATION_ITEM'
       IN TYPEOF(SELF\compound_representation_item.item_element);
END_ENTITY; -- data_set_representation_item
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The data_set_representation_item shall be referenced by exactly
one applied_document_reference.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The item_element attribute shall be a list_representation_item.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1356"
></A
>5.2.3.1.92 datum_difference</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_difference is a subtype of shape_aspect and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Datum_difference</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_difference
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT_DATUM' IN TYPEOF
       (SELF\shape_aspect_relationship.relating_shape_aspect)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT_DATUM' IN TYPEOF
       (SELF\shape_aspect_relationship.related_shape_aspect));
  WR2: SELF\shape_aspect.name = SELF\shape_aspect_relationship.name;
  WR3: SELF\shape_aspect.description = SELF\shape_aspect_relationship.
       description;
  WR4: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR5: SIZEOF (TYPEOF(SELF) - (TYPEOF(SELF\shape_aspect || 
       SELF\shape_aspect_relationship || SELF\datum_difference))) = 0;
END_ENTITY; -- datum_difference
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The datum_difference shall be applied to only physical_unit_datum. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The datum_difference name attribute inherited shall be identical in each supertypes.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The datum_difference description attribute inherited shall be identical in each supertypes.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The datum_difference shall be applied to only different physical_unit_datum.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The datum_difference shall not be in a complex instance of other types of shape_aspect or shape_aspect_relationship.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1368"
></A
>5.2.3.1.93 datum_difference_analytical_model_port_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_difference_analytical_model_port_assignment is a subtype of property_definition_representation that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Datum_difference_analytical_model_port_assignment</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_difference_analytical_model_port_assignment
  SUBTYPE OF (property_definition_representation);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL_PORT' IN TYPEOF
       (SELF\property_definition_representation.used_representation)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DATUM_DIFFERENCE' IN TYPEOF
       (SELF\property_definition_representation.definition));
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\property_definition_representation ||
       SELF\datum_difference_analytical_model_port_assignment)) = 0;
END_ENTITY; -- datum_difference_analytical_model_port_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The datum_difference_analytical_model_port_assignment shall be related to only datum_difference and analytical_model_port. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The datum_difference_analytical_model_port_assignment shall not be in a complex instance of other types of property_definition_representation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1377"
></A
>5.2.3.1.94 datum_difference_based_characteristic</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_difference_based_characteristic is a representation_item that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Datum_difference_based_characteristic</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_difference_based_characteristic
  SUBTYPE OF (representation_item);
WHERE
  WR1: SIZEOF(QUERY ( r &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'REPRESENTATION.ITEMS') | (SIZEOF(QUERY (prd2 &#60;*
        QUERY ( prd &#60;* USEDIN(r,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 
       ((('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' 
       + 'PROPERTY_DEFINITION_REPRESENTATION') IN TYPEOF(prd)) AND 
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PROPERTY_DEFINITION') IN TYPEOF(prd\
       property_definition_representation.definition))) ) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DATUM_DIFFERENCE' IN
      TYPEOF(prd2\property_definition_representation.definition\
                               property_definition.definition))))
            = 1) )) 
               = 1;
END_ENTITY; -- datum_difference_based_characteristic
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The datum_difference_based_characteristic shall be related to exactly one datum_difference.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1385"
></A
>5.2.3.1.95 datum_difference_based_model_parameter</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_difference_based_model_parameter is a model_parameter that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Datum_difference_based_model_parameter</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_difference_based_model_parameter
  SUBTYPE OF (model_parameter);
WHERE
      wr1: SIZEOF(QUERY ( r &#60;* USEDIN(SELF,
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
               'REPRESENTATION.ITEMS') | (SIZEOF(QUERY (prd2 &#60;*
                QUERY ( prd &#60;* USEDIN(r,
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
               'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 
               ((('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' 
               + 'PROPERTY_DEFINITION_REPRESENTATION') IN TYPEOF(prd)) AND 
               (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                'PROPERTY_DEFINITION') IN TYPEOF(prd\
               property_definition_representation.definition))) ) |
               ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                'DATUM_DIFFERENCE' IN
               TYPEOF(prd2\property_definition_representation.definition\
                                        property_definition.definition))))
                = 1) )) 
               = 1;
END_ENTITY; -- datum_difference_based_model_parameter
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The datum_difference_based_model_parameter shall be related to exactly one datum_difference.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1393"
></A
>5.2.3.1.96 datum_difference_functional_unit_usage_view_terminal_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_difference_functional_unit_usage_view_terminal_assignment is a shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Datum_difference_functional_unit_usage_view_terminal_assignment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_difference_functional_unit_usage_view_terminal_assignment
  SUBTYPE OF (shape_aspect_relationship);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect_relationship ||
SELF\datum_difference_functional_unit_usage_view_terminal_assignment)) 
                                                              = 0;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN TYPEOF 
        (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DATUM_DIFFERENCE' IN TYPEOF 
        (SELF\shape_aspect_relationship.relating_shape_aspect);
END_ENTITY; -- datum_difference_functional_unit_-
--             usage_view_terminal_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The datum_difference_functional_unit_usage_view_terminal_assignment shall not
participate in a complex instance with other than the shape_aspect_relationship supertype.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The datum_difference_functional_unit_usage_view_terminal_assignment shall be related to exactly one
functional_unit_terminal_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The datum_difference_functional_unit_usage_view_terminal_assignment shall be related to exactly one
datum_difference.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1403"
></A
>5.2.3.1.97 datum_reference_frame</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_reference_frame is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Datum_reference_frame</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_reference_frame
  SUBTYPE OF (shape_aspect);
WHERE
 WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
      SELF\datum_reference_frame)) = 0;
 WR2: SELF\shape_aspect.product_definitional = False;
 WR3: (SIZEOF (QUERY (pud &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'reference axis') | 
      (pud.related_shape_aspect\shape_aspect.description = 'axis') AND
      ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'PHYSICAL_UNIT_DATUM' IN TYPEOF (pud.related_shape_aspect)))) &#60;= 3);
 WR4: (SIZEOF (QUERY (pud &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'reference plane') | 
      (pud.related_shape_aspect\shape_aspect.description = 'plane') AND
      ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'PHYSICAL_UNIT_DATUM' IN TYPEOF (pud.related_shape_aspect)))) &#60;= 3);
 WR5: (SIZEOF (QUERY (pud &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'reference origin') | 
      (pud.related_shape_aspect\shape_aspect.description = 'point') AND
      ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'PHYSICAL_UNIT_DATUM' IN TYPEOF (pud.related_shape_aspect)))) &#60;= 1);
 WR6: (SIZEOF (QUERY (ds &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'established datum reference frame') | 
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'DATUM_SYSTEM' IN TYPEOF (ds.related_shape_aspect))) &#62;= 1);

 WR7: (SIZEOF (QUERY (pud &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'reference axis') | 
      (pud.related_shape_aspect\shape_aspect.description = 'axis') AND
      ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'PHYSICAL_UNIT_DATUM' IN TYPEOF (pud.related_shape_aspect))))
      + SIZEOF (QUERY (pud &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'reference plane') | 
      (pud.related_shape_aspect\shape_aspect.description = 'plane') AND
      ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'PHYSICAL_UNIT_DATUM' IN TYPEOF (pud.related_shape_aspect))))
      + SIZEOF (QUERY (pud &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'reference origin') | 
      (pud.related_shape_aspect\shape_aspect.description = 'point') AND
      ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'PHYSICAL_UNIT_DATUM' IN TYPEOF (pud.related_shape_aspect)))) &#62;= 1);
 WR8: (SIZEOF (QUERY (pud &#60;* QUERY ( sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'reference origin') | 
      (pud.related_shape_aspect\shape_aspect.description &#60;&#62; 'point') OR 
      (NOT('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'DERIVED_SHAPE_ASPECT' IN TYPEOF (pud.related_shape_aspect)))
       )) = 0);
END_ENTITY; -- datum_reference_frame
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The datum_reference_frame shall not be a complex instance, except with the supertype shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The datum_reference_frame shall not lie on the boundary of the shape of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The datum_reference_frame shall relate to at most three physical_unit_datum that have a description 
of 'axis' to specify the 'reference axis'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The datum_reference_frame shall relate to at most three physical_unit_datum that have a description 
of 'plane' to specify the 'reference plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The datum_reference_frame shall relate to at most one physical_unit_datum that has a description of 'point' to specify the 'reference origin'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The datum_reference_frame shall be related to at least one datum_system as the 'established datum 
reference frame'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The datum_reference_frame shall relate to at least one physical_unit_datum that has a 
description of 'axis' or 'plane' or 'point' to specify the 'reference axis' or 'reference 
plane' or 'reference origin', respectively.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>Each 'reference origin' related to the datum_reference_frame shall also be a derived_shape_aspect that has a description of 'point'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>Each reference_axis shall be specified to be either a constituent of, or normal to each of the 
reference_planes and this specification shall be consistent with the mutually perpendicular 
reference_planes.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1420"
></A
>5.2.3.1.98 datum_system</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_system is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Datum_system</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_system
  SUBTYPE OF (shape_aspect);
WHERE
 WR1: SELF\shape_aspect.product_definitional = False;
 WR2: (SIZEOF (QUERY (sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 
                  'established datum reference frame')) = 1);
 WR3: (SIZEOF (QUERY (sar &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 
                       'datum usage in datum system')) &#62;= 1);
 WR4: (SIZEOF (QUERY (pd &#60;* USEDIN(SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
      'PROPERTY_DEFINITION.DEFINITION') |
      (pd\property_definition.description = 
               'datum system property with material conditions')
      OR (pd\property_definition.description = 
      'datum system property without material conditions'))) = 1);
END_ENTITY; -- datum_system
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The datum_system shall not lie on the boundary of the shape of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The datum_system shall relate to at exactly one shape_aspect to specify the 'established datum 
reference frame'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The datum_system shall relate to at least one shape_aspect to specify the 'datum usage in datum 
system'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The datum_system shall have exactly one property_definition that has the description of either 'datum system 
property with material conditions' or 'datum system property without material conditions'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>Any particular physical_unit_datum_feature shall be used no more than one time to establish the 
datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>Any particular physical_unit_datum_target shall be used no more than one time to establish the 
datum_system.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1434"
></A
>5.2.3.1.99 datum_system_based_dimensional_location</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A datum_system_based_dimensional_location is a dimensional_location that
implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Dimension_location_with_specified_datum_system</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY datum_system_based_dimensional_location
  SUBTYPE OF (dimensional_location);
END_ENTITY; -- datum_system_based_dimensional_location
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The datum_system_based_dimensional_location shall have exactly one property_definition with a 
description of 'dimensional location property', and that property_definition shall relate to a 
property_definition with a description of 'datum system property without material conditions' to 
specify the 'referenced datum system property'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1442"
></A
>5.2.3.1.100 delete_design_object_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A delete_design_object_assignment is an action_assignment that implements the
ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Delete_design_object_management_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY delete_design_object_assignment
   SUBTYPE OF (action_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(it &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(it))
        AND (it\product_definition_relationship.name = 'design object deletion'))) = 1;
END_ENTITY; -- delete_design_object_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The delete_design_object_assignment shall have exactly one item
that is a product_definition_relationship with a name of 'design object deletion'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The delete_design_object_assignment shall have exactly one item that is a
managed_design_object that is not a product_definition_relationship
with a name of 'design object deletion' and that is not
referenced by another product_definition_relationship with a name
of 'design object addition', 'design object change', or 'design object deletion'
in the same design.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1452"
></A
>5.2.3.1.101 delete_design_object_request_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A delete_design_object_request_assignment is an action_request_assignment that implements the
ARM concepts
of  <SPAN
CLASS="INTERNALREF"
>Change_request</SPAN
> and <SPAN
CLASS="INTERNALREF"
>Delete_design_object_management_relationship</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY delete_design_object_request_assignment
   SUBTYPE OF (action_request_assignment);
     items : SET [1:?] OF managed_design_object;
WHERE
   WR1: SIZEOF(QUERY(it &#60;* SELF.items |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(it))
        AND (it\product_definition_relationship.name = 'design object deletion'))) = 1;
END_ENTITY; -- delete_design_object_request_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The delete_design_object_request_assignment shall have exactly one item
that is a product_definition_relationship with a name of 'design object deletion'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The delete_design_object_request_assignment shall have exactly one item that is a
managed_design_object that is not a product_definition_relationship
with a name of 'design object deletion' and that is not
referenced by another product_definition_relationship with a name
of 'design object addition', 'design object change', or 'design object deletion'
in the same design.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1463"
></A
>5.2.3.1.102 dependent_material_removal_feature_template</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A dependent_material_removal_feature_template is a part_template_definition that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Dependent_material_removal_feature_template</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY dependent_material_removal_feature_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: SELF\shape_aspect.description = 'material removal feature template';
  WR2: SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (am.relating_shape_aspect)) AND
       (am.relating_shape_aspect.description IN
       ['default attachment size and component termination passage based',
       'default attachment size based',
       'default attachment size and via based',
       'default component termination passage based',
       'default via based',
       'default unsupported passage based']))
        )) = 1;
END_ENTITY; -- dependent_material_removal_feature_template
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The dependent_material_removal_feature_template shall have a description that is 'material removal feature template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The dependent_material_removal_feature_template shall be related to exactly one land_physical_template with a description of
'default attachment size and component termination passage based', or 'default attachment size based', or 'default attachment size and via based', or 'default component termination passage based', or 'default via based', or 'default unsupported passage based'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1472"
></A
>5.2.3.1.103 design_layer_type_specific_padstack_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A design_layer_type_specific_padstack_definition is a product_definition that implements the ARM concepts of: <SPAN
CLASS="INTERNALREF"
>Design_layer_type_specific_padstack_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY design_layer_type_specific_padstack_definition 
 SUBTYPE OF (padstack_definition);
END_ENTITY; -- design_layer_type_specific_padstack_definition 
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1478"
></A
>5.2.3.1.104 design_make_from_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A design_make_from_relationship is a product_definition_relationship that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Engineering_make_from</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY design_make_from_relationship
  SUBTYPE OF (product_definition_relationship);
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT'] *
       TYPEOF (SELF.relating_product_definition)) = 1;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT'] *
       TYPEOF (SELF.related_product_definition)) = 1;
  WR3: SIZEOF( QUERY(pds &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_SHAPE' IN TYPEOF(pds)))) = 0;
END_ENTITY; -- design_make_from_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The design_make_from_relationship shall reference a physical_unit or a
functional_unit as its relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The design_make_from_relationship shall reference a physical_unit or a
functional_unit as its related_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The design_make_from_relationship shall not be the definition of a
product_definition_shape.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1488"
></A
>5.2.3.1.105 design_object</H4
>A design_object is a characterized_object that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Layout_spacing_requirement_occurrence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY design_object
  SUBTYPE OF (characterized_object);
END_ENTITY; -- design_object
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1493"
></A
>5.2.3.1.106 device_terminal_map</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A device_terminal_map is a shape_aspect and a shape_aspect_relationship that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Device_terminal_map</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY device_terminal_map
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.related_shape_aspect,
       SELF\shape_aspect_relationship.relating_shape_aspect;
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL'
       IN TYPEOF (SELF.relating_shape_aspect);
END_ENTITY; -- device_terminal_map
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of related_shape_aspect and relating_shape_aspect of
shape_aspect_relationship shall be unique within a population of device_terminal_map.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The relating_shape_aspect shall be a packaged_part_terminal.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1504"
></A
>5.2.3.1.107 dimensional_location_with_direction</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A dimensional_location_with_direction is a dimensional_location that
implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Dimension_location_with_direction_vector</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY dimensional_location_with_direction
  SUBTYPE OF (dimensional_location);
WHERE
    wr1: SELF\shape_aspect_relationship.description = 'linear';
END_ENTITY; -- dimensional_location_with_direction
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The description of the dimensional_location_with_direction shall be 'linear'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The dimensional_location_with_direction shall have exactly one property_definition with a 
description of 'dimensional location property', and that property_definition either shall be 
represented by a representation that contains a placement with a name of 'orientation' or shall 
relate to a property_definition with a description of 'datum based vector orientation' to specify 
the 'measurement orientation'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the dimensional_location_with_direction has a property_definition with a description of 
'dimensional location property' and that property_definition relates to a property_definition with 
a description of 'datum based vector orientation' to specify the 'measurement orientation', the 
combination of the shape_aspect specified as the related_shape_aspect, the shape_aspect specified as the relating_shape_aspect, and 
the property_definition with a description of 'datum based vector orientation' shall be unique.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the dimensional_location_with_direction has a property_definition with a description of 
'dimensional location property' and that property_definition is represented by a representation 
that contains a placement with a name of 'orientation', the combination of the shape_aspect 
specified as the related_shape_aspect, the shape_aspect 
specified as the relating_shape_aspect, and the placement with a name of 
'orientation' shall be unique.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1516"
></A
>5.2.3.1.108 dimensional_size_property</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A dimensional_size_property is a dimensional_size and a property_definition.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY dimensional_size_property
  SUBTYPE OF (dimensional_size, property_definition);
END_ENTITY; -- dimensional_size_property
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1521"
></A
>5.2.3.1.109 directed_dimensional_location</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A directed_dimensional_location is a dimensional_location that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Dimensional_location</SPAN
> where
the ARM attribute "directed" of that concept has a value of TRUE.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY directed_dimensional_location
  SUBTYPE OF (dimensional_location);
END_ENTITY; -- directed_dimensional_location
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1527"
></A
>5.2.3.1.110 discrete_shield</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A discrete_shield is a component_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Shield</SPAN
>
 when the shield is comprised of a component or
components that are manufactured separately from the interconnect component.  <DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY discrete_shield
  SUBTYPE OF (component_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical occurrence';
  WR2: SIZEOF (QUERY (si &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'shielded item') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (si.relating_product_definition))) &#62;= 1;
END_ENTITY; -- discrete_shield
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The discrete_shield shall have a frame_of_reference name of 'physical
occurrence'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The discrete_shield shall be related to at least one component_definition or
at least one component_shape_aspect as the 'shielded item'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1536"
></A
>5.2.3.1.111 document_identifier</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A document_identifier is a group that specifies an identifier qualified by a name for a document.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY document_identifier
  SUBTYPE OF (group);
UNIQUE
  UR1: SELF\group.name, SELF\group.description;
WHERE
  WR1: SIZEOF (USEDIN(SELF,'')) = 1;
END_ENTITY; -- document_identifier
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of name and description inherited from group shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>A document_identifier shall be referenced exactly once.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1546"
></A
>5.2.3.1.112 document_identifier_assignment</H4
>A document_identifier_assignment is a group_assignment that specifies one or more of document_identifier_assigned_item.  If there are more than one, then the items are all revisions of the same drawing.<DIV
CLASS="EXAMPLE"
><P
></P
>EXAMPLE: A schematic diagram may have a base identifier and each revision identification of that diagram differs from other revisions identification only in the document.description.</DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: Due to a constraint on document_identifier, no member of document_identifier may be referenced more than once, guaranteeing uniqueness of assigned_group.</DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY document_identifier_assignment
 SUBTYPE OF (group_assignment);
   SELF\group_assignment.assigned_group : document_identifier;
     items : SET [1:?] OF document_identifier_assigned_item;
END_ENTITY; -- document_identifier_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1552"
></A
>5.2.3.1.113 dose_equivalent_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A dose_equivalent_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Dose_equivalent_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY dose_equivalent_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\dose_equivalent_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = sievert;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- dose_equivalent_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The dose_equivalent_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The dose_equivalent_measure_with_unit shall reference an si_unit with the name of sievert.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1562"
></A
>5.2.3.1.114 edge_based_2d_wireframe_shape_representation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An edge_based_2d_wireframe_shape_representation is a shape_representation that
implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Edge_based_2d_wireframe</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Edge_based_wireframe</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY edge_based_2d_wireframe_shape_representation
  SUBTYPE OF (shape_representation);
WHERE
  WR1: SIZEOF (QUERY (it &#60;* SELF\representation.items |
       NOT (SIZEOF (   
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_2D'] *
       TYPEOF (it)) = 1))) = 0;
  WR2: SIZEOF (QUERY (it &#60;* SELF\representation.items |
       SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM'] * 
       TYPEOF (it)) = 1)) &#62;= 1;
  WR3: SIZEOF (QUERY (ebwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL' IN 
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (eb &#60;* 
       ebwm\edge_based_wireframe_model.ebwm_boundary |
       NOT (SIZEOF (QUERY (edges &#60;* eb.ces_edges |
       NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_CURVE'
       IN TYPEOF (edges)))) = 0))) = 0))) = 0;
  WR4: SIZEOF (QUERY (ebwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL' IN 
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (eb &#60;* 
       ebwm\edge_based_wireframe_model.ebwm_boundary |
       NOT (SIZEOF (QUERY (pline_edges &#60;* QUERY (edges &#60;* eb.ces_edges |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'POLYLINE' IN
       TYPEOF (edges\edge_curve.edge_geometry)) |
       NOT (SIZEOF (pline_edges\edge_curve.edge_geometry\polyline.points) 
       &#62; 2))) = 0))) = 0))) = 0;
  WR5: SIZEOF (QUERY (ebwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL' IN 
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (eb &#60;* 
       ebwm\edge_based_wireframe_model.ebwm_boundary |
       NOT (SIZEOF (QUERY (edges &#60;* eb.ces_edges |
       NOT (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_POINT' IN 
       TYPEOF (edges.edge_start)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_POINT' IN 
       TYPEOF (edges.edge_end))))) = 0))) = 0))) = 0;
  WR6: SIZEOF (QUERY (ebwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL' IN 
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (eb &#60;*
       ebwm\edge_based_wireframe_model.ebwm_boundary |
       NOT (SIZEOF (QUERY (edges &#60;* eb.ces_edges |
       NOT (valid_2d_wireframe_edge_curve
       (edges\edge_curve.edge_geometry,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN')))) 
       = 0))) = 0))) = 0;
  WR7: SIZEOF (QUERY (ebwm &#60;* QUERY (it &#60;* SELF\representation.items|
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL' IN 
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (eb &#60;* 
       ebwm\edge_based_wireframe_model.ebwm_boundary |
       NOT (SIZEOF (QUERY (edges &#60;* eb.ces_edges |
       NOT ((valid_wireframe_vertex_point
       (edges.edge_start\vertex_point.vertex_geometry)) AND
       (valid_wireframe_vertex_point
       (edges.edge_end\vertex_point.vertex_geometry))))) = 0))) = 0))) = 0;
  WR8: SIZEOF (QUERY (ebwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_WIREFRAME_MODEL' IN 
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (eb &#60;* 
       ebwm\edge_based_wireframe_model.ebwm_boundary |
       NOT (SIZEOF (QUERY (con_edges &#60;* QUERY (edges &#60;* eb.ces_edges |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONIC'
       IN TYPEOF (edges\edge_curve.edge_geometry)) |
       NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_2D' IN
       TYPEOF (con_edges\edge_curve.edge_geometry\conic.position)))) 
       = 0))) = 0))) = 0;
  WR9: SIZEOF (QUERY (mi &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM' IN 
       TYPEOF (it)) |
       NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_BASED_2D_WIREFRAME_SHAPE_REPRESENTATION' IN
       TYPEOF (mi\mapped_item.mapping_source.mapped_representation)))) = 0;
  WR10: SELF\representation.
        context_of_items\geometric_representation_context.
        coordinate_space_dimension = 2;
END_ENTITY; -- edge_based_2d_wireframe_shape_representation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The items in an edge_based_2d_wireframe_shape_representation shall be an
edge_based_wireframe_model, a mapped_item, or an axis2_placement_2d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>At least one of the items in an edge_based_2d_wireframe_shape_representation 
shall be either an edge_based_wireframe_model or a mapped_item.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>Every edge in an edge_based_wireframe_model shall be an edge_curve.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>Every polyline that underlies an edge of an edge_based_wireframe_model
shall be defined by more than two distinct points.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>Every vertex defined for an edge_based_wireframe_model shall be a
vertex_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The edge_geometry that underlies an edge for an edge_based_wireframe_model 
shall be a line, circle, ellipse, parabola, hyperbola, b_spline_curve,
offset_curve_2d, polyline, or a curve_replica.  For each curve that has a basis
defined by another curve, the basis curve shall be one of these types also.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The vertex_geometry that underlies the edges for an edge_based_wireframe_model 
shall be a cartesian_point or point_replica and the point_replica shall 
replicate either another point_replica or a cartesian_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>All conics shall be positioned by an axis2_placement_2d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If there is a mapped_item in an edge_based_2d_wireframe_shape_representation, 
the source of the mapped_item shall be an 
edge_based_2d_wireframe_shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The  edge_based_2d_wireframe_shape_representation  shall  have  a 
coordinate_space_dimension equal to two.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1580"
></A
>5.2.3.1.115 edge_segment_cross_section</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An edge_segment_cross_section is a volume_shape_intersection 
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Edge_segment_cross_section</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY edge_segment_cross_section
  SUBTYPE OF (volume_shape_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\volume_shape_intersection || 
       SELF\edge_segment_cross_section))) = 0;
END_ENTITY; -- edge_segment_cross_section 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The edge_segment_cross_section shall not be a complex subtype of other than its direct supertypes.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1588"
></A
>5.2.3.1.116 edge_segment_vertex</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An edge_segment_vertex is a physical_unit_datum that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Edge_segment_vertex</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY edge_segment_vertex
  SUBTYPE OF (physical_unit_datum);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\physical_unit_datum ||
       SELF\edge_segment_vertex)) = 0;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
        pd\property_definition.description = 'shape element characterization'
       )) = 1;
  WR3: SELF\shape_aspect.of_shape\property_definition.definition.
       frame_of_reference\application_context_element.name
       IN ['physical design occurrence', 'physical design usage'];
  WR4: SELF\shape_aspect.name = 'single datum';
END_ENTITY; -- edge_segment_vertex
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The edge_segment_vertex shall not participate in a complex instance of
shape_aspect other than with the physical_unit_datum supertype.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The edge_segment_vertex shall be related to one representation
with a name of 'shape element characterization'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The edge_segment_vertex shall be in the 'physical design occurrence' or 'physical design usage' context. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The edge_segment_vertex shall be a single datum. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1599"
></A
>5.2.3.1.117 ee_specification</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An ee_specification is a document which implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_technology_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Design_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Fabrication_technology_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interface_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Language_reference_manual</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Lead_form_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Material_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Process_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Surface_finish_specification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Test_specification</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY ee_specification 
 SUBTYPE OF (document);
WHERE
  WR1: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'document source')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'document source')) &#62;= 1;
  WR2: SELF\document.kind\document_type.product_data_type IN 
       ['assembly technology specification',
       'design specification', 'fabrication technology specification',
       'interface specification', 'language reference manual',
       'lead form specification', 'material specification',
       'reference document', 'source code',
       'process specification', 'surface finish specification',
       'test specification'];
END_ENTITY; -- ee_specification
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The ee_specification shall have at least one organization or 
person_and_organization specified as its 'document source'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The ee_specification shall be a assembly_technology_specification, design_specification,
fabrication_technology_specification, interface_specification,
language_reference_manual, lead_form_specification, material_specification,
reference document, source code, process_specification, surface_finish_specification, or a test_specification.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1630"
></A
>5.2.3.1.118 electric_charge_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An electric_charge_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Electric_charge_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY electric_charge_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\electric_charge_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = coulomb;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- electric_charge_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The electric_charge_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The electric_charge_measure_with_unit shall reference an si_unit with the name of coulomb.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1640"
></A
>5.2.3.1.119 electrical_isolation_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An electrical_isolation_component_shape_aspect is a filled_area_material_removal_component_shape_aspect
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Electrical_isolation_laminate_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY electrical_isolation_component_shape_aspect
  SUBTYPE OF (filled_area_material_removal_component_shape_aspect);
END_ENTITY; -- electrical_isolation_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1646"
></A
>5.2.3.1.120 electrical_isolation_removal_template_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An electrical_isolation_removal_template_definition is a part_template_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Electrical_isolation_removal_template</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY electrical_isolation_removal_template_definition
  SUBTYPE OF (part_template_definition);
(*
WHERE
  WR1: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEXT_LITERAL' IN
       TYPEOF (it))) = 1)) = 1))) = 0);
  WR2: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font vertical extent'))) = 1
       )) = 1))) = 0);
  WR3: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font horizontal extent'))) = 1
       )) = 1))) = 0);
*)
END_ENTITY; -- electrical_isolation_removal_template_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1652"
></A
>5.2.3.1.121 electrical_network</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An electrical_network is a functional_unit that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Electrical_network_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY electrical_network
  SUBTYPE OF (functional_unit);
END_ENTITY; -- electrical_network
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1658"
></A
>5.2.3.1.122 electromotive_force_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An electromotive_force_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Electromotive_force_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY electromotive_force_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\electromotive_force_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = volt ;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- electromotive_force_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The electromotive_force_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The electromotive_force_measure_with_unit shall reference an si_unit with a name of volt. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1668"
></A
>5.2.3.1.123 energy_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An energy_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Energy_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY energy_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\energy_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = joule;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- energy_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The energy_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The energy_measure_with_unit shall reference an si_unit with a name of joule.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1678"
></A
>5.2.3.1.124 evaluated_characteristic</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An evaluated_characteristic is a representation and a representation_relationship that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Evaluated_characteristic</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY evaluated_characteristic
  SUBTYPE OF (representation, representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\representation_relationship_with_transformation || 
       SELF\evaluated_characteristic))) = 0;
  WR2: SELF\representation_relationship.rep_1 &#60;&#62; 
       SELF\representation_relationship.rep_2;
  WR3: SELF\representation_relationship.name = '';
  WR4: SELF\representation.name = '';
  WR5: SELF\representation_relationship.rep_1.name = 'planned characteristic';
END_ENTITY; -- evaluated_characteristic 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of rep_1 and rep_2 shall be unique within a population of evaluated_characteristic.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The evaluated_characteristic shall only be a representation, representation_relationship, or representation_relationship_with_transformation in addition to itself.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The evaluated_characteristic rep_1 shall not be the rep_2.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The name attribute inherited from representation_relationship shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The name attribute inherited from representation shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of representation_relationship.rep_1 shall be 'planned characteristic'.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1693"
></A
>5.2.3.1.125 evaluation_product_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An evaluation_product_definition is a product_definition that implements the ARM concept of: <SPAN
CLASS="INTERNALREF"
>Evaluation_ee_product_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY evaluation_product_definition
 SUBTYPE OF (product_definition);
END_ENTITY; -- evaluation_product_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1699"
></A
>5.2.3.1.126 external_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An external_definition is a characterized_object and an externally_defined_representation_item
and a descriptive_representation_item that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>External_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY external_definition
  SUPERTYPE OF(ONEOF(bond_category))
  SUBTYPE OF (characterized_object, descriptive_representation_item,
              externally_defined_representation_item);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
END_ENTITY; -- external_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The external_definition shall be referenced by exactly one document.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1707"
></A
>5.2.3.1.127 externally_defined_assembly_definition</H4
>An externally_defined_assembly_definition is an externally_defined_physical_unit that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Pca_usage_view</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_assembly_definition
 SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR
       (SELF\product_definition.name = 'assembly module');
  WR3: (NOT (SELF.frame_of_reference\application_context_element.name = 'physical design usage')) 
        OR (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'pca terminal'))) &#62;= 2))) = 0);
END_ENTITY; -- externally_defined_assembly_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The externally_defined_assembly_definition shall be a definition of a product that has a name of 'assembly module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the externally_defined_assembly_definition has a frame_of_reference name
of 'physical design usage', it shall have at least two shape_aspects that are
assembly_module_terminals with a description of 'pca terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1716"
></A
>5.2.3.1.128 externally_defined_bare_die</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_bare_die is an externally_defined_physical_unit that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Bare_die</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_bare_die
  SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: SIZEOF (QUERY (ifdu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifdu.relating_product_definition)) AND
       (ifdu.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'device unit technology') |
       dut.relating_property_definition\property_definition.name = 
       'unit technology')) = 1)) = 1;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 2))) = 0;
END_ENTITY; -- externally_defined_bare_die
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The externally_defined_bare_die shall be related to exactly one
functional_unit with a frame_of_reference name of 'functional design usage' as
the 'implemented function'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The externally_defined_bare_die shall have exactly one property_definition 
that is related to exactly one property_definition with a name of
'unit technology' as the 'device unit technology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The externally_defined_bare_die shall have at least two shape_aspects
that are bare_die_terminals.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1726"
></A
>5.2.3.1.129 externally_defined_functional_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_functional_unit is a functional_unit and an
externally_defined_product_definition that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Externally_defined_ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_unit_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_unit_usage_view</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_functional_unit
  SUBTYPE OF (functional_unit, externally_defined_product_definition);
END_ENTITY; -- externally_defined_functional_unit
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1740"
></A
>5.2.3.1.130 externally_defined_interconnect_definition</H4
>An externally_defined_interconnect_definition is an 
externally_defined_physical_unit that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Pcb_usage_view</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_interconnect_definition
 SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR
       (SELF\product_definition.name = 'interconnect module');
END_ENTITY; -- externally_defined_interconnect_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The externally_defined_interconnect_definition shall be a definition with a name of 'interconnect module'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1748"
></A
>5.2.3.1.131 externally_defined_package</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_package is an externally_defined_physical_unit that
implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Altered_package</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Package</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_package
 SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical design usage';
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
                           'registered case style')) &#62;= 1))) = 0;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr)) |
       sr_pdr.used_representation\representation.name = 'seating plane')) = 1))) = 0;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY' IN 
       TYPEOF (sa))) &#60;= 1))) = 0;
  WR5: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 1))) = 0;
  WR6: (NOT (SELF\product_definition.description = 'altered package')) OR
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'package preparation') AND
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (pdr.relating_product_definition)) = 1))) = 1); 
END_ENTITY; -- externally_defined_package
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The externally_defined_package shall have a frame_of_reference name of
'physical design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The externally_defined_package shall have at least one representation
with the name of 'registered case style'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The externally_defined_package shall have exactly one
shape_representation with the name of 'seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The externally_defined_package shall have at most one package_body.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The externally_defined_package shall have at least one package_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the externally_defined_package has a description of 'altered
package', it shall be related to exactly one package,
externally_defined_package, or library_defined_package as the
'package preparation'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>Each three-dimensional shape representation of the externally_defined_package shall have exactly one 
geometric_representation_item that is an axis2_placement_3d and that 
axis2_placement_3d shall define the location and orientation of the
seating plane in that representation.  The normal of the seating plane
in that representation shall be congruent with and the same direction as the Z axis of the
axis2_placement_3d.  The plane of the seating plane in that representation shall be congruent
with the plane established by the X and Y axes of the axis2_placement_3d.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1764"
></A
>5.2.3.1.132 externally_defined_packaged_connector</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_packaged_connector is an externally_defined_packaged_part
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Packaged_connector</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_packaged_connector
 SUBTYPE OF (externally_defined_packaged_part);
END_ENTITY; -- externally_defined_packaged_connector
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>There shall be at least one shape_aspect that is a 
packaged_connector_terminal_relationship for the externally_defined_packaged_connector.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1772"
></A
>5.2.3.1.133 externally_defined_packaged_part</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_packaged_part is an externally_defined_physical_unit
that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Altered_packaged_part</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Packaged_part</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_packaged_part
 SUPERTYPE OF (externally_defined_packaged_connector)
 SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 2))) = 0);
  WR2: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1);
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (ifu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN
       TYPEOF (ifu.relating_product_definition)) AND
       (ifu.relating_product_definition.frame_of_reference.name =
       'functional design usage'))) = 1);
  WR4: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (upkg &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'used package') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE' IN
       TYPEOF (upkg.related_product_definition))) = 1);
  WR5: (NOT (SELF\product_definition.description = 
       'altered packaged part')) OR
       (SIZEOF (QUERY (bpp &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'base packaged part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] * 
       TYPEOF (bpp.relating_product_definition)) = 1) AND
       (bpp.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) &#62;= 1);
  WR6: (NOT (SELF\product_definition.description = 
       'altered packaged part')) OR
       (SIZEOF (QUERY (upkg &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'used package') |
       SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] * 
       TYPEOF (upkg.relating_product_definition)) = 1)) &#62;= 1);
END_ENTITY; -- externally_defined_packaged_part
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the externally_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall have at least one shape_aspect that is a
packaged_part_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the externally_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall have exactly one material_designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the externally_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall be related to exactly one functional_unit
with a frame_of_reference name of 'functional design usage' as the
'implemented function'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the externally_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall relate to exactly one package to specify the
'used package'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the externally_defined_packaged_part has a description of 'altered
packaged part', it shall be related to at least one packaged_part,
externally_defined_packaged_part, or library_defined_packaged_part with a
frame_of_reference name of 'physical design usage' as the 'base packaged
part'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the externally_defined_packaged_part has a description of 'altered
packaged part', it shall be related to at least one package, 
externally_defined_package, or library_defined_package as the 'used package'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1786"
></A
>5.2.3.1.134 externally_defined_physical_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_physical_unit is a physical_unit and an
externally_defined_product_definition that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Externally_defined_ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_unit</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_unit_usage_view</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_physical_unit
 SUPERTYPE OF (ONEOF  (externally_defined_package, externally_defined_packaged_part,   
  externally_defined_bare_die, externally_defined_assembly_definition, 
  externally_defined_interconnect_definition))
 SUBTYPE OF (physical_unit, externally_defined_product_definition);
END_ENTITY; -- externally_defined_physical_unit
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1804"
></A
>5.2.3.1.135 externally_defined_product_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_product_definition is a product_definition and an
externally_defined_item that implements the ARM concept of: <SPAN
CLASS="INTERNALREF"
>Externally_defined_ee_product_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_product_definition
 SUPERTYPE OF (library_defined_product_definition)
 SUBTYPE OF (product_definition, externally_defined_item);
END_ENTITY; -- externally_defined_product_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1810"
></A
>5.2.3.1.136 externally_defined_representation_item</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An externally_defined_representation_item is an externally_defined_item and
a representation_item that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>External_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY externally_defined_representation_item
  SUBTYPE OF (externally_defined_item, representation_item);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
END_ENTITY; -- externally_defined_representation_item
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The externally_defined_representation_item shall be referenced by exactly
one applied_document_reference.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1818"
></A
>5.2.3.1.137 fabrication_joint</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A fabrication_joint is a shape_aspect and a shape_aspect_relationship that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Fabrication_joint</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY fabrication_joint
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description IN
       ['via terminal', 'printed component join terminal',
       'non functional land join terminal',
       'land join terminal', 'conductive interconnect element terminal',
       'component termination passage join terminal']));
  WR2: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       (SELF.relating_shape_aspect\shape_aspect.description IN
       ['via terminal', 'printed component join terminal',
       'non functional land join terminal',
       'land join terminal', 'conductive interconnect element terminal',
       'component termination passage join terminal']));
  WR3: SIZEOF (QUERY (ajm &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'auxiliary joint material') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND' IN
       TYPEOF (ajm.related_shape_aspect)) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (ajm.related_shape_aspect)) AND
       (ajm.related_shape_aspect\shape_aspect.description =
       'stratum feature template component')))) &#60;= 1;
  WR4: acyclic_shape_aspect_relationship(SELF,
       [SELF\shape_aspect_relationship.related_shape_aspect],
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.'+
       'FABRICATION_JOINT');
END_ENTITY; -- fabrication_joint
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The fabrication_joint relating_shape_aspect attribute shall relate to exactly one component_terminals that have a description of 'via terminal', 'printed component join terminal', 'non functional land join terminal', 'land join terminal', 'conductive interconnect element terminal', or 'component termination passage join terminal' to specify the 'fabrication features'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The fabrication_joint related_shape_aspect attribute shall relate to exactly one component_terminals that have a description of 'via terminal', 'printed component join terminal', 'non functional land join terminal', 'land join terminal', 'conductive interconnect element terminal', or 'component termination passage join terminal' to specify the 'fabrication features'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The fabrication_joint shall relate to either at most one land or to at most one component_shape_aspect that has a description of 'stratum feature template component', to specify the 'auxiliary joint material'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The fabrication_joint shall not participate in a cyclic relationship.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1829"
></A
>5.2.3.1.138 feature_shape_occurrence_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A feature_shape_occurrence_relationship is a representation and a shape_representation_relationship
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Feature_shape_occurrence_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY feature_shape_occurrence_relationship
  SUBTYPE OF (representation, shape_representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SELF\representation_relationship.rep_1 :&#60;&#62;: SELF\representation_relationship.rep_2;
  WR2: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\feature_shape_occurrence_relationship))) = 0;
END_ENTITY; -- feature_shape_occurrence_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of rep_1 and rep_2 shall be unique within a population of feature_shape_occurrence_relationship.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The feature_shape_occurrence_relationship rep_1 shall not be rep_2. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The feature_shape_occurrence_relationship shall not be a complex subtype of other than its direct supertypes.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1841"
></A
>5.2.3.1.139 fiducial</H4
>A fiducial is a component_shape_aspect that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Fiducial</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY fiducial
  SUBTYPE OF (component_shape_aspect);
WHERE
  wr1: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'COMPONENT_DEFINITION') IN TYPEOF(SELF.of_shape.definition))
            AND (SELF.of_shape.definition\product_definition.description = 
                    'laminate component');
END_ENTITY; -- fiducial
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The fiducial shall be an aspect of a definition with a name of 'interconnect module'. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1848"
></A
>5.2.3.1.140 fiducial_part_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A fiducial_part_feature is a part_tooling_feature that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Fiducial_part_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY fiducial_part_feature
 SUBTYPE OF (part_tooling_feature);
END_ENTITY; -- fiducial_part_feature
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1854"
></A
>5.2.3.1.141 fiducial_stratum_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A fiducial_stratum_feature is a stratum_feature that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Fiducial_stratum_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY fiducial_stratum_feature
 SUBTYPE OF (stratum_feature);
END_ENTITY; -- fiducial_stratum_feature
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1860"
></A
>5.2.3.1.142 filled_area_material_removal_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A filled_area_material_removal_component_shape_aspect is a material_removal_component_shape_aspect
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Filled_area_material_removal_laminate_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY filled_area_material_removal_component_shape_aspect
  SUBTYPE OF (material_removal_component_shape_aspect);
END_ENTITY; -- filled_area_material_removal_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1866"
></A
>5.2.3.1.143 footprint_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An footprint_definition is a product_definition that implements the ARM concepts of: <SPAN
CLASS="INTERNALREF"
>Footprint_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY footprint_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs &#60;* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) &#60;= 1);
  WR2: SIZEOF (QUERY (adta &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) &#62;= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\footprint_definition))) = 0;
  WR7: SELF.frame_of_reference.name IN ['layout design usage' ];
  WR8: SIZEOF (QUERY (prpc &#60;* USEDIN (SELF.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'template model')) = 1;
END_ENTITY; -- footprint_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the footprint_definition is a product_definition_with_associated_documents,
there shall be at most one document in the set of documentation_ids that has a
product_data_type of 'CAD filename'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The footprint_definition shall have exactly one creation date.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The footprint_definition shall have exactly one approval.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The footprint_definition shall have at least one organization or 
person_and_organization as the creator.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The footprint_definition shall have exactly one security_classification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The footprint_definition shall not be any other type of product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The footprint_definition shall have a frame_of_reference with a name of 'layout design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The footprint_definition shall be associated with a product that is a template model.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1881"
></A
>5.2.3.1.144 footprint_occurrence</H4
>A footprint_occurrence is an assembly_group_component_shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Footprint_occurrence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY footprint_occurrence
  SUBTYPE OF (assembly_group_component_shape_aspect);
END_ENTITY; -- footprint_occurrence
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1886"
></A
>5.2.3.1.145 footprint_occurrence_shape_aspect_relationship</H4
>A footprint_occurrence_shape_aspect_relationship is a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Footprint_occurrence_sub_assembly_relationship</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY footprint_occurrence_shape_aspect_relationship
  SUBTYPE OF (shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: SELF\shape_aspect_relationship.name = 'footprint occurrence sub assembly relationship';
END_ENTITY; -- footprint_occurrence_shape_aspect_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related shape_aspect shall not be the relating shape_aspect. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The footprint_occurrence_shape_aspect_relationship name shall be 'footprint occurrence sub assembly relationship'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1894"
></A
>5.2.3.1.146 force_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A force_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Force_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY force_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\force_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = newton;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- force_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The force_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The force_measure_with_unit shall reference an si_unit with a name of newton. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1904"
></A
>5.2.3.1.147 frequency_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A frequency_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Frequency_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY frequency_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\frequency_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = hertz;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- frequency_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The frequency_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The frequency_measure_with_unit shall reference an si_unit with a name of hertz. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1914"
></A
>5.2.3.1.148 frozen_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An frozen_assignment is an approval_assignment that specifies
a set of frozen_assigned_item.  An item that is 'approved' is frozen.  An item that is 'not yet approved' is not frozen.<DIV
CLASS="EXAMPLE"
><P
></P
>EXAMPLE: A component placement is considered frozen (i.e., the component cannot 
be moved) if its next_assembly_usage_occurrence is a member of the set of 
frozen_assigned_item and the approval_status is "approved".</DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY frozen_assignment 
 SUBTYPE OF (approval_assignment); 
 items : SET [1:?] OF frozen_assigned_item; 
WHERE
 WR1: SELF\approval_assignment.assigned_approval.status.name in ['approved', 'not yet approved'];
END_ENTITY; -- frozen_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The approval status shall either be 'approved' or 'not yet approved'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1922"
></A
>5.2.3.1.149 functional_specification</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An functional_specification is a representation that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Functional_specification</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY functional_specification
  SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
       (rr\representation_relationship.name = 'functional characteristic category') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNAL_DEFINITION' IN
       TYPEOF (rr.rep_1.items[1])))) = 1;
  WR2: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       (rr\representation_relationship.name = 'characterizing signal' +
       'for functional specification')
       )) = 1;
  WR3: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       (rr\representation_relationship.name = 'reference signal for' +
        'functional specification') 
       )) = 1;
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\functional_specification)) = 0;
  WR5: SELF\representation.name = '';
  WR6: SIZEOF(QUERY( pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_FUNCTIONAL_UNIT' IN TYPEOF (pdr.definition.definition)) 
        )) = 0;
END_ENTITY; -- functional_specification
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The functional_specification shall be in exactly one 'functional characteristic category'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The functional_specification shall reference exactly one 'characterizing signal for functional specification'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The functional_specification shall reference exactly one 'reference signal for functional specification'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The functional_specification shall be no other type of representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The functional_specification name shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The functional_specification shall reference exactly one component_functional_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1935"
></A
>5.2.3.1.150 functional_specification_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A functional_specification_definition is a functional_unit that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Functional_specification_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY functional_specification_definition
  SUBTYPE OF (functional_unit);
WHERE
  WR1: SELF.frame_of_reference\application_context_element.name =
             'functional network design';
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_SPECIFICATION' IN TYPEOF (pdr.used_representation))
       )) &#62; 0))) &#62; 0;
END_ENTITY; -- functional_specification_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The functional_specification_definition context shall be 'functional network design'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The functional_specification_definition shall be related to at least one functional_specification.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1944"
></A
>5.2.3.1.151 functional_terminal_group</H4
>A functional_terminal_group is a group that specifies a type for the terminals assigned to the group.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY functional_terminal_group
 SUBTYPE OF (group);
UNIQUE
   UR1: SELF\group.name;
END_ENTITY; -- functional_terminal_group
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>UR1: </SPAN
>The name shall be unique.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1950"
></A
>5.2.3.1.152 functional_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A functional_unit is the characterization of the functionality of an occurrence of an electrical device or of an abstract component.
A functional_unit implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Electrical_network_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_specification_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_unit_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_unit_network_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_unit_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Thermal_network_definition</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY functional_unit
 SUPERTYPE OF ((electrical_network)
              ANDOR (thermal_network) 
	      ANDOR (functional_specification_definition))
 SUBTYPE OF (product_definition);
WHERE
  WR1: SELF.frame_of_reference.name IN ['functional design usage', 
       'functional network design'];
  WR2: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs &#60;* 
   SELF\product_definition_with_associated_documents.documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) &#60;= 1);
  WR3: SIZEOF (QUERY (adta &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) = 1; 
  WR4: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR5: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) &#62;= 1;
  WR6: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR7: (NOT (SELF.frame_of_reference.name = 
                                 'functional network design')) OR
       (SIZEOF (QUERY (du &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       du.relating_product_definition.frame_of_reference.name = 
       'functional design usage')) = 1);
  WR8: (NOT (SIZEOF([
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
            'THERMAL_NETWORK',
            'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
            'ELECTRICAL_NETWORK'] * TYPEOF(SELF)) = 1))
        OR (SELF.frame_of_reference.name = 'functional network design');
END_ENTITY; -- functional_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The functional_unit shall have a frame_of_reference with a name of
'functional design usage' or 'functional network design'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the functional_unit is a product_definition_with_associated_documents, 
there shall be at most one document in the set of documentation_ids
that has a product_data_type of 'CAD filename'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The functional_unit shall have exactly one creation date and time.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The functional_unit shall have exactly one approval.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The functional_unit shall have at least one organization or 
person_and_organization as the creator.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The functional_unit shall have exactly one security_classification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the functional_unit is a functional network design it shall be related to exactly one functional_unit that is a functional design usage as the design usage.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the functional_unit is a thermal_network or an electrical_network
the frame_of_reference attribute shall be satisfied by an entity with
a name equal to 'functional network design'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1979"
></A
>5.2.3.1.153 functional_unit_terminal_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A functional_unit_terminal_definition is a shape_aspect that implements the
ARM concepts of  <SPAN
CLASS="INTERNALREF"
>Functional_unit_usage_view_terminal_definition</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Scalar_terminal_definition</SPAN
>. <DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY functional_unit_terminal_definition
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN
       TYPEOF (SELF.of_shape.definition)) AND
   (SELF.of_shape.definition\product_definition.frame_of_reference.name =
       'functional design usage');
  WR2: SIZEOF (QUERY (pd2 &#60;* QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION' IN
       TYPEOF (pd)) |
       SIZEOF (QUERY (funtdba &#60;* QUERY (pdr &#60;* USEDIN (pd2,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 
       'functional unit network terminal definition bus assignment') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BUS_STRUCTURAL_DEFINITION' IN 
       TYPEOF 
       (funtdba.relating_property_definition.definition))) &#60;= 1)) &#60;= 1;
  WR3: SIZEOF (QUERY (pd2 &#60;* QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION' IN
       TYPEOF (pd)) |
       SIZEOF (QUERY (funtdna &#60;* QUERY (pdr &#60;* USEDIN (pd2,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 
       'functional unit network terminal definition node assignment') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'NETWORK_NODE_DEFINITION' IN 
       TYPEOF 
       (funtdna.relating_property_definition.definition))) &#60;= 1)) &#60;= 1;
END_ENTITY; -- functional_unit_terminal_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The functional_unit_terminal_definition shall be an aspect of the shape
of a functional_unit that has a context element with a name of 'functional design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The functional_unit_terminal_definition shall have no more than one 
property definition that is related to at most one property of a 
bus_structural_definition as the 'functional unit network terminal definition 
bus assignment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The functional_unit_terminal_definition shall have no more than one 
property definition that is related to at most one property of a 
network_node_definition as the 'functional unit network terminal definition 
node assignment'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="1990"
></A
>5.2.3.1.154 geometric_tolerance_group</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A geometric_tolerance_group is a property_definition that implements the ARM
concepts of  <SPAN
CLASS="INTERNALREF"
>Separate_geometric_tolerance_requirement</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Simultaneous_geometric_tolerance_requirement</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY geometric_tolerance_group
  SUBTYPE OF (property_definition);
WHERE
    WR1: SELF\property_definition.description
         IN ['separate requirement', 'simultaneous requirement'];
    WR2: (NOT (SELF\property_definition.description = 
          'separate requirement'))
         OR (SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM' 
         IN TYPEOF(pdr.related_property_definition)) AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance')
         )) &#62;=1);
    WR3: (NOT (SELF\property_definition.description = 
        'simultaneous requirement')) 
         OR (SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE' 
         IN TYPEOF(pdr.related_property_definition)) AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance'))
         )) &#62;=2);
    WR4: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'LINEAR_PROFILE_TOLERANCE' IN 
          TYPEOF(pdr.related_property_definition)) AND
         (pdr.related_property_definition\property_definition.name = 
         'linear profile refinement') AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance') )
         )) =0);
    WR5: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'SURFACE_PROFILE_TOLERANCE' IN 
         TYPEOF(pdr.related_property_definition)) AND
         (pdr.related_property_definition\property_definition.name = 
         'surface profile refinement') AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance') )
         )) =0);
    WR6: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'POSITION_TOLERANCE' IN 
         TYPEOF(pdr.related_property_definition)) AND
         (pdr.related_property_definition\property_definition.name = 
         'feature relating position') AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance') )
         )) =0);
    WR7: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (pdr\property_definition_relationship.name = 'group geometric tolerance') AND
      (SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'LINEAR_PROFILE_TOLERANCE',
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'SURFACE_PROFILE_TOLERANCE',
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
     'POSITION_TOLERANCE'] * TYPEOF(pdr.related_property_definition)) &#62; 0)
         )) =0);
END_ENTITY; -- geometric_tolerance_group
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The geometric_tolerance_group shall have a description of either 'separate requirement' or 
'simultaneous requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the geometric_tolerance_group has a description of 'separate requirement', the 
geometric_tolerance_group shall relate to at least one 
geometric_tolerance_with_specified_datum_system to specify the 'group geometric tolerance'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the geometric_tolerance_group has a description of 'simultaneous requirement', the 
geometric_tolerance_group shall relate to at least two physical_unit_geometric_tolerances to specify 
the 'group geometric tolerance'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the geometric_tolerance_group has a description of 'separate requirement', the 
geometric_tolerance_group shall relate to exactly zero linear_profile_tolerance with a name of 
'linear profile refinement' to specify the 'group geometric tolerance'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the geometric_tolerance_group has a description of 'separate requirement', the 
geometric_tolerance_group shall relate to exactly zero surface_profile_tolerance with a name of 
'surface profile refinement' to specify the 'group geometric tolerance'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the geometric_tolerance_group has a description of 'separate requirement', the 
geometric_tolerance_group shall relate to exactly zero position_tolerance with a name of 'feature 
relating position' to specify the 'group geometric tolerance'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the geometric_tolerance_group has a description of 'separate requirement', the 
geometric_tolerance_group shall relate to exactly zero physical_unit_geometric_tolerance, to 
specify the 'group geometric tolerance', that are not either linear_profile_tolerance, 
surface_profile_tolerance, or position_tolerance.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the geometric_tolerance_group has a description of 'separate requirement' and the 
geometric_tolerance_group relates to at least two geometric_tolerance_with_specified_datum_systems 
to specify the 'group geometric tolerance', all of the 
geometric_tolerance_with_specified_datum_system shall relate to the same property_definition to 
specify the 'referenced datum system definition', and that property_definition shall have a 
description of either 'datum system property with material conditions' or 'datum system property 
without material conditions'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the geometric_tolerance_group has a description of 'simultaneous requirement' and the 
geometric_tolerance_group relates to at least two physical_unit_geometric_tolerances to specify the 
'group geometric tolerance', all of the physical_unit_geometric_tolerance either shall not relate 
to a property_definition to specify the 'referenced datum system definition' or shall relate to the 
same property_definition to specify the 'referenced datum system definition', and that 
property_definition shall have a description of either 'datum system property with material 
conditions' or 'datum system property without material conditions'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the geometric_tolerance_group has a description of 'simultaneous requirement', the 
geometric_tolerance_group shall relate to exactly zero physical_unit_geometric_tolerance, to 
specify the 'group geometric tolerance', that are not either a linear_profile_tolerance with a 
description of 'linear profile refinement', a surface_profile_tolerance with a description of 
'surface profile refinement', or a position_tolerance with a description of 'feature relating 
position'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2009"
></A
>5.2.3.1.155 geometric_tolerance_with_specified_datum_system</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A geometric_tolerance_with_specified_datum_system is a
physical_unit_geometric_tolerance that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Boundary_based_position_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_feature_locating_position_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_linear_profile_locating_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_surface_profile_locating_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Geometric_tolerance_with_referenced_datum_system</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Position_tolerance_with_referenced_datum_system</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_line_tolerance_with_referenced_datum_system</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_surface_tolerance_with_referenced_datum_system</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY geometric_tolerance_with_specified_datum_system
  SUBTYPE OF (physical_unit_geometric_tolerance);
WHERE
   WR1: SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'ANGULARITY_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'POSITION_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'CIRCULAR_RUNOUT_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'LINEAR_PROFILE_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'SURFACE_PROFILE_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'CONCENTRICITY_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'PARALLELISM_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'PERPENDICULARITY_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'SYMMETRY_TOLERANCE',
               'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'TOTAL_RUNOUT_TOLERANCE'] * TYPEOF(SELF)) = 1;

   WR2: SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         ((pdr.related_property_definition\property_definition.description =
           'datum system property with material conditions')
          OR (pdr.related_property_definition\property_definition.description =
              'datum system property without material conditions'))
         AND (pdr\property_definition_relationship.name = 'referenced datum system definition')
         )) = 1;

   WR3: SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.'
           + 'GEOMETRIC_TOLERANCE_GROUP' IN 
             TYPEOF(pdr.related_property_definition))
          AND (pdr.related_property_definition\property_definition.description = 
              'separate requirement')
          AND (pdr\property_definition_relationship.name = 'group geometric tolerance')
         )) &#60;= 1;
END_ENTITY; -- geometric_tolerance_with_specified_datum_system
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The geometric_tolerance_with_specified_datum_system shall be one of the following types: 
angularity_tolerance, position_tolerance, circular_runout_tolerance, linear_profile_tolerance, 
surface_profile_tolerance, concentricity_tolerance, parallelism_tolerance, 
perpendicularity_tolerance, symmetry_tolerance, or total_runout_tolerance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The geometric_tolerance_with_specified_datum_system shall relate to exactly one property_definition that has 
the description of either 'datum system property with material conditions' or 'datum system 
property without material conditions' to specify the 'referenced datum system definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The geometric_tolerance_with_specified_datum_system shall be related to at most one 
geometric_tolerance_group with a description of 'separate requirement' as the 'group geometric 
tolerance'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2035"
></A
>5.2.3.1.156 group_product_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A group_product_definition is a component_definition that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Placement_group</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY group_product_definition
  SUBTYPE OF (component_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'design requirement';
  WR2: (NOT (SELF\product_definition.description = 
                                      'placement group')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF (pd))) &#62;= 1);
END_ENTITY; -- group_product_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The group_product_definition shall have a frame_of_reference name of
'design requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the group_product_definition has a description of 'placement group',
it shall have at least one requirements_property. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2044"
></A
>5.2.3.1.157 group_shape_aspect</H4
>A group_shape_aspect is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_constraint_region</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Placement_group</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Termination_constraint</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY group_shape_aspect
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION' IN
       TYPEOF (SELF\shape_aspect.of_shape.definition);
  WR2: NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region']) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (SELF\shape_aspect.of_shape.definition)) AND
       (EXISTS(SELF\shape_aspect.of_shape.definition\product_definition.name)) AND
       (NOT EXISTS(SELF\shape_aspect.of_shape.definition\product_definition.name) OR 
       (SELF\shape_aspect.of_shape.definition\product_definition.name = 'interconnect module')));
 WR3: ((NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
               (SIZEOF( QUERY ( pd &#60;* USEDIN(SELF,
            'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr &#60;* USEDIN(pd,
           'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'constrained object')
     AND (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                    'INTERCONNECT_MODULE_DESIGN_OBJECT_CATEGORY') IN
                  TYPEOF(pdr.related_property_definition.definition)))
                        )) = 1)
                )) = 1));
 WR4: (NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'design specific purpose'))) = 1)) = 1))) = 0);
  WR5: (NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'keepout') AND
       (it\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1))) = 0);
  WR6: (NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) = 1)) = 1);
  WR7: (NOT(SELF\shape_aspect.description IN
       ['interconnect module constraint region'])) OR
               (SIZEOF( QUERY ( pd &#60;* USEDIN(SELF,
            'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr &#60;* USEDIN(pd,
           'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'requirement')
     AND (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                    'REQUIREMENTS_PROPERTY') IN
                  TYPEOF(pdr.relating_property_definition)))
                        )) = 1)
                )) = 1);
  WR8: (NOT(SELF\shape_aspect.description = 
       'termination constraint')) OR
       (SIZEOF (QUERY (ctm &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'constrained termination member') |
       ctm.related_shape_aspect\shape_aspect.description = 
       'mating connector termination')) &#62;= 2);
  WR9: EXISTS(SELF\shape_aspect.description);
  WR10: (NOT(SELF\shape_aspect.description IN
       ['placement group'])) OR
               (SIZEOF( QUERY ( pd &#60;* USEDIN(SELF,
            'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr &#60;* USEDIN(pd,
           'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'requirement')
     AND (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                    'REQUIREMENTS_PROPERTY') IN
                  TYPEOF(pdr.relating_property_definition))
               AND
           (pdr.relating_property_definition\property_definition.name = 'requirement')))
                   ) = 1)
                )) = 1);
  WR11: (NOT(SELF\shape_aspect.description IN
       ['termination constraint'])) OR
               (SIZEOF( QUERY ( pd &#60;* USEDIN(SELF,
            'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr &#60;* USEDIN(pd,
           'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'termination usage constraint')
     AND (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                    'REQUIREMENTS_PROPERTY') IN
                  TYPEOF(pdr.relating_property_definition))
                           AND
    (pdr.relating_property_definition\property_definition.name = 'termination usage constraint')))
                        ) = 1) 
                )) = 1);
END_ENTITY; -- group_shape_aspect
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The group_shape_aspect shall be an aspect of the shape of a product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the group_shape_aspect has a description of 'interconnect module
constraint region', it shall be an aspect of the shape of a 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the group_shape_aspect has a description of 'interconnect module
constraint region', it shall relate to exactly one 
interconnect_module_design_object_category to specify the 'constrained object'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the group_shape_aspect has a description of 'interconnect module
constraint region', it shall have exactly one representation that contains
exactly one descriptive_representation_item with a name of 'design specific
purpose'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the group_shape_aspect has a description of 'interconnect module
constraint region', it shall have exactly one representation that contains
exactly one descriptive_representation_item with a name of 'keepout' and a
description of either 'true' or 'false'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the group_shape_aspect has a description of 'interconnect module
constraint region', it shall have exactly one property that has exactly one
shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the group_shape_aspect has a description of 'interconnect module constraint region', or 'termination constraint', or 'placement group' it shall have exactly one requirements_property.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the group_shape_aspect  has a description of 'termination constraint', it shall relate to at least two shape_aspects with a description of 'mating connector termination' to specify a 'constrained termination member'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The attribute description inherited from shape_aspect shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the group_shape_aspect has a description of 'placement group' it shall have exactly one requirements_property.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the group_shape_aspect has a description of 'termination constraint' it shall have exactly one requirements_property.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2067"
></A
>5.2.3.1.158 grouped_requirements_property</H4
>A grouped_requirements_property is a group and a requirements_property that 
implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Item_restricted_requirement_occurrence</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Layout_spacing_requirement_occurrence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY grouped_requirements_property
  SUBTYPE OF (group, requirements_property);
WHERE
  WR1: (NOT (SELF\group.name = 
        'item restricted requirements property')) OR
       (SIZEOF (QUERY (aga &#60;* QUERY (ga &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       SIZEOF (aga.items) = 1)) = 1);
  WR2: (NOT (SELF\group.name = 
        'layout spacing requirements property')) OR
       (SIZEOF (QUERY (aga &#60;* QUERY (ga &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (aga.items) = 2) AND
       (SIZEOF (QUERY (rp &#60;* QUERY (it &#60;* aga.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (it)) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (rp)) AND
       (rp\characterized_object.name IN [
       'assembly module assembly component',
       'assembly module component terminal',
       'assembly module component',
       'assembly module macro component join terminal',
       'assembly module macro component',
       'assembly module',
       'bare die component terminal',
       'bare die component',
       'bonded conductive base blind via',
       'buried via',
       'cable component',
       'component feature',
       'component mounting feature',
       'component termination passage and contact size dependent land',
       'component termination passage and contact size dependent non functional land',
       'component termination passage dependent land',
       'component termination passage dependent non functional land',
       'component termination passage interface terminal',
       'component termination passage join terminal',
       'component termination passage',
       'conductive interconnect element terminal',
       'conductive interconnect element with pre defined transitions',
       'conductive interconnect element with user defined single transition',
       'connected area component',
       'contact size dependent land',
       'contact size dependent non functional land',
       'cutout edge segment',
       'cutout',
       'dielectric material passage',
       'electrical isolation laminate component',
       'embedded component terminal',
       'fiducial',
       'fill area',
       'filled area material removal laminate component',
       'inter stratum feature',
       'interconnect component interface terminal',
       'interconnect component join terminal',
       'interconnect module assembly component',
       'interconnect module component stratum based terminal',
       'interconnect module component surface feature',
       'interconnect module component terminal',
       'interconnect module component',
       'interconnect module edge segment',
       'interconnect module edge',
       'interconnect module macro component join terminal',
       'interconnect module macro component',
       'interface access material removal laminate component',
       'interface access stratum feature template component',
       'interface component',
       'interfacial connection',
       'internal probe access area',
       'join two physical connectivity definition supporting inter stratum feature',
       'join two physical connectivity definition supporting printed component',
       'laminate component',
       'laminate text component',
       'laminate text string component',
       'land interface terminal',
       'land join terminal',
       'land',
       'material removal laminate component',
       'minimally defined component terminal',
       'movable packaged component join terminal',
       'multi layer material removal laminate component',
       'multi layer stratum feature template component',
       'non conductive base blind via',
       'non functional land interface terminal',
       'non functional land join terminal',
       'non functional land',
       'packaged component join terminal',
       'packaged component',
       'packaged connector component interface terminal',
       'packaged connector component',
       'partially plated cutout',
       'partially plated interconnect module edge',
       'physical component',
       'physical connectivity interrupting cutout',
       'physical laminate component',
       'physical network supporting inter stratum feature',
       'plated conductive base blind via',
       'plated cutout edge segment',
       'plated cutout',
       'plated interconnect module edge segment',
       'plated interconnect module edge',
       'plated passage or unsupported passage',
       'plated passage',
       'primary stratum indicator symbol',
       'printed component join terminal',
       'printed connector component interface terminal',
       'probe access area',
       'routed interconnect component',
       'routed physical component',
       'special symbol laminate component',
       'stratum feature template component',
       'stratum feature',
       'thermal isolation laminate component',
       'unrouted conductive interconnect element',
       'unsupported passage dependent non functional land',
       'unsupported passage',
       'via and contact size dependent land',
       'via and contact size dependent non functional land',
       'via dependent land',
       'via dependent non functional land',
       'via terminal',
       'via']))) = 2))) = 1);
  WR3: (NOT (SELF\group.name = 
       'layout spacing requirements property')) OR
       (SIZEOF (QUERY (aga &#60;* QUERY (ga &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (QUERY (rp &#60;* QUERY (it &#60;* aga.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (it)) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (rp)) AND
       (rp\characterized_object.description = 
       'dependent design object category'))) = 1))) = 1);
  WR4: (NOT (SELF\group.name = 
       'layout spacing requirements property')) OR
       (SIZEOF (QUERY (aga &#60;* QUERY (ga &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (QUERY (rp &#60;* QUERY (it &#60;* aga.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (it)) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (rp)) AND
       (rp\characterized_object.description = 
       'reference design object category'))) = 1))) = 1);
END_ENTITY; -- grouped_requirements_property
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the grouped_requirements_property has a group name of 'item
restricted requirements property', it shall be assigned to exactly one item.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the grouped_requirements_property has a group name of 'layout spacing
requirements property', it shall be assigned to exactly
two s 
with a name of 
'assembly module assembly component',
'assembly module component terminal',
'assembly module component',
'assembly module macro component join terminal',
'assembly module macro component',
'assembly module',
'bare die component terminal',
'bare die component',
'bonded conductive base blind via',
'buried via',
'cable component',
'component feature',
'component mounting feature',
'component termination passage and contact size dependent land',
'component termination passage and contact size dependent non functional land',
'component termination passage dependent land',
'component termination passage dependent non functional land',
'component termination passage interface terminal',
'component termination passage join terminal',
'component termination passage',
'conductive interconnect element terminal',
'conductive interconnect element with pre defined transitions',
'conductive interconnect element with user defined single transition',
'connected area component',
'contact size dependent land',
'contact size dependent non functional land',
'cutout edge segment',
'cutout',
'dielectric material passage',
'electrical isolation laminate component',
'embedded component terminal',
'fiducial',
'fill area',
'filled area material removal laminate component',
'inter stratum feature',
'interconnect component interface terminal',
'interconnect component join terminal',
'interconnect module assembly component',
'interconnect module component stratum based terminal',
'interconnect module component surface feature',
'interconnect module component terminal',
'interconnect module component',
'interconnect module edge segment',
'interconnect module edge',
'interconnect module macro component join terminal',
'interconnect module macro component',
'interface access material removal laminate component',
'interface access stratum feature template component',
'interface component',
'interfacial connection',
'internal probe access area',
'join two physical connectivity definition supporting inter stratum feature',
'join two physical connectivity definition supporting printed component',
'laminate component',
'laminate text component',
'laminate text string component',
'land interface terminal',
'land join terminal',
'land',
'material removal laminate component',
'minimally defined component terminal',
'movable packaged component join terminal',
'multi layer material removal laminate component',
'multi layer stratum feature template component',
'non conductive base blind via',
'non functional land interface terminal',
'non functional land join terminal',
'non functional land',
'packaged component join terminal',
'packaged component',
'packaged connector component interface terminal',
'packaged connector component',
'partially plated cutout',
'partially plated interconnect module edge',
'physical component',
'physical connectivity interrupting cutout',
'physical laminate component',
'physical network supporting inter stratum feature',
'plated conductive base blind via',
'plated cutout edge segment',
'plated cutout',
'plated interconnect module edge segment',
'plated interconnect module edge',
'plated passage or unsupported passage',
'plated passage',
'primary stratum indicator symbol',
'printed component join terminal',
'printed connector component interface terminal',
'probe access area',
'routed interconnect component',
'routed physical component',
'special symbol laminate component',
'stratum feature template component',
'stratum feature',
'thermal isolation laminate component',
'unrouted conductive interconnect element',
'unsupported passage dependent non functional land',
'unsupported passage',
'via and contact size dependent land',
'via and contact size dependent non functional land',
'via dependent land',
'via dependent non functional land',
'via terminal' or
'via'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the grouped_requirements_property has a group name of 'layout spacing
requirements property', it shall be assigned to exactly one 
design_object with a description of 
'dependent design object category'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the grouped_requirements_property has a group name of 'layout spacing
requirements property', it shall be assigned to exactly one 
design_object with a description of 
'reference design object category'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2079"
></A
>5.2.3.1.159 guided_wave_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A guided_wave_terminal is a package_terminal that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Guided_wave_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY guided_wave_terminal
   SUBTYPE OF (package_terminal);
END_ENTITY; -- guided_wave_terminal
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2085"
></A
>5.2.3.1.160 illuminance_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An illuminance_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Illuminance_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY illuminance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\illuminance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = lux;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- illuminance_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The illuminance_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The illuminance_measure_with_unit shall reference an si_unit with a name of lux.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2095"
></A
>5.2.3.1.161 inductance_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An inductance_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Inductance_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY inductance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\inductance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = henry;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- inductance_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The inductance_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The inductance_measure_with_unit shall reference an si_unit with a name of henry.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2105"
></A
>5.2.3.1.162 integral_shield</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An integral_shield is a component_shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Shield</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY integral_shield
  SUBTYPE OF (component_shape_aspect);
WHERE
  WR1: SIZEOF (QUERY(pdr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN TYPEOF(pdr.relating_property_definition))
       OR ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
    'COMPONENT_SHAPE_ASPECT' IN TYPEOF(pdr.relating_property_definition)))
       AND (pdr\property_definition_relationship.name = 'shielded item'))) &#62;=1;
END_ENTITY; -- integral_shield
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The integral_shield shall be related to at least one component_definition or to
at least one component_shape_aspect as the 'shielded item'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2113"
></A
>5.2.3.1.163 inter_stratum_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An inter_stratum_feature is a component_shape_aspect that implements the ARM
concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Cutout</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Cutout_edge_segment</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Dielectric_material_passage</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Inter_stratum_feature</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_edge</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_edge_segment</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Partially_plated_cutout</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Partially_plated_interconnect_module_edge</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_connectivity_interrupting_cutout</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Unsupported_passage</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY inter_stratum_feature
 SUBTYPE OF (component_shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN ['bonded conductive base blind via', 
       'buried via', 'component termination passage', 
       'interfacial connection', 'non conductive base blind via', 
       'plated conductive base blind via', 'plated cutout', 
       'partially plated cutout', 
       'plated cutout edge segment', 
       'partially plated interconnect module edge', 
       'plated interconnect module edge segment', 
       'plated interconnect module edge', 'unsupported passage', 'cutout', 
       'physical connectivity interrupting cutout', 
       'dielectric material passage', 'cutout edge segment', 
       'interconnect module edge segment', 'interconnect module edge'];
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'feature of size') AND
       (it\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1))) = 1;
  WR3: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description IN
       ['inter stratum feature template',
       'via template',
       'component termination passage template',
       'unsupported passage template']))) = 1;
  WR4: (NOT (SELF\shape_aspect.description = 'cutout edge segment')) OR
       (SIZEOF (QUERY (cc &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed cutout') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (cc.relating_shape_aspect)) AND
       ((cc.relating_shape_aspect\shape_aspect.description =
       'cutout') OR
       (cc.relating_shape_aspect\shape_aspect.description =
       'physical connectivity interrupting cutout') OR
       (cc.relating_shape_aspect\shape_aspect.description =
       'partially plated cutout')))) = 1);
  WR5: (NOT (SELF\shape_aspect.description = 'interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed edge') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_shape_aspect)) AND
       ((ce.relating_shape_aspect\shape_aspect.description =
       'interconnect module edge') OR
       (ce.relating_shape_aspect\shape_aspect.description =
       'interconnect module edge')
        ))) = 1);
  WR6: (NOT (SELF\shape_aspect.description = 'dielectric material passage')) OR
       (SIZEOF (QUERY (pp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent passage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (pp.relating_shape_aspect)) AND
       ((pp.relating_shape_aspect\shape_aspect.description =
       'cutout') OR
       (pp.relating_shape_aspect\shape_aspect.description =
       'physical connectivity interrupting cutout') OR
       (pp.relating_shape_aspect\shape_aspect.description =
       'partially plated cutout')))) = 1);
  WR7: (NOT (SELF\shape_aspect.description = 'dielectric material passage')) OR
       ((SIZEOF (QUERY (rp &#60;* QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF (pd)) |
       rp\property_definition.name = 'feature material')) &#60;= 1) OR
       (SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) &#60;= 1));
  WR8: (NOT (SELF\shape_aspect.description = 
       'physical connectivity interrupting cutout')) OR
       (SIZEOF (QUERY (ice &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'interrupted connectivity elements') |
       ice.relating_shape_aspect\shape_aspect.name =
       'conductive interconnect element')) &#62;= 1);
  WR9: (NOT (SELF\shape_aspect.description = 'unsupported passage')) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'unsupported passage template'))) = 1);
  WR10: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SIZEOF (QUERY (prpc &#60;*
       USEDIN (SELF.of_shape.definition.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1);
 WR11: (NOT (SELF\shape_aspect.description = 'cutout edge segment')) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)))) = 1);
 WR12: (NOT (SELF\shape_aspect.description = 
       'plated cutout edge segment')) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)))) = 1);
 WR13: (NOT (SELF\shape_aspect.description = 
       'interconnect module edge segment')) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)))) = 1);
 WR14: (NOT (SELF\shape_aspect.description = 
       'plated interconnect module edge segment')) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)))) = 1);
END_ENTITY; -- inter_stratum_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The inter_stratum_feature shall have a description of 'bonded conductive
base blind via', 'buried via', 'component termination passage', 'interfacial
connection', 'non conductive base blind via', 'plated conductive base blind
via', 'partially plated cutout', 'plated cutout', 
'plated cutout edge segment', 'plated interconnect
module edge segment', 'partially plated interconnect module edge', 
'plated interconnect module edge', 'unsupported
passage', 'cutout', 'physical connectivity interrupting cutout', 'dielectric
material passage', 'cutout edge segment', 'interconnect module edge segment',
or 'interconnect module edge'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The inter_stratum_feature shall have exactly one 
descriptive_representation_item with a name of 'feature
of size' and a description of 'true' or 'false'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The inter_stratum_feature shall be related, as an instantiated
template, to exactly one part_template_definition that has a description of 'inter
stratum feature template', 'via template', 'component termination passage
template', or 'unsupported passage template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the inter_stratum_feature has a description of 'cutout edge
segment', the inter_stratum_feature shall be related to exactly one
inter_stratum_feature with a description of either 'cutout' or 'physical
connectivity interrupting cutout' or 'partially plated cutout' as the 'composed cutout'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the inter_stratum_feature has a description of 'interconnect
module edge segment', the inter_stratum_feature shall be related to exactly
one inter_stratum_feature with a description of 'interconnect module edge'
or of 'partially plated interconnect module edge' as a 'composed edge'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the inter_stratum_feature has a description of 'dielectric
material passage', the inter_stratum_feature shall be related to exactly
one inter_stratum_feature with a description of either 'cutout' or 'physical
connectivity interrupting cutout' or 'partially plated cutout' as the 'precedent passage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the inter_stratum_feature has a description of 'dielectric material
passage', it shall have at most one requirements_property with a name of
'feature material' or be the definition for at most one material_designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the inter_stratum_feature has a description of 'physical
connectivity interrupting cutout', the inter_stratum_feature shall be
related to at least one shape_aspect with a name of 'conductive
interconnect element' as 'interrupted connectivity elements'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the inter_stratum_feature has a description of 'unsupported
passage', the inter_stratum_feature shall be related to exactly one
part_template_definition with a description of 'unsupported passage template' as an
'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The inter_stratum_feature shall be an aspect of the shape of a component_definition that is the definition of a product that is categorized as an 'interconnect
module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the inter_stratum_feature has a description of 'cutout edge segment ',
the inter_stratum_feature shall be related, as an
'instantiated template', to exactly one
inter_stratum_feature_edge_segment_template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the inter_stratum_feature has a description of 'plated cutout edge segment ',
the inter_stratum_feature shall be related, as an
'instantiated template', to exactly one
'inter_stratum_feature_edge_segment_template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the inter_stratum_feature has a description of 'interconnect module edge segment ',
the inter_stratum_feature shall be related, as an
'instantiated template', to exactly one
inter_stratum_feature_edge_segment_template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the inter_stratum_feature has a description of 'plated interconnect module edge segment ',
the inter_stratum_feature shall be related, as an
'instantiated template', to exactly one
'inter_stratum_feature_edge_segment_template'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2154"
></A
>5.2.3.1.164 inter_stratum_feature_edge_segment_template</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An inter_stratum_feature_edge_segment_template is an inter_stratum_feature and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Interconnect_module_edge_segment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY inter_stratum_feature_edge_segment_template
  SUBTYPE OF (part_template_definition,shape_aspect_relationship);
WHERE
  wr1: (SIZEOF (QUERY (ce &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE_EDGE_TEMPLATE' IN
       TYPEOF (ce.relating_shape_aspect)) 
       )) = 1);
  wr2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  wr3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  wr4: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
  wr5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\part_template_definition ||
       SELF\shape_aspect_relationship ||
       SELF\inter_stratum_feature_edge_segment_template)) = 0;
END_ENTITY; -- inter_stratum_feature_edge_segment_template
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The inter_stratum_feature_edge_segment_template shall be related to exactly one
inter_stratum_feature_edge_template. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The inter_stratum_feature_edge_segment_template shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The inter_stratum_feature_edge_segment_template shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The two edge_segment_vertex instances referenced shall not be the same instance of edge_segment_vertex.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The inter_stratum_feature_edge_segment_template shall not participate in complex instances
other than those of its immediate supertypes.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2166"
></A
>5.2.3.1.165 inter_stratum_feature_edge_template</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A inter_stratum_feature_edge_template is a part_template_definition that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>inter_stratum_feature_edge_template</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY inter_stratum_feature_edge_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\part_template_definition ||
       SELF\inter_stratum_feature_edge_template)) = 0;
  WR2: SELF\shape_aspect.description = 
       'inter stratum feature edge template';
END_ENTITY; -- inter_stratum_feature_edge_template
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The inter_stratum_feature_edge_template shall not participate in a complex instance of other
than it's direct supertypes.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The inter_stratum_feature_edge_template shall have a description of 'inter stratum feature edge template'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2175"
></A
>5.2.3.1.166 interconnect_definition</H4
>An interconnect_definition is a physical_unit that implements the ARM concepts
of  <SPAN
CLASS="INTERNALREF"
>Pcb</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Pcb_usage_view</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_definition
 SUBTYPE OF (physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR
       (SELF\product_definition.name = 'interconnect module');
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design')) OR
       (SIZEOF (QUERY (du &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_INTERCONNECT_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_INTERCONNECT_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name = 
       'interconnect module')
)) = 1);
END_ENTITY; -- interconnect_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interconnect_definition shall have a name that is 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the interconnect_definition is a physical design, it shall relate to exactly
one interconnect_definition, externally_defined_interconnect_definition, or 
library_defined_interconnect_definition that is a physical design usage with a 
name of 'interconnect module' as the design usage.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2184"
></A
>5.2.3.1.167 interconnect_module_component_surface_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interconnect_module_component_surface_feature is a shape_aspect.  An interconnect_module_component_surface_feature
implements the ARM concept of: <SPAN
CLASS="INTERNALREF"
>Interconnect_module_component_surface_feature</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_component_surface_feature
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: (SELF\shape_aspect.description IN [
       'interconnect module component surface feature']);
  WR3: SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description IN
       ['interconnect module secondary surface',
        'interconnect module primary surface',
        'interconnect module cavity surface',
        'interconnect module cutout surface',
        'interconnect module edge surface',
        'interconnect module edge segment surface'])) = 1;
END_ENTITY; -- interconnect_module_component_surface_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interconnect_module_component_surface_feature shall be an aspect of the shape of a component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The interconnect_module_component_surface_feature shall have a description of 'interconnect module component surface feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The interconnect_module_component_surface_feature shall be related to exactly one 
shape_aspect with a description of 'interconnect module secondary surface',
'interconnect module primary surface', 'interconnect module edge surface',
'interconnect module cavity surface', 'interconnect module cavity surface',
or 'interconnect module edge segment surface' as the 'instantiated feature'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2194"
></A
>5.2.3.1.168 interconnect_module_design_object_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interconnect_module_design_object_category is a characterized_object
that specifies a design object category for
the implementation of the ARM concept of <SPAN
CLASS="INTERNALREF"
>Interconnect_module_constraint_region</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_design_object_category
  SUBTYPE OF (characterized_object);
WHERE
  WR1: SELF\characterized_object.description IN 
       ['cutout category', 
       'fill area category', 
       'inter stratum feature category', 
       'stratum feature category', 
       'via category'];
END_ENTITY; -- interconnect_module_design_object_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interconnect_module_design_object_category shall have a description of 
'cutout category', 
'fill area category', 
'inter stratum feature category', 
'stratum feature category', 
or 'via category'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2202"
></A
>5.2.3.1.169 interconnect_module_cutout_segment_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A interconnect_module_cutout_segment_surface is a shape_aspect and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Interconnect_module_cutout_segment_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_cutout_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  wr1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  wr2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  wr3: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('interconnect module cutout surface' = 
       ce.relating_shape_aspect\shape_aspect.description) )) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\interconnect_module_cutout_segment_surface)) = 0;
END_ENTITY; -- interconnect_module_cutout_segment_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interconnect_module_cutout_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The interconnect_module_cutout_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The edge_segment_vertex instances referenced shall not be the same instance of edge_segment_vertex.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The interconnect_module_cutout_segment_surface shall be related to
exactly one shape_aspect with a description of 'interconnect module cutout surface' as the 'composed surface'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The interconnect_module_cutout_segment_surface shall not be in a complex instance other 
than with it's immediate supertypes. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2214"
></A
>5.2.3.1.170 interconnect_module_edge_segment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A interconnect_module_edge_segment is an inter_stratum_feature and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Interconnect_module_edge_segment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_edge_segment
  SUBTYPE OF (inter_stratum_feature,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect.description IN [
       'plated interconnect module edge segment', 
       'interconnect module edge segment'];
  WR2: SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) &#60;= 1;
  WR3: (NOT (SELF\shape_aspect.description = 
       'plated interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed edge') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_shape_aspect)) AND
       (ce.relating_shape_aspect\shape_aspect.description =
       'plated interconnect module edge'))) = 1);
  WR4: (NOT (SELF\shape_aspect.description = 'interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed edge') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_shape_aspect)) AND
       (ce.relating_shape_aspect\shape_aspect.description =
       'interconnect module edge'))) = 1);
  wr5: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  wr6: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  wr7: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
END_ENTITY; -- interconnect_module_edge_segment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interconnect_module_edge_segment shall have a description of either
'plated interconnect module edge segment', or 'interconnect module
edge segment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The interconnect_module_edge_segment shall be related to at most one
join_shape_aspect with a name of 'inter stratum join' as a 'join
implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The interconnect_module_edge_segment shall be related to
exactly one plated_inter_stratum_feature as the 'composed edge' if
the description of the interconnect_module_edge_segment is
'plated interconnect module edge segment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The interconnect_module_edge_segment shall be related to
exactly one inter_stratum_feature as the 'composed edge'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The interconnect_module_edge_segment shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The interconnect_module_edge_segment shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The edge_segment_vertex instances referenced shall not be the same instance of edge_segment_vertex.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2228"
></A
>5.2.3.1.171 interconnect_module_edge_segment_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A interconnect_module_edge_segment_surface is a shape_aspect and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Interconnect_module_edge_segment_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_edge_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  wr1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  wr2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  wr3: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('interconnect module edge surface' = 
       ce.relating_shape_aspect\shape_aspect.description) )) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\interconnect_module_edge_segment_surface)) = 0;
END_ENTITY; -- interconnect_module_edge_segment_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interconnect_module_edge_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The interconnect_module_edge_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The edge_segment_vertex instances referenced shall not be the same instance of edge_segment_vertex.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The interconnect_module_edge_segment_surface shall be related to
exactly one shape_aspect with a description of 'interconnect module edge surface' as the 'composed surface'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The interconnect_module_edge_segment_surface shall not be in a complex instance other 
than with it's immediate supertypes. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2240"
></A
>5.2.3.1.172 interconnect_module_interface_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interconnect_module_interface_terminal is an interconnect_module_terminal that implement the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Interconnect_module_interface_terminal</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_interface_terminal
  SUBTYPE OF (interconnect_module_terminal);
END_ENTITY; -- interconnect_module_interface_terminal
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2246"
></A
>5.2.3.1.173 interconnect_module_join_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interconnect_module_join_terminal is an interconnect_module_terminal that implement the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Interconnect_module_join_terminal</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_join_terminal
  SUBTYPE OF (interconnect_module_terminal);
END_ENTITY; -- interconnect_module_join_terminal
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2252"
></A
>5.2.3.1.174 interconnect_module_macro_component_join_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interconnect_module_macro_component_join_terminal is a shape_aspect that implements the ARM concept of
internal.ref Linkend="Interconnect_module_macro_component_join_terminal"&#62;<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_macro_component_join_terminal
  SUBTYPE OF (component_terminal);
WHERE
  WR1: NOT (SELF\shape_aspect.description IN 
       ['assembly module component terminal', 
        'bare die component terminal', 
       'component termination passage join terminal', 
       'conductive interconnect element terminal', 
       'interconnect component join terminal', 
       'land join terminal', 
       'minimally defined component terminal',
       'non functional land join terminal', 
       'packaged component join terminal', 
       'printed component join terminal', 'package terminal occurrence',
       'via terminal']);
END_ENTITY; -- interconnect_module_macro_component_join_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interconnect_module_macro_component_join_terminal shall not have a description of
'bare die component terminal', 'component termination
passage join terminal', 'conductive interconnect element terminal',
'interconnect component join terminal', 'assembly module component
terminal', 'land join terminal', 'minimally defined component terminal',
'non functional land join terminal', 'packaged component join terminal',
'printed component join terminal', 'package terminal occurrence',
or 'via terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2259"
></A
>5.2.3.1.175 interconnect_module_stratum_based_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interconnect_module_stratum_based_terminal is an 
interconnect_module_terminal that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Interconnect_module_stratum_based_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_stratum_based_terminal
  SUBTYPE OF (interconnect_module_terminal);
END_ENTITY; -- interconnect_module_stratum_based_terminal
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2265"
></A
>5.2.3.1.176 interconnect_module_terminal</H4
>An interconnect_module_terminal is a shape_aspect that implements the ARM 
concepts of  <SPAN
CLASS="INTERNALREF"
>Interconnect_module_terminal</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Part_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interconnect_module_terminal
  SUPERTYPE OF (ONEOF(interconnect_module_interface_terminal,
                      interconnect_module_join_terminal))
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
  WR2: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.
       frame_of_reference.name = 
       'physical design usage') AND
       (SELF.of_shape.definition\product_definition.name = 
       'interconnect module');
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) &#62;= 1)) &#62;= 1; 
  WR4: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) &#60;= 1;
  WR5: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 
       'connection zone')) &#60;= 1;
END_ENTITY; -- interconnect_module_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_unit name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The interconnect_module_terminal shall be an aspect of the shape of a physical_unit that is an 'interconnect module' and that is a 'physical design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The interconnect_module_terminal shall have at least one
property_definition that is represented by a shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The interconnect_module_terminal shall be related to at most one 
part_connected_terminals_definition as a 'member connected terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The interconnect_module_terminal shall be related to no more than one shape_aspect with 
a description of 'connection zone'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2277"
></A
>5.2.3.1.177 interface_access_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interface_access_component_shape_aspect is a component_shape_aspect that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Interface_access_laminate_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interface_access_component_shape_aspect
  SUBTYPE OF (component_shape_aspect);
END_ENTITY; -- interface_access_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2283"
></A
>5.2.3.1.178 interface_access_material_removal_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interface_access_material_removal_component_shape_aspect is a material_removal_component_shape_aspect
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Interface_access_material_removal_laminate_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interface_access_material_removal_component_shape_aspect
  SUBTYPE OF (material_removal_component_shape_aspect);
END_ENTITY; -- interface_access_material_removal_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2289"
></A
>5.2.3.1.179 interface_component_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interface_component_definition is a component_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>interface_component</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interface_component_definition
  SUBTYPE OF (component_definition);
WHERE
  WR1: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL' IN 
       TYPEOF (sa)) AND
       (sa\shape_aspect.description IN ['interconnect component interface terminal',
       'packaged connector component interface terminal']))) &#62;= 1)) &#62;= 1);
END_ENTITY; -- interface_component_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interface_component_definition shall have at least one shape_aspect that is a  component_interface_terminal
with a description of 'interconnect component interface terminal' or
'packaged connector component interface terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2297"
></A
>5.2.3.1.180 interface_mounted_join</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interface_mounted_join is a shape_aspect and a
shape_aspect_relationship that relates a component_terminal to a 
component_interface_terminal.  An interface_mounted_join implements the
ARM concept of an  <SPAN
CLASS="INTERNALREF"
>Interface_mounted_join</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interface_mounted_join
 SUBTYPE OF (shape_aspect_relationship,shape_aspect);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal');
  WR2: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       ((SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal'));
END_ENTITY; -- interface_mounted_join
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interface_mounted_join shall have a 'packaged connector component interface terminal' as
the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The interface_mounted_join shall have a component_terminal with the listed description as the
relating_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2306"
></A
>5.2.3.1.181 interfaced_group_component_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An interfaced_group_component_definition is a assembly_group_component_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Interfaced_group_component</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY interfaced_group_component_definition
  SUBTYPE OF (assembly_group_component_definition);
WHERE
  WR1: (SIZEOF (QUERY (gc &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'group component') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERFACE_COMPONENT_DEFINITION' IN 
       TYPEOF (gc.related_product_definition))))
       &#62;= 1);
END_ENTITY; -- interfaced_group_component_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The interfaced_group_component_definition shall relate to at least
one interface_component_definition to
specify a 'group component'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2314"
></A
>5.2.3.1.182 join_shape_aspect</H4
>A join_shape_aspect is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Inter_stratum_join_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Intra_stratum_join_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Join_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Unrouted_join_relationship</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY join_shape_aspect
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: NOT(SELF\shape_aspect.name IN ['constrained intra layer join',
       'inter stratum join', 'intra stratum join']) OR 
       (SIZEOF (QUERY (cp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (cp.related_shape_aspect))) &#62;= 2);
  WR2: SIZEOF (QUERY (nt &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'network topology') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_NETWORK' IN
       TYPEOF (nt.relating_shape_aspect))) = 1;
  WR3: (NOT (SELF\shape_aspect.name = 'intra stratum join')) OR
       (SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (ji.related_shape_aspect)) AND
       (ji.related_shape_aspect\shape_aspect.description = 'conductor'))) &#60;= 1);
  WR4: (NOT (SELF\shape_aspect.name = 'intra stratum join')) OR
       (SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (ji.related_shape_aspect)) AND
       (ji.related_shape_aspect\shape_aspect.description = 'connected filled area'))) 
       &#60;= 1);
  WR5: (NOT (SELF\shape_aspect.name = 'inter stratum join')) OR
       (SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_CONCEPT_RELATIONSHIP' IN
       TYPEOF (ji.related_shape_aspect)) AND
       (ji.related_shape_aspect\shape_aspect.description = 
       'physical network supporting stratum feature conductive join')) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (ji.related_shape_aspect)))) &#60;= 1);
  WR6: NOT(SELF\shape_aspect.name = 'unrouted join') OR
       (SIZEOF (QUERY (cp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'unrouted terminals') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (cp.related_shape_aspect))) &#62;= 2);
END_ENTITY; -- join_shape_aspect
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The join_shape_aspect with a name of 'constrained intra layer join', 'inter stratum join', or 'intra stratum join' shall be used to relate at least two layer_connection_points to specify a 'connected point'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The join_shape_aspect shall be related to exactly one physical_network as
the 'network topology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the join_shape_aspect has a name of 'intra stratum join', it
shall relate to at most one stratum_feature with a description of 'conductor'
as a 'join implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the join_shape_aspect has a name of 'intra stratum join', it
shall relate to at most one stratum_feature with a description of 'connected
filled area' as a 'join implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the join_shape_aspect has a name of 'inter stratum join', it
shall relate to at most one stratum_concept_relationship with a description of 
'physical network supporting stratum feature conductive join' or 
plated_inter_stratum_feature as a 'join implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The join_shape_aspect with a name of 'unrouted join', shall be used to relate at least two component_terminal to specify 'unrouted terminals'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2334"
></A
>5.2.3.1.183 keepout_design_object_category</H4
>A keepout_design_object_category is a characterized_object
that specifies a design object category for
the implementation of the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Part_template_3d_keepout_shape</SPAN
>
, <SPAN
CLASS="INTERNALREF"
>Part_template_planar_keepout_shape</SPAN
>
, <SPAN
CLASS="INTERNALREF"
>Physical_unit_3d_keepout_shape</SPAN
>
, and <SPAN
CLASS="INTERNALREF"
>Physical_unit_planar_keepout_shape</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY keepout_design_object_category
  SUBTYPE OF (characterized_object);
WHERE
  WR1: SELF\characterized_object.description IN 
       ['assembly module assembly component category',
        'component feature category',
        'assembly ee material category',
        'interconnect ee material category',
        'interconnect module assembly component category',
        'via category',
        'inter stratum feature category',
        'cutout category',
        'fill area category',
        'laminate component category',
        'stratum feature category'];
END_ENTITY; -- keepout_design_object_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The keepout_design_object_category shall have a description of 
'assembly module assembly component category',
'component feature category',
'assembly ee material category',
'interconnect ee material category',
'interconnect module assembly component category',
'via category',
'inter stratum feature category',
'cutout category',
'fill area category',
'laminate component category',
or 'stratum feature category'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2344"
></A
>5.2.3.1.184 laminate_component_interface_terminal</H4
>A laminate_component_interface_terminal is a shape_aspect.  A laminate_component_interface_terminal
implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_termination_passage_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Land_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Non_functional_land_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_connector_component_interface_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY laminate_component_interface_terminal
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: (NOT (SELF\shape_aspect.description IN 
       ['component termination passage interface terminal', 
       'land interface terminal', 
       'printed connector component interface terminal',
       'non functional land interface terminal'])) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition));
  WR2: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) = 1;
(*
  WR3: (NOT (SELF\shape_aspect.description = 
       'component termination passage interface terminal')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_PASSAGE' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description =
       'component termination passage'));
*)
  WR4: (NOT (SELF\shape_aspect.description = 
       'component termination passage interface terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description =
       'component termination passage template interface terminal')) = 1);
 WR5: (NOT (SELF\shape_aspect.description IN
       ['land interface terminal',
       'non functional land interface terminal'])) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (TRUE)))) = 1);
(*
 WR6: NOT(SELF\shape_aspect.description = 'land interface terminal') OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND' IN
       TYPEOF (associated_component(SELF))) AND
(associated_component(SELF).description IN
       ['via and contact size dependent land',
       'contact size dependent land',
    'component termination passage and contact size dependent land']));
 WR7: NOT(SELF\shape_aspect.description =
       'non functional land interface terminal') OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND' IN
       TYPEOF (associated_component(SELF))) AND
(associated_component(SELF).description IN
       ['via and contact size dependent non functional land',
       'contact size dependent non functional land',
    'component termination passage and contact size dependent non functional land']));
*)
 WR8: (NOT (SELF\shape_aspect.description = 
       'printed connector component interface terminal')) OR
       (SELF.product_definitional);
 WR9: (NOT (SELF\shape_aspect.description = 
       'printed connector component interface terminal')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_COMPONENT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.description = 
       'printed connector component'));
 WR10: (NOT (SELF\shape_aspect.description = 
       'printed connector component interface terminal')) OR
       (SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'interface terminal'))) = 1);
 WR11: (NOT (SELF\shape_aspect.description =
       'printed connector component interface terminal')) OR
       (SIZEOF (QUERY (i &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       pdr\shape_aspect_relationship.name = 'implementation') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE'] *
       TYPEOF (i.relating_shape_aspect)) = 1)
       )) = 1);
 WR12: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\
        product_definition.frame_of_reference\
        application_context_element.name = 'layout occurrence');
END_ENTITY; -- laminate_component_interface_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The laminate_component_interface_terminal shall be an aspect of the shape of a component_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The laminate_component_interface_terminal shall be related to exactly one shape_aspect as an 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the laminate_component_interface_terminal has a description of 'component
termination passage interface terminal', the laminate_component_interface_terminal shall
be related to exactly one plated_passage with a description of 'component
termination passage' as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the laminate_component_interface_terminal has a description of 'component
termination passage interface terminal', the laminate_component_interface_terminal shall
be related to exactly one shape_aspect with a description of 'component
termination passage template interface terminal' as the 'instantiated
feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the laminate_component_interface_terminal has a description of either 'land
interface terminal' or 'non functional land interface terminal', the
laminate_component_interface_terminal shall be related to exactly one
land_template_terminal as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the laminate_component_interface_terminal has a description of 'land interface
terminal', the laminate_component_interface_terminal shall be related to exactly one land
with the appropriate description as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the laminate_component_interface_terminal has a description of 'non functional
land interface terminal', the laminate_component_interface_terminal shall be related to
exactly one land with the appropriate description as the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the laminate_component_interface_terminal has a description of 'printed connector
component interface terminal', it shall lie on the boundary of a product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the laminate_component_interface_terminal has a description of 'printed connector
component interface terminal', it shall be an aspect of the shape of a
printed_component that has a description of 'printed connector component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the laminate_component_interface_terminal has a description of 'printed connector component interface terminal', the laminate_component_interface_terminal shall be related to exactly one printed_part_template_terminal with a description of 'interface terminal' as the 'instantiated feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the laminate_component_interface_terminal has a description of 'printed connector component interface terminal', the laminate_component_interface_terminal shall be related to exactly one stratum_feature as the 'implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>The laminate_component_interface_terminal shall be a shape_aspect for a component_definition
with a frame_of_reference of 'layout occurrence'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2370"
></A
>5.2.3.1.185 laminate_group_component_make_from_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A laminate_group_component_make_from_relationship is a make_from_usage_option that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Laminate_group_component_make_from_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY laminate_group_component_make_from_relationship
  SUBTYPE OF (make_from_usage_option);
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION'] *
       TYPEOF (SELF.relating_product_definition)) = 1;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION'] *
       TYPEOF (SELF.related_product_definition)) = 1;
  WR3: SIZEOF( QUERY(pd &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
        (SIZEOF( QUERY(pdr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ((pdr.name = 'stratum mapping') AND
       (pdr.related_property_definition\property_definition.
         definition\product_definition_relationship.name = 'stratum make from')
        AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'MAKE_FROM_USAGE_OPTION' IN 
         TYPEOF(pdr.related_property_definition\property_definition.definition)))
          )) &#62; 0) 
        )) &#62; 0;
END_ENTITY; -- laminate_group_component_make_from_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The laminate_group_component_make_from_relationship shall reference an assembly_group_component_definition as its relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The laminate_group_component_make_from_relationship shall reference an assembly_group_component_definition as its related_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The laminate_group_component_make_from_relationship shall reference at least one make_from_usage_option with a name of 'stratum make from' as the 'stratum mapping'. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2380"
></A
>5.2.3.1.186 land</H4
>A land is a component_shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_termination_passage_and_contact_size_dependent_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_termination_passage_and_contact_size_dependent_non_functional_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_termination_passage_dependent_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Contact_size_dependent_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Contact_size_dependent_non_functional_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Non_functional_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Unsupported_passage_dependent_non_functional_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Via_and_contact_size_dependent_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Via_and_contact_size_dependent_non_functional_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Via_dependent_land</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Via_dependent_non_functional_land</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY land
 SUBTYPE OF (component_shape_aspect);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN  
       TYPEOF (SELF.of_shape.definition)) AND 
       (SIZEOF (QUERY (prpc &#60;* 
       USEDIN (SELF.of_shape.definition.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1);
  WR2: SIZEOF (QUERY (i_f &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (i_f.relating_shape_aspect))) = 1;
  WR3: SIZEOF (QUERY (aud &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'alternate usage definition') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (aud.relating_shape_aspect))) &#60;= 1;
  WR4: SIZEOF (QUERY (sfi &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'stratum feature implementation') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (sfi.relating_shape_aspect))) = 1;
(*
  WR5: (NOT (SELF\shape_aspect.description IN
       ['via and contact size dependent land',
    'component termination passage and contact size dependent land'])) OR
       (SIZEOF (QUERY (at &#60;* associated_terminals(SELF) |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'land interface terminal')))) &#62;= 0);
  WR6: (NOT (SELF\shape_aspect.description IN
       ['functional land', 'via dependent land',
       'via and contact size dependent land',
       'component termination passage dependent land',
       'contact size dependent land',
   'component termination passage and contact size dependent land'])) OR
       (SIZEOF (QUERY (at &#60;* associated_terminals(SELF) |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'land join terminal')))) &#62;= 1);
  WR7: (NOT (SELF\shape_aspect.description IN
       ['via and contact size dependent non functional land',
       'component termination passage and contact size '])) OR
       (SIZEOF (QUERY (at &#60;* associated_terminals(SELF) |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'non functional land interface terminal')))) = 1);
  WR8: (NOT (SELF\shape_aspect.description IN
       ['non functional land', 'via dependent non functional land',
       'via and contact size dependent non functional land',
       'component termination passage dependent non functional land',
       'contact size dependent non functional land',
       'component termination passage and contact size ' + 
       'dependent non functional land',
       'unsupported passage dependent non functional land'])) OR
       (SIZEOF (QUERY (at &#60;* associated_terminals(SELF)|
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'non functional land join terminal')))) &#62;= 1);
*)
  WR9: (NOT (SELF\shape_aspect.description IN
       ['component termination passage and contact size dependent land',
       'component termination passage and contact size dependent' + 
       'non functional land',
       'component termination passage dependent land',
       'component termination passage dependent non functional land'])) OR
       (SIZEOF (QUERY (rp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'reference passage') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_PASSAGE' IN
       TYPEOF (rp.relating_shape_aspect)) AND
       (rp.relating_shape_aspect\shape_aspect.description =
       'component termination passage')))) = 1);
 WR10: (NOT (SELF\shape_aspect.description IN
       ['via and contact size dependent land',
       'via and contact size dependent non functional land',
       'via dependent land', 'via dependent non functional land'])) OR
       (SIZEOF (QUERY (rv &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'reference via') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_PASSAGE' IN
       TYPEOF (rv.relating_shape_aspect)) AND
       (rv.relating_shape_aspect\shape_aspect.description IN
       ['buried via', 'interfacial connection', 
       'bonded conductive base blind via', 'non conductive base blind via',
       'plated conductive base blind via'])))) = 1);
 WR11: (NOT (SELF\shape_aspect.description = 
       'unsupported passage dependent non functional land')) OR
       (SIZEOF (QUERY (rp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'reference passage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (rp.relating_shape_aspect)) AND
       (rp.relating_shape_aspect\shape_aspect.description =
       'unsupported passage'))) = 1);
 WR12: (NOT (SELF\shape_aspect.description IN
       ['component termination passage dependent land',
       'component termination passage dependent non functional land'])) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'default component termination passage based')))) = 1);
 WR13: (NOT (SELF\shape_aspect.description IN
       ['component termination passage and contact size dependent land',
       'component termination passage and contact size dependent ' +
       'non functional land'])) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'default attachment size and component termination ' +
       'passage based')))) = 1);
 WR14: (NOT (SELF\shape_aspect.description IN
       ['contact size dependent land',
       'contact size dependent non functional land'])) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'default attachment size based')))) = 1);
 WR15: (NOT (SELF\shape_aspect.description IN
       ['via and contact size dependent land',
       'via and contact size dependent non functional land'])) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'default attachment size and via based')))) = 1);
 WR16: (NOT (SELF\shape_aspect.description IN
       ['via dependent land',
       'via dependent non functional land'])) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'default via based')))) = 1);
 WR17: (NOT (SELF\shape_aspect.description = 
       'unsupported passage dependent ' +
       'non functional land')) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'default unsupported passage based'))) = 1);
END_ENTITY; -- land
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The land shall be an aspect of the shape of a component_definition that
is the definition of a product that is categorized as an 'template
module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The land shall be related to exactly one land_physical_template as the
'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The land shall be related to at most one land_physical_template
as the 'alternate usage definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The land shall be related to exactly one stratum_feature as a
'stratum feature implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the land has a description of 'via and contact size dependent land', 
or 'component termination passage and contact size dependent land', the land may relate
to zero or more component_shape_aspect that has a description of 'land
interface terminal' to specify the 'associated component'.<DIV
CLASS="NOTE"
><P
></P
>NOTE: A contact size dependent land may have more than one interface terminal.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the land has a description of 'functional land', 'via dependent
land', 'via and contact size dependent land', 'component termination
passage dependent land', 'contact size dependent land',  or 'component
termination passage and contact size dependent land', the land shall relate
to at least one component_terminal that has a description of 'land join
terminal' to specify the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the land has a description of 'via and contact size dependent non functional land', 'component termination passage and contact size dependent non functional land', the land shall relate to exactly one component_shape_aspect that has a description of 'non functional land interface terminal' to specify the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the land has a description of 'non functional land', 'via
dependent non functional land', 'via and contact size dependent non
functional land', 'component termination passage dependent non functional
land', 'contact size dependent non functional land', 'component termination
passage and contact size dependent non functional land', or 'unsupported
passage dependent non functional land', the land shall relate to at least
one component_terminal that has a description of 'non functional land join
terminal' to specify the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the land has a description of 'component termination passage and
contact size dependent land', 'component termination passage and contact
size dependent non functional land', 'component termination passage
dependent land', or 'component termination passage dependent non functional
land', the land shall be related to exactly one plated_passage with a
description of 'component termination passage' as a 'reference passage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the land has a description of 'via and contact size dependent
land', 'via and contact size dependent non functional land', 'via dependent
land', or 'via dependent non functional land', the land shall be related to
exactly one plated_passage that has a description of 'buried via',
'interfacial connection', 'bonded conductive base blind via', 'non
conductive base blind via', or 'plated conductive base blind via' as a
'reference via'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the land has a description of 'unsupported passage dependent non
functional land', the land shall be related to exactly one
inter_stratum_feature with a description of 'unsupported passage' as a
'reference passage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the land has a description of either 'component termination
passage dependent land' or 'component termination passage dependent non
functional land', the land shall be related to exactly one
land_physical_template with a description of 'default component termination
passage based' as an 'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the land has a description of either 'component termination
passage and contact size dependent land' or 'component termination passage
and contact size dependent non functional land', the land shall be related
to exactly one land_physical_template with a description of 'default
attachment size and component termination passage based' as an
'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the land has a description of either 'contact size dependent
land' or 'contact size dependent non functional land', the land shall be
related to exactly one land_physical_template with a description of
'default attachment size based' as an 'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the land has a description of either 'via and contact size
dependent land' or 'via and contact size dependent non functional land',
the land shall be related to exactly one land_physical_template with a
description of 'default attachment size and via based' as an 'instantiated
template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the land has a description of either 'via dependent land' or 'via
dependent non functional land', the land shall be related to exactly one
land_physical_template with a description of 'default via based' as an
'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>If the land has a description of 'unsupported passage dependent non
functional land', the land shall be related to exactly one
land_physical_template with a description of 'default unsupported passage
based' as an 'instantiated template'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2428"
></A
>5.2.3.1.187 land_physical_template</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A land_physical_template is a part_template_definition that implements the
ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_attachment_size_and_component_termination_passage_based_land_physical_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_attachment_size_and_via_based_land_physical_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_attachment_size_based_land_physical_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_component_termination_passage_based_land_physical_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_land_physical_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_passage_based_land_physical_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_via_based_land_physical_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Land_physical_template</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY land_physical_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: SIZEOF (QUERY (ada &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc &#60;* USEDIN (ada.assigned_document,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
    duc\document_usage_constraint.subject_element = 
                 'pre defined classification code')) = 1)) &#60;= 1;
  WR2: SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated definition') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND_TEMPLATE_TERMINAL' IN
       TYPEOF (am.related_shape_aspect))) &#62;= 1;
 WR3:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN ['default attachment size based',
       'default attachment size and component termination passage based', 
       'default attachment size and via based'])) OR
       (SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'minimum attachment region size') AND 
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone')))) &#60;= 1));
 WR4:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN ['default attachment size based',
       'default attachment size and component termination passage based', 
       'default attachment size and via based'])) OR
       (SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'maximum attachment region size') AND 
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone')))) &#60;= 1));
 WR5:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default component termination passage based',
   'default attachment size and component termination passage based'])) OR
       (SIZEOF (QUERY (tu &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect)) AND
       (tu.related_shape_aspect\shape_aspect.description = 
       'default component termination passage definition'))) = 1));
 WR6:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default attachment size and component termination passage based',
       'default attachment size based', 
       'default attachment size and via based', 
       'default component termination passage based',
       'default via based',
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (ost &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'of stratum technology') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (ost.relating_shape_aspect.of_shape.definition)
       )) = 1));
 WR7:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2)) = 2)) = 1))) = 0));
 WR8:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND 
       (it\representation_item.name = 'minimum fabrication allowance'))) 
       = 1)) = 1))) = 0));
 WR9:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'minimum annular ring'))) = 1
       )) = 1))) = 0));
 WR10: NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (tu &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect))) = 1));
 WR11: NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN ['default via based',
       'default attachment size and via based'])) OR
       (SIZEOF (QUERY (tu &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect)) AND
       (tu.related_shape_aspect\shape_aspect.description = 'default via definition'))) 
       = 1));
 WR12: NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description = 'default unsupported passage')) OR
       (SIZEOF (QUERY (tu &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect)) AND
       (tu.related_shape_aspect\shape_aspect.description = 
       'default unsupported passage definition'))) = 1));
END_ENTITY; -- land_physical_template
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The land_physical_template shall have a reference of at most one
document that is constrained by a 'pre defined classification code'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The land_physical_template shall be used to relate at least one 
land_template_terminal to specify the 'access mechanism'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the land_physical_template has a description of 'default attachment
size based', 'default attachment size and component termination passage
based', or 'default attachment size and via based', it shall be to relate
no more than one shape_aspect with a name of 'connection zone' as the  
'minimum attachment region size'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the land_physical_template has a description of 'default attachment
size based', 'default attachment size and component termination passage
based', or 'default attachment size and via based', it shall be to relate
no more than one shape_aspect with a name of 'connection zone' as the  
'maximum attachment region size'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the land_physical_template has a description of  'default component
termination passage based' or 'default attachment size and component
termination passage based', it shall relate to a passage_technology with a
description of 'default component termination passage definition' to specify
the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the land_physical_template has a description of 'default attachment
size and component termination passage based', 'default attachment size
based', 'default attachment size and via based', 'default component
termination passage based', 'default via based', or 'default unsupported
passage based', it shall relate to a stratum_technology as the 'of stratum technology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the land_physical_template has a description of 'default attachment
size and component termination passage based', 'default attachment size and
via based', 'default component termination passage based', 'default via
based', or 'default unsupported passage based', it shall have a representation
that contains exactly two length_measure_with_units.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the land_physical_template has a description of 'default attachment
size and component termination passage based', 'default attachment size and
via based', 'default component termination passage based', 'default via
based', or 'default unsupported passage based', it shall have a representation
that contains exactly one length_measure_with_unit with a name of 'minimum
fabrication allowance'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the land_physical_template has a description of 'default attachment
size and component termination passage based', 'default attachment size and
via based', 'default component termination passage based', 'default via
based', or 'default unsupported passage based', it shall have a representation
that contains exactly one length_measure_with_unit with a name of 'minimum
annular ring'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the land_physical_template has a description of  'default attachment
size and component termination passage based', 'default attachment size and
via based', 'default component termination passage based', 'default via
based', or 'default unsupported passage based', it shall relate a
passage_technology to specify the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the land_physical_template has a description of  'default via based'
or 'default attachment size and via based', it shall relate to a 
passage_technology with a description of 'default via definition' to specify 
the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the land_physical_template has a description of  'default
unsupported passage', it shall relate to a passage_technology with a
description of 'default unsupported passage definition' to specify the
'technology usage'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2463"
></A
>5.2.3.1.188 land_template_terminal</H4
>A land_template_terminal is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Land_template_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Land_template_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Land_template_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY land_template_terminal
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN ['interface terminal', 'join terminal'];
  WR2: SIZEOF (QUERY (tcz &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'terminal connection zone') AND
       (sar\shape_aspect_relationship.description IN ['edge curve', 'edge point', 
       'surface area', 'surface point'])) |
       tcz.related_shape_aspect\shape_aspect.description = 'connection zone')) &#62;= 0;
END_ENTITY; -- land_template_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The land_template_terminal shall have a description of either 'interface
terminal' or 'land terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The land_template_terminal shall relate to zero or more shape_aspect
with a name of 'connection zone' to specify the 'terminal connection zone'
which may be described as a 'edge curve', 'edge point', 'surface_area', or
'surface point'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2477"
></A
>5.2.3.1.189 layer</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A layer is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Layer</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY layer
 SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (QUERY (ada &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc &#60;* USEDIN (ada.assigned_document,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
       duc\document_usage_constraint.subject_element = 'layer definition')) = 1)) &#60;= 1;       
  WR2: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP'
       IN TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition_relationship.name = 
                                    'inter stratum extent');
END_ENTITY; -- layer
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within a population of layer.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The layer shall be referenced by at most one document that has a usage
constraint which specifies the 'layer definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The layer shall be an aspect of the shape of a product_definition_relationship 
with a name of 'inter stratum extent'.</DIV
></DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The same geometric representation shall be attached to each of the stratum
specified by the layer.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The name shall be unique.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2492"
></A
>5.2.3.1.190 layer_connection_point</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A layer_connection_point is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Dependently_located_layer_connection_point</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Explicitly_located_layer_connection_point</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Layer_connection_point</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY layer_connection_point
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name, SELF\shape_aspect.of_shape;
WHERE
  WR1: SELF\shape_aspect.of_shape.definition\product_definition.
       name = 'design layer';
  WR2: SIZEOF (QUERY (cp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'inter stratum join')))) &#60;= 1;
  WR3: SIZEOF (QUERY (cp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'intra stratum join')))) = 1;
  WR4: NOT(
       SIZEOF (QUERY (cp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'inter stratum join')))) = 1)
       OR
       (SIZEOF (QUERY (cp &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'intra stratum join')))) = 1);
  WR5: (NOT (SELF\shape_aspect.description = 'dependently located')) OR
       (SIZEOF (QUERY (ado &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated design object') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTER_STRATUM_FEATURE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_MODULE_TERMINAL'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) OR
       ((SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) AND
       (ado.relating_shape_aspect.description IN ['printed component join terminal',
        'embedded component terminal']))
       )) = 1);
  WR6: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'connection point location 2d') AND
       (SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CARTESIAN_POINT' IN
       TYPEOF (it)) AND (it\geometric_representation_item.dim = 2 )
       )) = 1))) &#60;= 1))) = 0);
  WR7: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'connection point location 3d') AND
       (SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CARTESIAN_POINT' IN
       TYPEOF (it)) AND (it\geometric_representation_item.dim = 3 )
       )) = 1))) &#60;= 1))) = 0);
  WR8: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       ((pdr.used_representation\representation.name = 'connection point location 2d')
       OR
       (pdr.used_representation\representation.name = 'connection point location 3d'))
       )) &#62;= 1))) = 0);
  WR9: (NOT (SELF\shape_aspect.description = 'dependently located')) OR
       (SIZEOF (QUERY (ado &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'reference zone') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) OR
       ((SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) AND
       (ado.relating_shape_aspect.description IN ['connection zone']))
       )) &#60;= 1);
END_ENTITY; -- layer_connection_point
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within the stratum that is the product_definition for this layer_connection_point.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The layer_connection_point shall be an aspect of the shape of a product_definition with a name of 'design layer'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The layer_connection_point shall be related to no more than one join_shape_aspect with a name of 'inter stratum join' as a 'connected point'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The layer_connection_point shall be related to one join_shape_aspect with a name of 'intra stratum join' as a 'connected point'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the layer_connection_point is related to a join_shape_aspect with a name of 'inter stratum join' as a 'connected point',
the layer_connection_point shall be related to a join_shape_aspect with a name of 'intra stratum join' as a 'connected point'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the layer_connection_point has a description of 'dependently located', it shall be related to exactly one inter_stratum_feature or interconnect_module_terminal or component_terminal that has a description of 'embedded component terminal' or 'printed component join terminal' as the 'associated design object'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The layer_connection_point shall have no more than one shape_representation as the 'connection point location 2d' that contains exactly one cartesian_point with a dimensionality of 2.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The layer_connection_point shall have no more than one shape_representation as the 'connection point location 3d' that contains exactly one cartesian_point with a dimensionality of 3.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The layer_connection_point shall have no less than one shape_representation as either the 'connection point location 2d' or the 'connection point location 3d'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the layer_connection_point has a description of 'dependently located', it shall be related to no more than one shape_aspect that has a description of 'connection zone' as the 'reference zone'.</DIV
></DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>Each layer_connection_point shall be within the resolved areal extent of not more than one stratum_feature.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>Each layer_connection_point shall be specified by not more than one physical_network.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2520"
></A
>5.2.3.1.191 layer_connection_point_link</H4
>A layer_connection_point_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Layer_connection_point_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY layer_connection_point_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\layer_connection_point_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SIZEOF(QUERY( cp &#60;* USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
              cp\shape_aspect_relationship.name = 'connected points')) = 1;
END_ENTITY; -- layer_connection_point_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related point shall not be the relating point. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The layer_connection_point_link shall relate to only a  layer_connection_point in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The layer_connection_point_link shall relate to only a layer_connection_point in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of layer_connection_point_link shall be only layer_connection_point_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each layer_connection_point_link shall be referenced exactly once by a shape_aspect_relationship with a name of 'connected points' by the related_shape_aspect attribute.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2533"
></A
>5.2.3.1.192 layout_macro_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A layout_macro_component is a printed_component that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Layout_macro_component</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY layout_macro_component
  SUBTYPE OF (printed_component);
WHERE
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ &#60;* QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'layout macro component shape aspect') |
       SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (pt_occ,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect))
       )) = 1)) = 1))) = 0;
  WR2: SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design definition') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYOUT_MACRO_DEFINITION'] *
       TYPEOF (ip.relating_product_definition)) = 1)
       )) = 1;
  WR3: SELF\product_definition.description &#60;&#62; 'printed connector component';
END_ENTITY; -- layout_macro_component
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The layout_macro_component shall have exactly one shape_aspect with a name of
'layout macro component shape aspect' that is related to a layout_macro_floor_plan_template_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The layout_macro_component shall be associated to exactly one layout_macro_definition as a 'design definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The layout_macro_component shall not have a description of 'printed connector component'. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2543"
></A
>5.2.3.1.193 layout_macro_definition</H4
>An layout_macro_definition is an interconnect_definition that implements the ARM concept
of <SPAN
CLASS="INTERNALREF"
>Layout_macro_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY layout_macro_definition
 SUBTYPE OF (interconnect_definition);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SIZEOF (QUERY (du &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_INTERCONNECT_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_INTERCONNECT_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name = 'interconnect module')
       )) = 0;
 WR3: SELF.frame_of_reference\application_context_element.name = 'physical design';
 WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ &#60;* QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'layout macro definition shape aspect') |
       SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (pt_occ,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'floor layout view') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect))
       )) = 1)) = 1))) = 0;
END_ENTITY; -- layout_macro_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The layout_macro_definition shall relate to exactly zero interconnect_definition, externally_defined_interconnect_definition, or library_defined_interconnect_definition that is a physical design usage with a name of 'interconnect module' as the design usage.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The layout_macro_definition shall be a physical design.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The layout_macro_definition shall be related to exactly one layout_macro_floor_plan_template.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2553"
></A
>5.2.3.1.194 layout_macro_definition_terminal_to_usage_terminal_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A layout_macro_definition_terminal_to_usage_terminal_assignment is a shape_aspect and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Layout_macro_definition_terminal_to_usage_terminal_assignment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY layout_macro_definition_terminal_to_usage_terminal_assignment
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.name;
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect_relationship ||
       SELF\layout_macro_definition_terminal_to_usage_terminal_assignment ||
       SELF\shape_aspect)) = 0;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN 
       TYPEOF(SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description
       IN ['component termination passage join terminal',
           'conductive interconnect element terminal',
           'land join terminal',
           'non functional land join terminal',
           'printed component join terminal',
           'via terminal'];
  WR4: SIZEOF(USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT')) &#60;= 1;

END_ENTITY; -- layout_macro_definition_terminal_to_usage_terminal_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>A layout_macro_definition_terminal_to_usage_terminal_assignment shall not be any other type of shape_aspect_relationship or any other type of shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>A layout_macro_definition_terminal_to_usage_terminal_assignment shall relate to a shape_aspect with a description of 'printed part template terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>A layout_macro_definition_terminal_to_usage_terminal_assignment shall relate to a shape_aspect with a description listed. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>A layout_macro_definition_terminal_to_usage_terminal_assignment shall be referenced no more than once. </DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2567"
></A
>5.2.3.1.195 layout_macro_floor_plan_template</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A layout_macro_floor_plan_template is a part_template_plan_template 
that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Layout_macro_floor_plan_template</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY layout_macro_floor_plan_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: NOT(SELF\shape_aspect.description IN
      ['component termination passage template',
       'component termination passage template',
       'default trace template',
       'inter stratum feature template',
       'printed connector template',
       'printed part cross section template',
       'printed part template',
       'trace template',
       'unsupported passage template',
       'via template',
       'non conductive cross section template']);
  WR2: SIZEOF(QUERY( sar &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'access maps') AND
      ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYOUT_MACRO_DEFINITION_TERMINAL_TO_USAGE_TERMINAL_ASSIGNMENT' IN
       TYPEOF (sar.relating_shape_aspect)))
       )) &#62;=1;
END_ENTITY; -- layout_macro_floor_plan_template
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The layout_macro_floor_plan_template description shall not be any of:
'component termination passage template'
'component termination passage template',
'default trace template',
'inter stratum feature template',
'printed connector template',
'printed part cross section template',
'printed part template',
'trace template',
'unsupported passage template',
'via template',
'non conductive cross section template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The layout_macro_floor_plan_template shall be related to at least one layout_macro_definition_terminal_to_usage_terminal_assignment.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2576"
></A
>5.2.3.1.196 length_trimmed_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A length_trimmed_terminal is an altered_package_terminal that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Length_trimmed_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY length_trimmed_terminal
   SUBTYPE OF (altered_package_terminal);
WHERE
 WR1: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2)) = 2)) = 1))) = 0);
 WR2:  (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
                   'maximum trimmed length'))) = 1)) = 1))) = 0);
 WR3:  (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND 
        (it\representation_item.name = 
                  'minimum trimmed length'))) = 1
       )) = 1))) = 0);

END_ENTITY;
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The length_trimmed_terminal shall have a representation that contains exactly two
length_measure_with_units.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The length_trimmed_terminal shall have a representation that contains exactly one
length_measure_with_unit with a name of 'maximum trimmed length'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The length_trimmed_terminal shall have a representation that contains exactly one
length_measure_with_unit with a name of 'minimum trimmed length'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2586"
></A
>5.2.3.1.197 library_defined_assembly_definition</H4
>A library_defined_assembly_definition is a library_defined_physical_unit that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Pca_usage_view</SPAN
>
in conjunction with  <SPAN
CLASS="INTERNALREF"
>Library_item</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_assembly_definition
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SELF\product_definition.name = 'assembly module';
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'pca terminal'))) &#62;= 2))) = 0);
END_ENTITY; -- library_defined_assembly_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The library_defined_assembly_definition shall be a definition of a product that has a name of 'assembly module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the library_defined_assembly_definition has a frame_of_reference name of
'physical design usage', it shall have at least two shape_aspects that are
assembly_module_terminals with a description of 'pca terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2596"
></A
>5.2.3.1.198 library_defined_bare_die</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A library_defined_bare_die is a library_defined_physical_unit that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Bare_die</SPAN
>
in conjunction with  <SPAN
CLASS="INTERNALREF"
>Library_item</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_bare_die
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: SIZEOF (QUERY (ifdu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifdu.relating_product_definition)) AND
       (ifdu.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'device unit technology') |
       dut.relating_property_definition\property_definition.name = 
       'unit technology')) = 1)) = 1;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 2))) = 0;
END_ENTITY; -- library_defined_bare_die
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The library_defined_bare_die shall be related to exactly one
functional_unit with a frame_of_reference name of 'functional design usage' as
the 'implemented function'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The library_defined_bare_die shall have exactly one property_definition
that is related to exactly one property_definition with a name of 'unit
technology' as the 'device unit technology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The library_defined_bare_die shall have at least two shape_aspects that
are bare_die_terminals.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2607"
></A
>5.2.3.1.199 library_defined_functional_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A library_defined_functional_unit is an externally_defined_functional_unit that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_unit_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Functional_unit_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Library_ee_product_definition</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_functional_unit
 SUBTYPE OF (externally_defined_functional_unit);
DERIVE
  library : external_source := SELF\externally_defined_item.source;
END_ENTITY; -- library_defined_functional_unit
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2621"
></A
>5.2.3.1.200 library_defined_interconnect_definition</H4
>A library_defined_interconnect_definition is a library_defined_physical_unit
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Pcb_usage_view</SPAN
>
in conjunction with  <SPAN
CLASS="INTERNALREF"
>Library_item</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_interconnect_definition
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SELF\product_definition.name = 'interconnect module';
END_ENTITY; -- library_defined_interconnect_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The library_defined_interconnect_definition shall be a definition with a name of 'interconnect module'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2630"
></A
>5.2.3.1.201 library_defined_package</H4
>A library_defined_package is a library_defined_physical_unit that implements
the ARM concepts of  <SPAN
CLASS="INTERNALREF"
>Altered_package</SPAN
>
 and <SPAN
CLASS="INTERNALREF"
>Package</SPAN
>
in conjunction with  <SPAN
CLASS="INTERNALREF"
>Library_item</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_package
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical design usage';
  WR2: SIZEOF(USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION')) &#62; 0;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY(sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SEATING_PLANE' IN
       TYPEOF (sa))) = 1))) = 1;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY' IN 
       TYPEOF (sa))) = 1))) &#60;= 1;
  WR5: NOT(EXISTS(SELF\product_definition.description) AND
        (SELF\product_definition.description = 'altered package')) OR
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'package preparation') AND
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (pdr.relating_product_definition)) = 1))) = 1); 
END_ENTITY; -- library_defined_package
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The library_defined_package shall have a frame_of_reference name of
'physical design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The library_defined_package shall have at least one property_definition. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The library_defined_package shall have one seating_plane. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The library_defined_package shall have at most one package_body.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the library_defined_package has a description of 'altered package',
it shall be related to exactly one package, externally_defined_package, or
library_defined_package as the 'package preparation'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>Each three-dimensional shape representation of the library_defined_package shall have exactly one 
geometric_representation_item that is an axis2_placement_3d and that 
axis2_placement_3d shall define the location and orientation of the
seating plane in that representation.  The normal of the seating plane
in that representation shall be congruent with and the same direction as the Z axis of the
axis2_placement_3d.  The plane of the seating plane in that representation shall be congruent
with the plane established by the X and Y axes of the axis2_placement_3d.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2645"
></A
>5.2.3.1.202 library_defined_packaged_connector</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A library_defined_packaged_connector is a library_defined_packaged_part that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Packaged_connector</SPAN
>
in conjunction with  <SPAN
CLASS="INTERNALREF"
>Library_item</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_packaged_connector
 SUBTYPE OF (library_defined_packaged_part);
END_ENTITY; -- library_defined_packaged_connector
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>There shall be at least one shape_aspect that is a 
packaged_connector_terminal_relationship for the library_defined_packaged_part.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2654"
></A
>5.2.3.1.203 library_defined_packaged_part</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A library_defined_packaged_part is a library_defined_physical_unit that
implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Altered_packaged_part</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Packaged_part</SPAN
>
in conjunction with  <SPAN
CLASS="INTERNALREF"
>Library_item</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_packaged_part
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 2))) = 0);
  WR2: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1);
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (ifu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN
       TYPEOF (ifu.relating_product_definition)) AND
       (ifu.relating_product_definition.frame_of_reference.name =
       'functional design usage'))) = 1);
  WR4: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (upkg &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'used package') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE' IN
       TYPEOF (upkg.related_product_definition))) = 1);
  WR5: (NOT (SELF\product_definition.description = 'altered packaged part')) OR
       (SIZEOF (QUERY (bpp &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'base packaged part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] * 
       TYPEOF (bpp.relating_product_definition)) = 1) AND
       (bpp.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) &#62;= 1);
  WR6: (NOT (SELF\product_definition.description = 'altered packaged part')) OR
       (SIZEOF (QUERY (upkg &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'used package') |
       SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] * 
       TYPEOF (upkg.relating_product_definition)) = 1)) &#62;= 1);
END_ENTITY; -- library_defined_packaged_part
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the library_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall have at least one shape_aspect that is a
packaged_part_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the library_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall have exactly one material_designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the library_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall be related to exactly one functional_unit
with a frame_of_reference name of 'functional design usage' as the
'implemented function'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the library_defined_packaged_part has a frame_of_reference name of
'physical design usage', it shall relate to exactly one package to specify the
'used package'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the library_defined_packaged_part has a description of 'altered
packaged part', it shall be related to at least one packaged_part,
externally_defined_packaged_part, or library_defined_packaged_part with a
frame_of_reference name of 'physical design usage' as the 'base packaged
part'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the library_defined_packaged_part has a description of 'altered
packaged part', it shall be related to at least one package, 
externally_defined_package, or library_defined_package as the 'used package'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2669"
></A
>5.2.3.1.204 library_defined_physical_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A library_defined_physical_unit is an externally_defined_physical_unit that
implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Library_ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_unit</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_unit_usage_view</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_physical_unit
 SUPERTYPE OF (ONEOF (library_defined_package,
                      library_defined_assembly_definition,
                      library_defined_interconnect_definition,
                      library_defined_packaged_part, 
                      library_defined_bare_die))
 SUBTYPE OF (externally_defined_physical_unit);
DERIVE
  library : external_source := SELF\externally_defined_item.source;
END_ENTITY; -- library_defined_physical_unit
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2687"
></A
>5.2.3.1.205 library_defined_product_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A library_defined_product_definition is an externally_defined_product_definition
that implements the ARM concept of: <SPAN
CLASS="INTERNALREF"
>Library_defined_ee_product_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY library_defined_product_definition
 SUBTYPE OF (externally_defined_product_definition);
DERIVE
  library : external_source := SELF\externally_defined_item.source;
END_ENTITY; -- library_defined_product_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2693"
></A
>5.2.3.1.206 linear_array_component_definition_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A linear_array_component_definition_link is a product_definition and a product_definition_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Linear_array_placement_group_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY linear_array_component_definition_link
  SUBTYPE OF (product_definition,product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :&#60;&#62;:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\linear_array_component_definition_link)) = 0;
  WR5: SELF\product_definition.name = '';
  WR6: SELF\product_definition_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) = 1;
END_ENTITY; -- linear_array_component_definition_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The linear_array_component_definition_link shall relate to only a linear_array_placement_group_component_definition in the related_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The linear_array_component_definition_link shall relate to only a linear_array_placement_group_component_definition in the relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of linear_array_component_definition_link shall be only linear_array_component_definition_link, product_definition, and product_definition_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the product_definition supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the product_definition_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each linear_array_component_definition_link shall be referenced exactly once by a product_definition_relationship related_product_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2707"
></A
>5.2.3.1.207 linear_array_component_shape_aspect_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A linear_array_component_shape_aspect_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Linear_array_placement_group_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY linear_array_component_shape_aspect_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\linear_array_component_shape_aspect_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) = 1;
END_ENTITY; -- linear_array_component_shape_aspect_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The linear_array_component_shape_aspect_link shall relate to only a linear_array_placement_group_component_shape_aspect in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The linear_array_component_shape_aspect_link shall relate to only a linear_array_placement_group_component_shape_aspect in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of linear_array_component_shape_aspect_link shall be only linear_array_component_shape_aspect_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each linear_array_component_shape_aspect_link shall be referenced exactly once by a shape_aspect_relationship related_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2721"
></A
>5.2.3.1.208 linear_array_placement_group_component_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An linear_array_placement_group_component_definition is a array_placement_group_component_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Linear_array_placement_group</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY linear_array_placement_group_component_definition
  SUBTYPE OF (array_placement_group_component_definition);
END_ENTITY; -- linear_array_placement_group_component_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2727"
></A
>5.2.3.1.209 linear_array_placement_group_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An linear_array_placement_group_component_shape_aspect is a array_placement_group_component_shape_aspect that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Linear_array_placement_group</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY linear_array_placement_group_component_shape_aspect
  SUBTYPE OF (array_placement_group_component_shape_aspect);
END_ENTITY; -- linear_array_placement_group_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2733"
></A
>5.2.3.1.210 linear_composite_array_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A linear_composite_array_shape_aspect is a composite_shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Part_linear_array_feature</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY linear_composite_array_shape_aspect
  SUBTYPE OF (composite_array_shape_aspect);
END_ENTITY; -- linear_composite_array_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2739"
></A
>5.2.3.1.211 linear_composite_array_shape_aspect_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A linear_composite_array_shape_aspect_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Part_linear_array_feature_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY linear_composite_array_shape_aspect_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_COMPOSITE_ARRAY_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_COMPOSITE_ARRAY_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\linear_composite_array_shape_aspect_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) = 1;
END_ENTITY; -- linear_composite_array_shape_aspect_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The linear_composite_array_shape_aspect_link shall relate to only a linear_composite_array_shape_aspect_shape_aspect in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The linear_composite_array_shape_aspect_link shall relate to only a linear_composite_array_shape_aspect_shape_aspect in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of linear_composite_array_shape_aspect_link shall be only linear_composite_array_shape_aspect_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Each linear_composite_array_shape_aspect_link shall be referenced exactly once by a shape_aspect_relationship related_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2753"
></A
>5.2.3.1.212 linear_profile_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A linear_profile_tolerance is a physical_unit_geometric_tolerance that 
implements the ARM concept of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_linear_profile_locating_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_linear_profile_refinement_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_line_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_line_tolerance_with_referenced_datum_system</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_line_tolerance_without_referenced_datum_system</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY linear_profile_tolerance
  SUBTYPE OF (physical_unit_geometric_tolerance);
WHERE
  WR1: ( NOT( SELF\geometric_tolerance.name = 
        'linear profile refinement')) OR
       ( SIZEOF (QUERY( gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
        TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control')
       AND ((gtr.relating_geometric_tolerance\geometric_tolerance.name = 
       'linear profile locating')
       OR (gtr.relating_geometric_tolerance\geometric_tolerance.name = 
       'linear profile refinement')))
       )) = 1);
  WR2: ( NOT(SELF\geometric_tolerance.name = 'linear profile locating')) OR
       ( SIZEOF( QUERY( gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
       TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr.relating_geometric_tolerance\geometric_tolerance.name = 
       'linear profile refinement'))
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control'))) = 1);
  WR3: ( NOT( ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM' IN TYPEOF(SELF))
       AND ( SELF\geometric_tolerance.name = 
       'linear profile refinement'))) OR
       ( SIZEOF( QUERY( gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
       TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr.relating_geometric_tolerance\geometric_tolerance.name = 
      'linear profile refinement')
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control')
       )) = 0);
  WR4: ( NOT( SELF\geometric_tolerance.name = 
       'linear profile refinement')) OR
       ( SIZEOF (QUERY( gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
       TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr.related_geometric_tolerance\geometric_tolerance.name = 
       'linear profile refinement')
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control'))
       )) &#60;= 1);
  WR5: NOT('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF));
END_ENTITY; -- linear_profile_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement', it shall be related as 
the 'linear profile refining control' to exactly one linear_profile_tolerance with a name of either 
'linear profile locating' or 'linear profile refinement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile locating', it shall relate to exactly 
one linear_profile_tolerance with a name of 'linear profile refinement' to specify the 'linear 
profile refining control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the linear_profile_tolerance is not a geometric_tolerance_with_specified_datum_system and has a 
name of 'linear profile refinement', it shall relate to exactly zero linear_profile_tolerance with 
a name of 'linear profile refinement' to specify the 'linear profile refining control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement', it shall relate to at 
most one linear_profile_tolerance with a name of 'linear profile refinement' to specify the 'linear 
profile refining control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The linear_profile_tolerance shall not be a modified_geometric_tolerance.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If linear_profile_tolerance is a geometric_tolerance_with_specified_datum_system it shall have a 
name of either 'linear profile', 'linear profile refinement', or 'linear profile locating'; 
otherwise, it shall have the name of either 'linear profile' or 'linear profile refinement.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement', it shall be related as 
the 'linear profile refining control' to exactly one linear_profile_tolerance with a name of either 
'linear profile locating' or 'linear profile refinement'. Both of these linear_profile_tolerances 
shall specify the same shape_aspect as the toleranced_shape_aspect.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement' and it is related as the 
'linear profile refining control' to exactly one linear_profile_tolerance with a name of 'linear 
profile refinement', it shall either not reference a datum_system or it shall have less 
physical_unit_datum in its referenced datum_system than the datum_system referenced by the 
linear_profile_tolerance to which it is related as the 'linear profile refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement' and it is related as the 
'linear profile refining control' to exactly one linear_profile_tolerance with a name of 'linear 
profile locating', it shall either not reference a datum_system or it shall have less than or an 
equal number of physical_unit_datum in its referenced datum_system than the datum_system referenced 
by the linear_profile_tolerance to which it is related as the 'linear profile refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP5: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement' and it is a 
geometric_tolerance_with_specified_datum_system, the physical_unit_datum of its referenced 
datum_system shall be physical_unit_datum of the datum_system of the linear_profile_tolerance to 
which it is related as the 'linear profile refining control' and shall be assigned the same 
precedence.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP6: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement' and it is a 
geometric_tolerance_with_specified_datum_system that relates to a property_definition of a datum_system that 
has the description of 'datum system property without material conditions' to specify its 
'referenced datum system definition', the linear_profile_tolerance to which it is related as the 
'linear profile refining control' shall also be a geometric_tolerance_with_specified_datum_system 
that relates to a property_definition of a datum_system that has the description of 'datum system property 
without material conditions' to specify its 'referenced datum system definition'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP7: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement' and it is a 
geometric_tolerance_with_specified_datum_system that relates to a property_definition of a datum_system that 
has the description of 'datum system property with material conditions' to specify its 'referenced 
datum system definition', the linear_profile_tolerance to which it is related as the 'linear 
profile refining control' shall also be a geometric_tolerance_with_specified_datum_system that 
relates to a property_definition of a datum_system that has the description of 'datum system property with 
material conditions' to specify its 'referenced datum system definition', and each of these 
property_definition shall relate to property_definition with a description of 'datum feature material condition 
property' to specify their 'applied material condition property'. These property_definition shall be applied 
to physical_unit_datum_features in the context of the datum_systems referenced by each of the 
linear_profile_tolerance. The name of the property_definition applied to each of the 
physical_unit_datum_feature in the context of the datum_system referenced by this 
linear_profile_tolerance shall be the same as the name of the property_definition applied to the same 
physical_unit_datum_feature in the context of the datum_system referenced by the 
linear_profile_tolerance to which this linear_profile_tolerance is related as the 'linear profile 
refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP8: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement', it shall specify a 
measure_with_unit as its magnitude that is less than the measure_with_unit specified as the 
magnitude of the linear_profile_tolerance to which it is related as the 'linear profile refining 
control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP9: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement', there shall exist a 
property_definition that has a description of 'true profile' that is related as the 'basic profile' to a 
property_definition of the tolerance_zone_boundary of this linear_profile_tolerance and to a property_definition of the 
tolerance_zone_boundary of the linear_profile_tolerance that this linear_profile_tolerance is 
related to as the 'linear profile refining control', and these property_definition shall have the description 
of 'boundary zone definition with specified size' and a name of either 'profile boundary' or 
'profile boundary with offsets'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP10: </SPAN
>If the linear_profile_tolerance has a name of 'linear profile refinement' and its tolerance_zone 
has a property_definition that has a description of 'tolerance zone orientation' that relates to a property_definition 
with a description of 'viewing plane based orientation' to specify the 'zone orientation', it shall 
be related to a linear_profile_tolerance as the 'linear profile refining control' the 
tolerance_zone of which has a property_definition that has a description of 'tolerance zone orientation' that 
relates to the same property_definition with a description of 'viewing plane based orientation' to specify its 
'zone orientation'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP11: </SPAN
>The toleranced_shape_aspect of the linear_profile_tolerance shall either be a 
part_template_definition, lie on the boundary of the shape of the product, or be 
a composite_shape_aspect the 'composing' shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP12: </SPAN
>The tolerance_zone_boundary of the linear_profile_tolerance shall have a property_definition with a 
description of 'boundary zone definition with specified size' and a name of either 'profile 
boundary' or 'profile boundary with offsets'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP13: </SPAN
>If the linear_profile_tolerance is not a geometric_tolerance_with_specified_datum_system, its 
tolerance_zone shall have a property_definition that has a description of 'tolerance zone orientation' that 
relates to a property_definition with a description of 'viewing plane based orientation' to specify the 'zone 
orientation'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2789"
></A
>5.2.3.1.213 luminous_flux_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An luminous_flux_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Luminous_flux_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY luminous_flux_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\luminous_flux_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = lumen;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- luminous_flux_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The luminous_flux_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The luminous_flux_measure_with_unit shall reference an si_unit with a name of lumen.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2799"
></A
>5.2.3.1.214 magnetic_flux_density_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A magnetic_flux_density_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Magnetic_flux_density_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY magnetic_flux_density_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\magnetic_flux_density_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = tesla;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- magnetic_flux_density_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The magnetic_flux_density_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The magnetic_flux_density_measure_with_unit shall reference an si_unit with a name of tesla.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2809"
></A
>5.2.3.1.215 magnetic_flux_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A magnetic_flux_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Magnetic_flux_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY magnetic_flux_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\magnetic_flux_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = weber;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- magnetic_flux_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The magnetic_flux_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The magnetic_flux_measure_with_unit shall reference an si_unit with a name of weber.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2819"
></A
>5.2.3.1.216 make_from_connectivity_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A make_from_connectivity_relationship is a shape_aspect_relationship that
implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Physical_connectivity_make_from_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY make_from_connectivity_relationship
 SUBTYPE OF (shape_aspect_relationship);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION'
       IN TYPEOF (SELF.relating_shape_aspect);
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION'
       IN TYPEOF (SELF.related_shape_aspect);
END_ENTITY; -- make_from_connectivity_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_connectivity_relationship shall have a relating_shape_aspect 
that references a physical_connectivity_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The make_from_connectivity_relationship shall have a related_shape_aspect 
that references a physical_connectivity_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2828"
></A
>5.2.3.1.217 make_from_feature_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A make_from_feature_relationship is a shape_aspect_relationship that implements
the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Component_feature_make_from_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY make_from_feature_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (SELF.relating_shape_aspect)) = 1;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (SELF.related_shape_aspect)) = 1;
  WR3: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.relating_shape_aspect))) OR
       (SELF.relating_shape_aspect\shape_aspect.description IN ['component feature',
       'component termination passage interface terminal', 
       'land or non functional land interface terminal',  
       'printed connector component interface terminal']);
  WR4: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.related_shape_aspect))) OR
       (SELF.related_shape_aspect\shape_aspect.description IN ['component feature',
       'component termination passage interface terminal', 
       'land or non functional land interface terminal',  
       'printed connector component interface terminal']);
END_ENTITY; -- make_from_feature_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_feature_relationship shall have a relating_shape_aspect
that is a component_definition, component_interface_terminal, or 
component_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The make_from_feature_relationship shall have a related_shape_aspect
that is a component_definition, component_interface_terminal, or 
component_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the make_from_feature_relationship has a relating_shape_aspect of
type component_shape_aspect, the description shall be either 'component
feature', 'component termination passage interface terminal', 'land or non
functional land interface terminal', or 'printed connector component interface
terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the make_from_feature_relationship has a related_shape_aspect of
type component_shape_aspect, the description shall be either 'component
feature', 'component termination passage interface terminal', 'land or non
functional land interface terminal', or 'printed connector component interface
terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2839"
></A
>5.2.3.1.218 make_from_functional_unit_terminal_definition_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A make_from_functional_unit_terminal_definition_relationship is a shape_aspect and shape_aspect_relationship that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Functional_unit_terminal_definition_make_from_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY make_from_functional_unit_terminal_definition_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.relating_shape_aspect, 
       SELF\shape_aspect_relationship.related_shape_aspect;
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION'] *
       TYPEOF (SELF.relating_shape_aspect)) = 1;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION'] *
       TYPEOF (SELF.related_shape_aspect)) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
    SELF\make_from_functional_unit_terminal_definition_relationship)) = 0;
  WR4: relating_shape_aspect.of_shape :&#60;&#62;: 
       related_shape_aspect.of_shape;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect.description = '';
  WR7: SELF\shape_aspect.product_definitional = FALSE;
  WR8: SIZEOF (USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION')) = 0;
  WR9: SIZEOF (QUERY( sar &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_MAKE_FROM_RELATIONSHIP') IN TYPEOF
       (sar.of_shape\property_definition.definition))
       )) = 1;


END_ENTITY; -- make_from_functional_unit_terminal_definition_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shall have a relating_shape_aspect and related_shape_aspect combination that is unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shall have a relating_shape_aspect
that is a functional_unit_terminal_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shall have a related_shape_aspect
that is a functional_unit_terminal_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shall not be a complex instance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The make_from_functional_unit_terminal_definition_relationship relating_shape_aspect and
related_shape_aspect shall not reference the same product_definition_shape.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shape_aspect supertype name shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shape_aspect supertype description shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shall not be product definitional.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shall not be referenced by a property_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The make_from_functional_unit_terminal_definition_relationship shall be related to one design_make_from_relationship.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2858"
></A
>5.2.3.1.219 make_from_model_port_relationship</H4
>A make_from_model_port_relationship is a representation and a representation_relationship that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Analytical_model_port_make_from_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY make_from_model_port_relationship
 SUBTYPE OF (representation, representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, 
       SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL_PORT'] *
       TYPEOF (SELF.rep_1)) = 1;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL_PORT'] *
       TYPEOF (SELF.rep_2)) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\representation_relationship ||
       SELF\make_from_model_port_relationship)) = 0;
  WR4: rep_1 :&#60;&#62;: rep_2;
  WR5: SIZEOF(QUERY( rr1 &#60;* USEDIN(SELF.rep_1,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
        (SIZEOF(QUERY(rr2 &#60;* USEDIN(SELF.rep_2,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
        (rr1.rep_1 :=: rr2.rep_1)
        )) = 0))) = 1;
  WR6: SIZEOF (QUERY( rr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL_MAKE_FROM_RELATIONSHIP') IN TYPEOF (rr.rep_1))
       )) = 1; 
       
END_ENTITY; -- make_from_model_port_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_model_port_relationship shall have a unique combination of rep_1 and rep_2.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_model_port_relationship shall have a rep_1 that is an analytical_model_port.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The make_from_model_port_relationship shall have a rep_2 that is an analytical_model_port.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The make_from_model_port_relationship shall not be a complex instance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The make_from_model_port_relationship shall not reference the same port.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The make_from_model_port_relationship shall not reference the same analytical_model.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The make_from_model_port_relationship shall be related to one analytical_model_make_from_relationship.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2873"
></A
>5.2.3.1.220 make_from_part_feature_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A make_from_part_feature_relationship is a shape_aspect and a shape_aspect_relationship that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Part_feature_make_from_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY make_from_part_feature_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.relating_shape_aspect, 
       SELF\shape_aspect_relationship.related_shape_aspect;
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (SELF.relating_shape_aspect)) = 0;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (SELF.related_shape_aspect)) = 0;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\make_from_part_feature_relationship)) = 0;
  WR4: SELF.related_shape_aspect.product_definitional = TRUE;
  WR5: SELF.relating_shape_aspect.product_definitional = TRUE;
  WR6: SELF\shape_aspect.name = '';
  WR7: SELF\shape_aspect.description = '';
  WR8: SELF\shape_aspect.product_definitional = FALSE;
  WR9: SIZEOF (USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION')) = 0;
 WR10: SIZEOF (QUERY( sar &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESIGN_MAKE_FROM_RELATIONSHIP') IN TYPEOF
       (sar.of_shape\property_definition.definition))
       )) = 1;
END_ENTITY; -- make_from_part_feature_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_model_port_relationship shall have a unique combination of related_shape_aspect and relating_shape_aspect.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The make_from_part_feature_relationship shall have a relating_shape_aspect that is not a Non_feature_shape_element and that is not a Component_feature.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The make_from_part_feature_relationship shall have a related_shape_aspect that is not a Non_feature_shape_element and that is not a Component_feature.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The make_from_part_feature_relationship shall not be a complex instance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The make_from_part_feature_relationship related_shape_aspect shall be on the boundary of the part or template. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The make_from_part_feature_relationship relating_shape_aspect shall be on the boundary of the part or template. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The make_from_part_feature_relationship shall have a name inherited from the shape_aspect that is blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The make_from_part_feature_relationship shall have a description inherited from the shape_aspect that is blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The make_from_part_feature_relationship shall not be on the boundary of the part or template. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The make_from_part_feature_relationship shall not be referenced by a property_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The make_from_part_feature_relationship shall be related to exactly one design_make_from_relationship.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2893"
></A
>5.2.3.1.221 manifold_constraining_context_dependent_shape_representation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A manifold_constraining_context_dependent_shape_representation is a context_dependent_shape_representation
and a representation_relationship
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>An_unknown_arm_type</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY manifold_constraining_context_dependent_shape_representation
  SUBTYPE OF (context_dependent_shape_representation, representation_relationship);
END_ENTITY; -- manifold_constraining_context_dependent_shape_representation 
(* </PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2899"
></A
>5.2.3.1.222 material_electrical_conductivity_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A material_electrical_conductivity_category is a group that specifies
the attribute electrical_conductivity_characteristic for the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Material_electrical_conductivity_requirement_occurrence</SPAN
>
and the electrical conductivity_characteristic for the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Material_electrical_conductivity_requirement_occurrence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY material_electrical_conductivity_category
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN ['conductive', 'non conductive', 'resistive',  
       'semi conductive'];
END_ENTITY; -- material_electrical_conductivity_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The material_electrical_conductivity_category shall have a name of
'conductive', 'non conductive', 'resistive', or 'semi conductive'</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2908"
></A
>5.2.3.1.223 material_functional_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A material_functional_category is a group that specifies
the role of material for the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Marking</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_part</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Part_device</SPAN
></LI
></UL
></DIV
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY material_functional_category
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN 
     ['bonding agent', 'potting compound', 'marking material'];
END_ENTITY; -- material_functional_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The material_functional_category shall have a name of
'bonding agent', 'potting compound', or 'marking material'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2922"
></A
>5.2.3.1.224 material_optical_conductivity_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A material_optical_conductivity_category is a group that specifies
the optical conductivity characteristic for the ARM
concept
of  <SPAN
CLASS="INTERNALREF"
>Ee_material</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY material_optical_conductivity_category
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN ['conductive', 'non conductive', 'resistive',  
       'semi conductive'];
END_ENTITY; -- material_optical_conductivity_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The material_optical_conductivity_category shall have a name of
'conductive', 'non conductive', 'resistive', or 'semi conductive'</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2930"
></A
>5.2.3.1.225 material_removal_component_shape_aspect</H4
>A material_removal_component_shape_aspect is a component_shape_aspect that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Material_removal_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY material_removal_component_shape_aspect
  SUBTYPE OF (component_shape_aspect);
END_ENTITY; -- material_removal_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2935"
></A
>5.2.3.1.226 material_thermal_conductivity_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A material_thermal_conductivity_category is a group that specifies
the thermal conductivity characteristic for the ARM
concept
of  <SPAN
CLASS="INTERNALREF"
>Ee_material</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY material_thermal_conductivity_category
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN ['conductive', 'non conductive', 'resistive',  
       'semi conductive'];
END_ENTITY; -- material_thermal_conductivity_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The material_thermal_conductivity_category shall have a name of
'conductive', 'non conductive', 'resistive', or 'semi conductive'</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2943"
></A
>5.2.3.1.227 minimally_defined_bare_die_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A minimally_defined_bare_die_terminal is a shape_aspect that implements the ARM
concepts of  <SPAN
CLASS="INTERNALREF"
>Guided_wave_bare_die_terminal</SPAN
>
or  <SPAN
CLASS="INTERNALREF"
>Minimally_defined_bare_die_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY minimally_defined_bare_die_terminal
  SUPERTYPE OF (bare_die_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE' IN 
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (eca &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'external connection area') |
       eca.related_shape_aspect\shape_aspect.description = 'connection zone')) &#60;= 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) &#60;= 1;
  WR4: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) &#60;= 1;
END_ENTITY; -- minimally_defined_bare_die_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The minimally_defined_bare_die_terminal shall be a terminal of a bare_die.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The minimally_defined_bare_die_terminal shall relate to at most one
shape_aspect that has a description of 'connection zone' as the
'external connection area'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The minimally_defined_bare_die_terminal shall have at most one material
designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The minimally_defined_bare_die_terminal shall be related to at most one 
part_connected_terminals_definition as a 'member connected terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2955"
></A
>5.2.3.1.228 model_parameter</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A model_parameter is a representation_item that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Model_parameter</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY model_parameter 
 SUBTYPE OF (representation_item);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
  WR2: SIZEOF (QUERY (cri &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COORDINATED_REPRESENTATION_ITEM' IN TYPEOF(cri)) AND 
       (cri\representation.name = 
       'model parameter with valid range value'))) &#60;= 1;
  WR3: SIZEOF (QUERY (aga &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PARAMETER_TYPE' IN 
       TYPEOF (aga.assigned_group)) AND
       (aga.assigned_group\group.name IN ['string property type', 
       'logical property type', 'physical property type', 
       'boolean property type']))) = 1;
END_ENTITY; -- model_parameter
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The model_parameter shall be referenced by exactly one document.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The model_parameter shall be an item in at most one 
coordinated_representation_item that has a representation name of 
'model parameter with valid range value'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The model_parameter shall be assigned to exactly one parameter_type with
a name of 'string property type', 'logical property type', 'physical property
type', or 'boolean property type'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2965"
></A
>5.2.3.1.229 mounting_restriction_area</H4
>A mounting_restriction_area is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Mounting_restriction_area</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY mounting_restriction_area
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
  WR2: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN TYPEOF (SELF.of_shape.definition));

  WR3: SELF.of_shape.definition.frame_of_reference.name IN ['physical design'];

  WR4: SELF.of_shape.definition\product_definition.name = 'assembly module';

  WR5: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CSG_2D_SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)))) = 1))) = 0;
  WR6: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'mounting surface') AND 
       (sar.related_shape_aspect\shape_aspect.description =
       'interconnect module component surface feature')))) = 1;
  WR7: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\shape_aspect ||
       SELF\mounting_restriction_area))) = 0;

END_ENTITY; -- mounting_restriction_area
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name of the physical_unit shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The mounting_restriction_area shall be an aspect of the shape of a physical_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The mounting_restriction_area shall be an aspect of a product_definition that is in the physical design context.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The mounting_restriction_area shall be an aspect of the shape of an assembly module.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The mounting_restriction_area shall have exactly one shape_representation that shall be a csg_2d_shape_representation. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The mounting_restriction_area shall be related to exactly one component_shape_aspect with a description of 'interconnect module component surface feature' as the 'mounting surface'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The mounting_restriction_area shall not be any other type of shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2978"
></A
>5.2.3.1.230 mounting_restriction_volume</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A mounting_restriction_volume is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Mounting_restriction_volume</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY mounting_restriction_volume
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN TYPEOF (SELF.of_shape.definition));

  WR2: SELF.of_shape.definition.frame_of_reference.name IN ['physical design'];

  WR3: SELF.of_shape.definition.name = 'assembly module';

  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
        (pdr.used_representation\representation.context_of_items\
       geometric_representation_context.coordinate_space_dimension = 3)
       )) = 1))) = 0;

  WR5: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (sar.related_shape_aspect)) AND
       (sar\shape_aspect_relationship.name = 'mounting surface') AND 
       (sar.related_shape_aspect\shape_aspect.description =
       'interconnect module component surface feature'))) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\shape_aspect ||
       SELF\mounting_restriction_volume))) = 0;
END_ENTITY; -- mounting_restriction_volume
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The mounting_restriction_volume shall be an aspect of the shape of a physical_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The mounting_restriction_volume shall be an aspect of a product_definition that is in the physical design context.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The mounting_restriction_volume shall be an aspect of the shape of an assembly module.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The mounting_restriction_volume shall have exactly one shape_representation that shall be a 3 dimensional shape representation. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The mounting_restriction_volume shall be related to exactly one component_shape_aspect with 
a description of 'interconnect module component surface feature' as the 'mounting surface'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The mounting_restriction_volume shall not be any other type of shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2991"
></A
>5.2.3.1.231 multi_layer_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A multi_layer_component_shape_aspect is a component_shape_aspect that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Multi_layer_stratum_feature_template_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY multi_layer_component_shape_aspect
  SUBTYPE OF (component_shape_aspect);
END_ENTITY; -- multi_layer_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="2997"
></A
>5.2.3.1.232 multi_layer_material_removal_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A multi_layer_material_removal_component_shape_aspect is a material_removal_component_shape_aspect
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Multi_layer_material_removal_laminate_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY multi_layer_material_removal_component_shape_aspect
  SUBTYPE OF (material_removal_component_shape_aspect);
END_ENTITY; -- multi_layer_material_removal_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3003"
></A
>5.2.3.1.233 multi_layer_stratum_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A multi_layer_stratum_feature is a stratum_feature that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Multi_layer_stratum_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY multi_layer_stratum_feature
 SUBTYPE OF (stratum_feature);
END_ENTITY; -- multi_layer_stratum_feature
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3009"
></A
>5.2.3.1.234 network_node_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A network_node_definition is a product_definition that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Functional_unit_network_node_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY network_node_definition
  SUBTYPE OF (product_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'functional network design';
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (funtdna &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name =
       'functional unit network terminal definition node assignment') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_SHAPE' IN 
       TYPEOF (funtdna.related_property_definition)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN 
       TYPEOF 
       (funtdna.related_property_definition.definition)))) &#60;= 1)) &#60;= 1;
  WR3: SIZEOF (QUERY (funn &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (funn.relating_product_definition)) AND
       (funn.relating_product_definition.frame_of_reference.name =
       'functional network design'))) = 1;
END_ENTITY; -- network_node_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The network_node_definition shall have its context element with a name
of 'functional network design'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The network_node_definition shall have at most one property that relates
to at most one  product_definition_shape of a 
functional_unit_terminal_definition to specify the 
'functional unit network terminal definition node assignment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The network_node_definition shall be related to exactly one
functional_unit that has a context element with a name of 'functional network
design' as the 'functional unit network node'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>This is an IP for now, as it obviously uses arm constructs.  It will be converted to DERIVE and then
the electrical and thermal network structural validity can be exchanged based on
approval.  Probably need something like "valid structure".<DIV
CLASS="NOTE"
><P
></P
>NOTE: </DIV
>
   </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3022"
></A
>5.2.3.1.235 opposing_boundary_dimensional_size</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An opposing_boundary_dimensional_size is a dimensional_size that implements
the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Dimensional_size_based_on_opposing_boundaries</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY opposing_boundary_dimensional_size
  SUBTYPE OF (dimensional_size);
WHERE
    wr1: SELF\dimensional_size.name  IN ['angular', 'linear'];
END_ENTITY; -- opposing_boundary_dimensional_size
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name of the opposing_boundary_dimensional_size shall be either 'angular' or 'linear'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The opposing_boundary_dimensional_size applies_to a composite_unit_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3032"
></A
>5.2.3.1.236 owner_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An owner_assignment is an person_and_organization_assignment that specifies
a set of owner_assigned_item.  An item that is owned cannot be changed without the permission of the owner.<DIV
CLASS="EXAMPLE"
><P
></P
>EXAMPLE: A component position may be owned by the mechanical design department, in which case movement of the component
is to be negotiated with that department.</DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY owner_assignment 
 SUBTYPE OF (person_and_organization_assignment); 
 items : SET [1:?] OF owner_assigned_item; 
END_ENTITY; -- owner_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3038"
></A
>5.2.3.1.237 package</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A package is a physical_unit that implements the ARM concepts of  <SPAN
CLASS="INTERNALREF"
>Altered_package</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Package</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package
 SUBTYPE OF (physical_unit);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical design usage';
  -- WR2 deleleted
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY' IN 
       TYPEOF (sa))) = 1))) &#60;= 1;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 1))) &#62;= 1;
  WR5: (NOT (SELF\product_definition.description = 'altered package')) OR
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'package alteration') AND
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (pdr.relating_product_definition)) = 1))) = 1); 
  WR6: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 'package mounting data')) = 1))) = 1;

  WR7: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body height above seating plane')) = 1)
       )) = 1))) = 1;

  WR8: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body height below seating plane')) = 1)
       )) = 1))) &#60;= 1;

  WR9: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body clearance above seating plane')) = 1)
       )) = 1))) &#60;= 1;

  WR10: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body clearance below seating plane')) = 1)
       )) = 1))) &#60;= 1;

  WR11: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'minimum body clearance above seating plane')) = 1)
       )) = 1))) &#60;= 1;

  WR12: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'minimum body clearance below seating plane')) = 1)
       )) = 1))) &#60;= 1;

  WR13: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum lead length below seating plane')) = 1)
       )) = 1))) &#60;= 1;

  WR14: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item &#60;* USEDIN( pdr.used_representation,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'least lead length below seating plane')) = 1)
       )) = 1))) &#60;= 1;
  WR15: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT' IN TYPEOF(sa)) AND
       (SIZEOF (QUERY ( sar &#60;* USEDIN(sa,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
        ((sar\shape_aspect_relationship.name = 'package seating plane') AND
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SEATING_PLANE' IN TYPEOF(sar.related_shape_aspect))) )) = 1))
       )) = 1)
       )
       ) = 1;

  WR16: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SEATING_PLANE' IN
       TYPEOF (sa)))) = 1))) = 1;

  WR17: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT' IN TYPEOF(sa)) AND
       (SIZEOF (QUERY ( sar &#60;* USEDIN(sa,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
        ((sar\shape_aspect_relationship.name = 'of datum reference plane') AND
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DATUM_REFERENCE_FRAME' IN TYPEOF(sar.related_shape_aspect))) )) = 1))
       )) = 1)
       )
       ) &#60;= 1;
 WR18: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(sa))
       )) = 1)
       )
       ) &#60;= 1;
END_ENTITY; -- package
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The package shall have a frame_of_reference name of 'physical design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The package shall have at most one package_body.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The package shall have at least one package_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the package has a description of 'altered package', it shall be
related to exactly one package, externally_defined_package, or 
library_defined_package as the 'package alteration'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The package shall have exactly one representation with the name of 'package mounting data'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The package shall have one item in its representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'maximum body height above seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The package shall have no more than one item in the representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'maximum body height below seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The package shall have no more than one item in the representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'maximum body clearance above seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The package shall have no more than one item in the representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'maximum body clearance below seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The package shall have no more than one item in the representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'minimum body clearance above seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>The package shall have no more than one item in the representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'minimum body clearance below seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>The package shall have no more than one item in the representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'maximum lead length below seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>The package shall have no more than one item in the representation with the name of 'package mounting data' that shall be a length_measure_with_unit and that shall have a
name of 'least lead length below seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>The seating_plane for this package shall be related to a shape_aspect of this package through a shape_aspect_relationshipt with the name of 'package seating plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>The package shall have exactly one seating plane.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>The package shall have at most one datum_reference_frame.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>The package shall have at most one primary_reference_terminal.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>Each three-dimensional shape representation of the package shall have exactly two 
geometric_representation_item that are axis2_placement_3d and one
axis2_placement_3d shall define the location and orientation of the
seating plane in that representation.  The normal of the seating plane
in that representation shall be congruent with and the same direction as the Z axis of the 
axis2_placement_3d.  The plane of the seating plane in that representation shall be congruent
with the plane established by the X and Y axes of the axis2_placement_3d.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>Each two-dimensional shape representation of the package shall have exactly one
geometric_representation_item that is an axis2_placement_2d that shall define the
origin of the geometric model, and the location and orientation of the seating plane.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The package shall have no more than one representation with the name of 'material property data' that shall be related to cartesian_points with names of 'least material condition centroid location' and 'maximum material condition centroid location'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3067"
></A
>5.2.3.1.238 package_body</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A package_body is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Package_body</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package_body
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE']) = 1;
  WR2: SIZEOF (USEDIN (SELF, 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
END_ENTITY; -- package_body
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The package_body shall be the aspect of the shape of a package,
externally_defined_package, or library_defined_package.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The package_body shall have exactly one material_designation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3076"
></A
>5.2.3.1.239 package_body_bottom_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A package_body_bottom_surface is a package_body_surface that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Package_body_bottom_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package_body_bottom_surface
 SUBTYPE OF (package_body_surface);
END_ENTITY; -- package_body_bottom_surface
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3082"
></A
>5.2.3.1.240 package_body_edge_segment_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A package_body_edge_segment_surface is a shape_aspect and shape_aspect_relationship that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Package_body_edge_segment_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package_body_edge_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  wr1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  wr2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  wr3: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY_EDGE_SURFACE' IN TYPEOF
       (ce.relating_shape_aspect) ))) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\package_body_edge_segment_surface)) = 0;
END_ENTITY; -- package_body_edge_segment_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The package_body_edge_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The package_body_edge_segment_surface shall be related to exactly one
edge_segment_vertex through a shape_aspect_relationship relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The edge_segment_vertex instances referenced shall not be the same instance of edge_segment_vertex.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The package_body_edge_segment_surface shall be related to
exactly one package_body_edge_surface as the 'composed surface'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The package_body_edge_segment_surface shall not be in a complex instance other 
than with it's immediate supertypes. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3094"
></A
>5.2.3.1.241 package_body_edge_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A package_body_edge_surface is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Package_body_edge_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package_body_edge_surface
 SUBTYPE OF (package_body_surface);
WHERE
  WR1: SELF\shape_aspect.product_definitional;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\part_mounting_feature ||
       SELF\package_body_edge_surface ||
       SELF\package_body_surface)) = 0;
END_ENTITY; -- package_body_edge_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The package_body_edge_surface shall be on the boundary of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The package_body_edge_surface shall be no other subtype of shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3103"
></A
>5.2.3.1.242 package_body_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A package_body_surface is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Package_body_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package_body_surface
ABSTRACT SUPERTYPE OF (ONEOF(package_body_top_surface,
                         package_body_edge_surface,
                         package_body_bottom_surface))
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (TYPEOF(sar\shape_aspect_relationship.relating_shape_aspect) = 
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY']))) = 1;
END_ENTITY; -- package_body_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The package_body_surface shall be the aspect of the shape of a package,
externally_defined_package, or library_defined_package.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The package_body_surface shall be on the boundary of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The package_body_surface shall be related to exactly one package_body.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3113"
></A
>5.2.3.1.243 package_body_top_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A package_body_top_surface is a package_body_surface that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Package_body_top_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package_body_top_surface
 SUBTYPE OF (package_body_surface);
END_ENTITY; -- package_body_top_surface
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3119"
></A
>5.2.3.1.244 package_terminal</H4
>A package_terminal is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Altered_package_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Guided_wave_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Length_trimmed_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Package_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Shape_formed_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Surface_prepped_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Wire_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY package_terminal
 SUPERTYPE OF (((altered_package_terminal ANDOR guided_wave_terminal)
      ANDOR wire_terminal) ANDOR primary_reference_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) &#62;= 1))) = 0;
  WR2: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE']) = 1;
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |(
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION' IN TYPEOF (sar.relating_shape_aspect.of_shape.definition)) AND
       (sar\shape_aspect_relationship.name = 'terminal core material') AND
       (sar.relating_shape_aspect.of_shape.definition.
        frame_of_reference\application_context_element.name = 'material definition') 
       )) &#60;= 1;
  WR4: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |(
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION' IN TYPEOF (sar.relating_shape_aspect.of_shape.definition)) AND
       (sar\shape_aspect_relationship.name = 'terminal surface material') AND
       (sar.relating_shape_aspect.of_shape.definition.
        frame_of_reference\application_context_element.name = 'material definition') 
       )) = 1;
  WR5: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) &#60;= 1;
 WR6: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'external connection zone') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) &#62;= 0;
 WR7: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu &#60;* QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'maximum terminal diametrical extent')) 
        &#60;= 1)) &#60;= 1)) &#60;= 1;
 WR8: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu &#60;* QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'minimum terminal diametrical extent')) 
         &#60;= 1)) &#60;= 1)) &#60;= 1;
 WR9: SIZEOF(QUERY ( sar &#60;* USEDIN (SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       &#60;= 1;
 WR10: SIZEOF(QUERY ( sar &#60;* USEDIN (SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       &#60;= 1;
 WR11: SIZEOF (QUERY (eca &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'seating plane zone') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONNECTION_ZONE_INTERFACE_PLANE_RELATIONSHIP' IN
       TYPEOF (eca.related_shape_aspect))) &#60;= 1;
END_ENTITY; -- package_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The package_terminal shall have at least one shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The package_terminal shall be the aspect of the shape of a package,
externally_defined_package, or library_defined_package.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The package_terminal shall have no more than one shape_aspect_relationship with a name of 'terminal core material' that relates to a product_definition with a frame of reference of 'material definiton'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The package_terminal shall have no more than one shape_aspect_relationship with a name of 'terminal core material' that relates to a product_definition with a frame of reference of 'material definiton'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The package_terminal shall be related to at most one part_connected_terminals_definition as a 'member connected terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The package_terminal shall be related to zero or more shape_aspect with a description of 'connection zone' as the 'external connection zone'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The package_terminal shall have at most one property_definition that
has at most one representation that contains at most one
length_measure_with_unit with a name
of 'maximum terminal diametrical extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The package_terminal shall have at most one property_definition that
has at most one representation that contains at most one
length_measure_with_unit with a name
of 'minimum terminal diametrical extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The package_terminal shall be referenced by no more than one shape_aspect_relationship with a description of 'precedent feature' as the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The package_terminal shall be referenced by no more than one shape_aspect_relationship with a description of 'precedent feature' as the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>The package_terminal shall be related to no more than one connection_zone_interface_plane_relationship. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3150"
></A
>5.2.3.1.245 packaged_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A packaged_component is a component_definition that implements the ARM concepts
of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_connector_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Routed_packaged_component</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY packaged_component
  SUBTYPE OF (component_definition);
WHERE
  WR1: SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1;
  WR2: SIZEOF (QUERY (pa &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'package alternate') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE'] *
       TYPEOF (pa.relating_product_definition)) = 1) AND
       (pa.relating_product_definition\product_definition.description =
       'altered package'))) &#60;= 1;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'packaged component join terminal'))) &#62;= 1))) = 0;
  WR4: (NOT (SELF\product_definition.description = 'packaged connector component')) OR
       (SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (TRUE))) = 1);
  WR5: (NOT (SELF\product_definition.description = 'packaged connector component')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'packaged component join terminal'))) 
        &#62;= 1))) = 0);
  WR6: (NOT (SELF\product_definition.description = 'routed packaged component')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       SIZEOF (QUERY (pd &#60;* USEDIN (sa,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (USEDIN (pd, 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) 
       = 1)) = 1)) = 1))) = 0);
END_ENTITY; -- packaged_component
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The packaged_component shall be related, as the 'instantiated part',
to exactly one packaged_part, externally_defined_packaged_part, or
library_defined_packaged_part that is in the 'physical design usage'
product_definition_context.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The packaged_component shall be related, as the 'package alternate',
to at most one package, externally_defined_package, or
library_defined_package that has a description of 'altered package'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The packaged_component shall have at least one shape_aspect that is a
component_terminal with a description of 'packaged component join terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the packaged_component has description of 'packaged connector
component', the packaged_component shall be related, as the 'instantiated
part', to exactly one packaged_part, externally_defined_packaged_part, or
library_defined_packaged_part that is in the 'packaged connector'
product_definition_context.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the packaged_component has a description of 'packaged connector
component', it shall have at least one shape_aspect that is a 
component_interface_terminal with a description of 
'packaged component join terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the packaged_component has a description of 'routed packaged
component', it shall have exactly one shape_aspect that has exactly one
property_definition that is associated to exactly one representation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3169"
></A
>5.2.3.1.246 packaged_connector</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A packaged_connector is a packaged_part that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Packaged_connector</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY packaged_connector
  SUBTYPE OF (packaged_part);
WHERE
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN
       TYPEOF (sa)))) = 1))) &#62;= 1;

  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (SIZEOF (QUERY ( sar &#60;* USEDIN(sa,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        sar\shape_aspect_relationship.name = 'interface plane')) = 1)
       )) = 1)
       )
       ) &#60;= 1;

  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SEATING_PLANE' IN
       TYPEOF (sa)))) = 1))) &#60;= 1;

END_ENTITY; -- packaged_connector
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The packaged_connector shall have at least one shape_aspect that is a packaged_connector_terminal_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The packaged_connector shall have at most one shape_aspect that is a seating plane in the role of 'interface plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>No more than one seating plane shall reference this packaged_connector through the of_shape attribute.<DIV
CLASS="NOTE"
><P
></P
>NOTE: Normally the seating_plane that is related through the shape_aspect_relationshipt will also reference this packaged_connector.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3180"
></A
>5.2.3.1.247 packaged_connector_terminal_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A packaged_connector_terminal_relationship is a shape_aspect and a
shape_aspect_relationship that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Packaged_connector_terminal_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY packaged_connector_terminal_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: (SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART']) 
       = 1) AND
       (SELF.of_shape.definition\product_definition.description =
       'packaged connector');
  WR2: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect)) AND
       (SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description 
        = 'interface terminal'));
  WR3: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect)) AND
       (SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description 
        = 'join terminal'));
END_ENTITY; -- packaged_connector_terminal_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The packaged_connector_terminal_relationship shall be an aspect of the
shape of a packaged_part, externally_defined_packaged_part, or
library_defined_packaged_part with a description of 'packaged connector'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The packaged_connector_terminal_relationship shall have a relating_shape_aspect
that is a packaged_part_terminal with a description of 'interface terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The packaged_connector_terminal_relationship shall have a related_shape_aspect
that is a packaged_part_terminal with a description of 'join terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3190"
></A
>5.2.3.1.248 packaged_part</H4
>A packaged_part is a physical_unit that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Altered_packaged_part</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Packaged_part</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY packaged_part
 SUPERTYPE OF (packaged_connector)
 SUBTYPE OF (physical_unit);
WHERE 
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (sa))) &#62;= 0))) = 0;
  WR2: SIZEOF (USEDIN (SELF, 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) &#60;= 1;
  WR3: SIZEOF (QUERY (ifu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN
       TYPEOF (ifu.relating_product_definition)) AND
       (ifu.relating_product_definition.frame_of_reference.name =
       'functional design usage'))) &#60;= 1;
  WR4: NOT(EXISTS(SELF\product_definition.description)) OR
       ((NOT (SELF\product_definition.description = 'altered packaged part')) OR
       (SIZEOF (QUERY (bpp &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'base packaged part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] * 
       TYPEOF (bpp.relating_product_definition)) = 1) AND
       (bpp.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) &#62;= 1));
  WR5: SIZEOF (QUERY (upkg &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'used package') |
       SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (upkg.relating_product_definition)) = 1)) &#62;= 1;
  WR6: SELF.frame_of_reference.name = 'physical design usage';
END_ENTITY; -- packaged_part
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The packaged_part may have zero or more shape_aspect that is a packaged_part_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The packaged_part shall have no more than one material_designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The packaged_part shall be related to exactly one functional_unit with a 
frame_of_reference name of 'functional design usage' as the 
'implemented function'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the packaged_part has a description of 'altered packaged part', it
shall be related to at least one packaged_part, 
externally_defined_packaged_part, or library_defined_packaged_part with a 
frame_of_reference name of
'physical design usage' as the 'member connected terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The packaged_part shall be related to at least one package, externally_defined_package, or library_defined_package as the 'used package'.<DIV
CLASS="NOTE"
><P
></P
>NOTE: The global rule Packaged_part_unique_constraint ensures that all packages so referenced are for the same product_definition_formation.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3203"
></A
>5.2.3.1.249 packaged_part_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A packaged_part_terminal is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_part_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_part_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Packaged_part_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY packaged_part_terminal
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN ['interface terminal', 
       'join terminal'];
  WR2: (SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PACKAGED_PART']) 
       = 1) AND
  (SELF.of_shape.definition\product_definition.frame_of_reference.name = 
       'physical design usage');
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) &#62;= 1))) = 0;
  WR4: SIZEOF (QUERY (top &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'terminal of package') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_TERMINAL' IN
       TYPEOF (top.related_shape_aspect))) &#62;= 1;
  WR5: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) &#60;= 1;
  WR6: (NOT(SELF\shape_aspect.description = 'interface terminal')) OR
       (SIZEOF(QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN TYPEOF(sar))
       AND (sar.relating_shape_aspect\shape_aspect.description = 
       'join terminal'))) &#62;= 1);
  WR7: (NOT(SELF\shape_aspect.description = 'join terminal')) OR
       (SIZEOF(QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN TYPEOF(sar))
       AND (sar.relating_shape_aspect\shape_aspect.description = 
        'interface terminal'))) &#60;= 1);
END_ENTITY; -- packaged_part_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The packaged_part_terminal shall have a description of either 'interface
terminal' or 'join terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The packaged_part_terminal shall be an aspect of the shape of a
packaged_part, externally_defined_packaged_part, or 
library_defined_packaged_part that has a frame_of_reference name of 
'physical design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The packaged_part_terminal shall have a property that is represented by
at least one shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The packaged_part_terminal shall relate to at least one package_terminal
to specify the 'terminal of package'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The packaged_part_terminal shall be related to at most one 
part_connected_terminals_definition as a member connected terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the packaged_part_terminal has a description of 'interface terminal',
it shall be related to at least one packaged_part_terminal with a
description of 'join terminal' by a packaged_connector_terminal_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the packaged_part_terminal has a description of 'join terminal', it
shall be related to at most one packaged_part_terminal with a description of
'interface terminal' by a packaged_connector_terminal_relationship.</DIV
></DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: Part_connected_terminals_definition provides a capability to state that
multiple interface terminals are connected internally in the connector.</DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3224"
></A
>5.2.3.1.250 padstack_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A padstack_definition is a product_definition that implements the ARM concept <SPAN
CLASS="INTERNALREF"
>Padstack_definition</SPAN
> and its subtypes.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY padstack_definition
 SUPERTYPE OF (ONEOF( design_layer_type_specific_padstack_definition,
               stratum_occurrence_specific_padstack_definition,
               stratum_type_independent_padstack_definition))
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs &#60;* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) &#60;= 1);
  WR2: SIZEOF (QUERY (adta &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) &#62;= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\padstack_definition))) = 0;
  WR7: SELF.frame_of_reference.name IN ['layout design usage' ];
  WR9: SIZEOF (QUERY (prpc &#60;* USEDIN (SELF.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'template model')) = 1;
END_ENTITY; -- padstack_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the padstack_definition is a product_definition_with_associated_documents,
there shall be at most one document in the set of documentation_ids that has a
product_data_type of 'CAD filename'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The padstack_definition shall have exactly one creation date.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The padstack_definition shall have exactly one approval.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The padstack_definition shall have at least one organization or 
person_and_organization as the creator.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The padstack_definition shall have exactly one security_classification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The padstack_definition shall not be any other type of product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The padstack_definition shall have a frame_of_reference with a name of 'layout design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The padstack_definition shall be associated with a product that is a template model.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3239"
></A
>5.2.3.1.251 padstack_occurrence</H4
>A padstack_occurrence is an assembly_group_component_shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Padstack_occurrence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY padstack_occurrence
  SUBTYPE OF (assembly_group_component_shape_aspect);
END_ENTITY; -- padstack_occurrence
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3244"
></A
>5.2.3.1.252 padstack_occurrence_shape_aspect_relationship</H4
>A padstack_occurrence_shape_aspect_relationship is a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Padstack_occurrence_sub_assembly_relationship</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY padstack_occurrence_shape_aspect_relationship
  SUBTYPE OF (shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\padstack_occurrence_shape_aspect_relationship)) = 0;
  WR3: SELF\shape_aspect_relationship.name = 'padstack occurrence sub assembly relationship';
END_ENTITY; -- padstack_occurrence_shape_aspect_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related shape_aspect shall not be the relating shape_aspect. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The types of padstack_occurrence_shape_aspect_relationship shall be only padstack_occurrence_shape_aspect_relationship, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be 'padstack occurrence sub assembly relationship'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3253"
></A
>5.2.3.1.253 parallelism_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A parallelism_tolerance is a geometric_tolerance_with_specified_datum_source
that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Parallelism_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY parallelism_tolerance
  SUBTYPE OF (geometric_tolerance_with_specified_datum_system);
WHERE
  WR1: SELF\geometric_tolerance.name = 'parallelism';
END_ENTITY; -- parallelism_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name for the parallelism_tolerance shall be 'parallelism'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The toleranced_shape_aspect of the parallelism_tolerance shall either lie on the 
boundary of the shape of the product; be a centre_of_symmetry with a description of 
either 'axis' or 'plane'; be a tangent with a description of 'plane'; be a 
part_template_definition; or be a composite_shape_aspect the 'composing' shape_aspects 
of which either are all of type part_template_definition, are all of type 
centre_of_symmetry and have the same description -- either 'axis' or 'plane', or are 
all of type tangent with a description of 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The parallelism_tolerance shall have at most two physical_unit_datum in its referenced datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The parallelism_tolerance shall have at least one physical_unit_datum in its referenced 
datum_system that has description of either 'axis' or 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the toleranced_shape_aspect of the parallelism_tolerance is neither a 
centre_of_symmetry with a description of 'axis' nor a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'axis', the tolerance_zone_boundary shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3266"
></A
>5.2.3.1.254 parameter_assignment_representation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A parameter_assignment_representation is a representation that implements the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Parameter_assignment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY parameter_assignment_representation
  SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (SELF.items) = 2;
  WR2: SIZEOF (QUERY (it &#60;* SELF.items |
       (SIZEOF (TYPEOF (it) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MODEL_PARAMETER']) 
       = 1))) = 1;
  WR3: SIZEOF (QUERY (it &#60;* SELF.items |
       (SIZEOF (TYPEOF (it) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COORDINATED_REPRESENTATION_ITEM']) 
       = 1))) &#60;= 1;
  WR4: SIZEOF (QUERY (it &#60;* SELF.items |
        (SIZEOF (QUERY(aga &#60;* USEDIN (it,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
             (SIZEOF (TYPEOF ( aga\group_assignment.assigned_group) *
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CHARACTERISTIC_TYPE']) = 1))) 
       = 1))) &#60;= 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\parameter_assignment_representation)) = 0; 
END_ENTITY; -- parameter_assignment_representation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The parameter_assignment_representation shall have exactly two
representation_items.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The parameter_assignment_representation shall have exactly one item that is a model_parameter.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The parameter_assignment_representation shall have no more than one item that is a coordinated_characteristic.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The parameter_assignment_representation shall have no more than one item that is a characteristic.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The parameter_assignment_representation shall not be any other type other than a representation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3278"
></A
>5.2.3.1.255 parameter_type</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A parameter_type is a group that specifies a boolean_property_type, a
logical_property_type, a physical_property_type or a string_property_type
for a model_parameter.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY parameter_type
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN ['string property type','logical property type',
       'physical property type','boolean property type'];
END_ENTITY; -- parameter_type
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>A parameter_type shall have a name that is 'string property type', 'logical
property type', 'physical property type', or 'boolean property type'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3285"
></A
>5.2.3.1.256 part_connected_terminals_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A part_connected_terminals_definition is a shape_aspect that implements the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Part_connected_terminals_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY part_connected_terminals_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_MODULE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'BARE_DIE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'INTERCONNECT_MODULE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGED_PART_TERMINAL'] *
       TYPEOF (mct.related_shape_aspect)) = 1)) &#62;= 2;
END_ENTITY; -- part_connected_terminals_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The part_connected_terminals_definition shall relate to at least two instances of
assembly_module_terminal, bare_die_terminal, interconnect_module_terminal,
package_terminal, or packaged_part_terminal to specify a 'member connected
terminal'.</DIV
></DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>Each terminal related by this part_connected_terminals_definition shall be a
terminal of the same product version.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3298"
></A
>5.2.3.1.257 part_interface_access_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A part_interface_access_feature is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Part_interface_access_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY part_interface_access_feature
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'interface_access area') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1;
END_ENTITY; -- part_interface_access_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The part_interface_access_feature shall be related as the 'interface_access area' 
to exactly one shape_aspect with a description of 'connection zone'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3306"
></A
>5.2.3.1.258 part_mating_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A part_mating_feature is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Part_mating_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY part_mating_feature
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'mating area') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1;
END_ENTITY; -- part_mating_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The part_mating_feature shall be related as the 'mating area' 
to exactly one shape_aspect with a description of 'connection zone'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3314"
></A
>5.2.3.1.259 part_mounting_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A part_mounting_feature is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Part_mounting_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY part_mounting_feature
 SUPERTYPE OF (bare_die_surface)
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'mounting area') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1;
END_ENTITY; -- part_mounting_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The part_mounting_feature shall be related as the 'mounting area' 
to exactly one shape_aspect with a description of 'connection zone'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3322"
></A
>5.2.3.1.260 part_template_definition</H4
>A part_template_definition is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Blind_passage_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_termination_passage_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Counterbore_passage_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Countersunk_passage_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_trace_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Dependent_material_removal_feature_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Inter_stratum_feature_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Material_addition_feature_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Material_removal_feature_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Non_conductive_cross_section_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Part_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Part_text_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_feature_or_part_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_connector_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_part_cross_section_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_part_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Special_symbol_part_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Stratum_feature_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Trace_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Unsupported_passage_template</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Via_template</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY part_template_definition
  SUPERTYPE OF (dependent_material_removal_feature_template)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\
       shape_aspect.of_shape\
       property_definition.definition.frame_of_reference\
       application_context_element.name = 'template definition';

  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'part template analytical model'))) 
       &#60;= 1))) = 0;       

  WR3: (NOT (SELF\shape_aspect.description = 
         'component termination passage template')) OR
       (SIZEOF (QUERY (ctpt &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'inter stratum feature passage technology') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (ctpt.relating_shape_aspect)) AND
       (ctpt.relating_shape_aspect\shape_aspect.description = 
       'default component termination passage definition'))) = 1);

  WR4: (NOT (SELF\shape_aspect.description = 
        'component termination passage template')) OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'access mechanism') |
       am.related_shape_aspect\shape_aspect.description IN 
       ['component termination passage template interface terminal',
       'component termination passage template join terminal'])) &#62;= 2);

  WR5: (NOT (SELF\shape_aspect.description = 'default trace template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition))) = 1)) = 1);

  WR6: (NOT (SELF\shape_aspect.description = 'inter stratum feature template')) OR
       (SIZEOF (QUERY (isfpt &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'inter stratum feature passage technology') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (isfpt.relating_shape_aspect)))) = 1);

  WR7: (NOT (SELF\shape_aspect.description = 'printed connector template')) OR
       (SIZEOF (QUERY (sar &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name IN 
       ['connector'])) &#62;= 1);

  WR8: (NOT (SELF\shape_aspect.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ANALYTICAL_MODEL' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'transmission line model'))) 
       = 1))) = 0);

  WR9: (NOT (SELF\shape_aspect.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2)) = 2)) = 1))) = 0);

 WR10: (NOT (SELF\shape_aspect.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'maximum width'))) = 1
       )) = 1))) = 0);

 WR11: (NOT (SELF\shape_aspect.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'minimum width'))) = 1
       )) = 1))) = 0);

 WR12: (NOT (SELF\shape_aspect.description = 'printed part template')) OR
       (SIZEOF (QUERY (impl_func &#60;* QUERY (pdr &#60;* 
       USEDIN (SELF.of_shape.definition,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (impl_func.relating_product_definition)) AND
       (impl_func.relating_product_definition.frame_of_reference.name =
       'functional design usage'))) = 1);
 
 WR13: (NOT (SELF\shape_aspect.description = 'printed part template')) OR
       (SIZEOF (QUERY (ad &#60;* QUERY (sar &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated definition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN 
       TYPEOF (ad.related_shape_aspect)) AND
       (ad.related_shape_aspect\shape_aspect.description IN 
       ['interface terminal', 'join terminal']))) &#62;= 2);

 WR14: (NOT (SELF\shape_aspect.description = 'trace template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 'curve style parameters'
       )) = 1 ) )) = 1 );  

 WR15: (NOT (SELF\shape_aspect.description = 'unsupported passage template')) OR
       (SIZEOF (QUERY (upt &#60;* QUERY (sar &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'inter stratum feature passage technology') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN 
       TYPEOF (upt.relating_shape_aspect)) AND
       (upt.relating_shape_aspect\shape_aspect.description = 
       'default unsupported passage definition'))) = 1);

 WR16: (NOT (SELF\shape_aspect.description = 'via template')) OR
       (SIZEOF (QUERY (vpt &#60;* QUERY (sar &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'inter stratum feature passage technology') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PASSAGE_TECHNOLOGY' IN 
       TYPEOF (vpt.relating_shape_aspect)) AND
       (vpt.relating_shape_aspect\shape_aspect.description = 
       'default via definition'))) = 1);

 WR17: (NOT (SELF\shape_aspect.description = 'via template')) OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'access mechanism') |
       am.related_shape_aspect\shape_aspect.description =
                                 'via template terminal')) &#62;= 2);

 WR18: EXISTS(SELF\shape_aspect.name);

 WR19: (NOT (SELF\shape_aspect.description = 'non conductive cross section template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN
       TYPEOF (tu.relating_property_definition.definition)))) = 1)) = 1);

 WR20: (NOT (SELF\shape_aspect.description = 'non conductive cross section template')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'nominal width'))) = 1
       )) = 1))) = 0);

 WR21: (NOT (SELF\shape_aspect.description = 'printed connector template')) OR
       (SIZEOF (QUERY (ad &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated definition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (ad.related_shape_aspect)) AND
       (ad.relating_shape_aspect\shape_aspect.description IN
       ['interface terminal', 'join terminal']))) &#62;= 2);

 WR22: (NOT (SELF\shape_aspect.description = 
                         'printed part cross section template')) OR
       (SIZEOF (QUERY (ad &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'horizontal material link') |
       NOT(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_shape_aspect)) AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_shape_aspect\shape_aspect_relationship.
                                                   related_shape_aspect)) AND
       (ad.relating_shape_aspect\shape_aspect_relationship.
                 related_shape_aspect\shape_aspect.description = 'left'))))) = 0); 

 WR27: (NOT (SELF\shape_aspect.description = 
                        'printed part cross section template')) OR
       (SIZEOF (QUERY (ad &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'horizontal material link') |
       NOT(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_shape_aspect)) AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_shape_aspect\shape_aspect_relationship.
                                                 relating_shape_aspect)) AND
       (ad.relating_shape_aspect\shape_aspect_relationship.
              relating_shape_aspect\shape_aspect.description = 'right'))))) = 0); 

 WR28: (NOT (SELF\shape_aspect.description = 
                                'printed part cross section template')) OR
       (SIZEOF (QUERY (ad &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'vertical material link') |
       NOT(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_shape_aspect)) AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_shape_aspect\shape_aspect_relationship.
                                              related_shape_aspect)) AND
       (ad.relating_shape_aspect\shape_aspect_relationship.
          related_shape_aspect\shape_aspect.description = 'bottom'))))) = 0); 

 WR29: (NOT (SELF\shape_aspect.description = 
                                 'printed part cross section template')) OR
       (SIZEOF (QUERY (ad &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'vertical material link') |
       NOT(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_shape_aspect)) AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_shape_aspect\shape_aspect_relationship.
                                          relating_shape_aspect)) AND
       (ad.relating_shape_aspect\shape_aspect_relationship.
          relating_shape_aspect\shape_aspect.description = 'top'))))) = 0); 
 WR30: SELF\shape_aspect.name = 'NULL';
END_ENTITY; -- part_template_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The part_template_definition shall be an aspect of the shape of a
product_definition that has an application_context_element with a name of 'template definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The part_template_definition shall have at most one representation that
is an analytical_model and has a name of 'part template analytical model'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the part_template_definition has a description of 'component
termination passage template', it shall be related to a passage_technology
with a description of 'default component termination passage definition' as a
'inter stratum feature passage technology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the part_template_definition has a description of 'component
termination passage template', it shall be used to relate at least two
shape_aspects with a description of either 'component termination passage
template interface terminal' or 'component termination passage template join
terminal' to specify the 'access mechanism'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the part_template_definition has a description of 'default trace
template' it shall have a property that is related to a property of a
stratum_technology as the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the part_template_definition has a description of 'inter stratum
feature template', it shall be related to a passage_technology  as an 'inter
stratum feature passage technology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the part_template_definition has a description of 'printed connector
template', it shall be used to relate at least one shape_aspect to specify a
'connector'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the part_template_definition has a description of 'printed part
cross section template', it shall be represented by exactly one 
analytical_model with a name of 'transmission line model'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the part_template_definition has a description of 'printed part
cross section template', it shall have a representation that contains exactly
two length_measure_with_units.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the part_template_definition has a description of 'printed part
cross section template', it shall have a representation that contains exactly
one length_measure_with_unit with a name of 'maximum width'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the part_template_definition has a description of 'printed part cross section template', it shall have a representation that contains exactly one length_measure_with_unit with a name of 'minimum width'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the part_template_definition has a description of 'printed part
template', it shall be an aspect of the shape of a product_definition that is
the 'implemented function' for exactly one functional_unit with a
frame_of_reference name of 'functional design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the part_template_definition has a description of 'printed part
template', it shall be used to relate two or more
printed_part_template_terminals with a description of either
'interface terminal' or 'join terminal' to specify an 'associated definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the part_template_definition has a description of 'trace template',
it shall have a representation that contains exactly one styled_item with a
name of 'trace style' that specifies a curve_style.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the part_template_definition has a description of 'unsupported
passage template', it shall be related to exactly one passage_technology with
a description of 'default unsupported passage definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the part_template_definition has a description of 'via template', it
shall be related to exactly one passage_technology with a description of
'default via definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>If the part_template_definition has a description of 'via template', it
shall relate at least two shape_aspects with a description of 'via template
terminal' as the 'access mechanism'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR18: </SPAN
>The part_template_definition name shall exist.<DIV
CLASS="NOTE"
><P
></P
>NOTE: This is a placeholder rule.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR19: </SPAN
>If the part_template_definition has a description of 'non conductive cross section
template' it shall have a property that is related to a property of a
stratum_technology as the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR20: </SPAN
>If the part_template_definition has a description of 'non conductive
cross section template', it shall have a representation that contains exactly
one length_measure_with_unit with a name of 'nominal width'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR21: </SPAN
>If the part_template_definition has a description of 'printed connector 
template', it shall be used to relate two or more
printed_part_template_terminals with a description of either
'interface terminal' or 'join terminal' to specify an 'associated definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR22: </SPAN
>If the part_template_definition has a description of 'printed part cross section template', and if there are horizontallly adjacent disjoint materials, the subsequent boundary shall be the 'right' boundary for each material link between two materials.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR23: </SPAN
>If the part_template_definition has a description of 'printed part cross section template', and if there are horizontally adjacent disjoint materials, the precedent boundary shall be the 'left' boundary for each material link between two materials.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR24: </SPAN
>If the part_template_definition has a description of 'printed part cross section template', and if there are verticallly adjacent disjoint materials, the subsequent boundary shall be the 'top' boundary for each material link between two materials.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR25: </SPAN
>If the part_template_definition has a description of 'printed part cross section template', and if there are vertically adjacent disjoint materials, the precedent boundary shall be the 'bottom' boundary for each material link between two materials.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR26: </SPAN
>The name inherited from shape_aspect shall be 'NULL'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3397"
></A
>5.2.3.1.261 part_text_template_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A part_text_template_definition is a part_template_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Part_text_template</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY part_text_template_definition
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEXT_LITERAL' IN
       TYPEOF (it))) = 1)) = 1))) = 0);
  WR2: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font vertical extent'))) = 1
       )) = 1))) = 0);
  WR3: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font horizontal extent'))) = 1
       )) = 1))) = 0);
END_ENTITY; -- part_text_template_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The part_text_template_definition shall have a representation that has exactly one text_literal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The part_text_template_definition shall have a representation that has exactly one
measure_representation_item that is a length_measure_with_unit with a name of
'maximum font vertical extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The part_text_template_definition shall have a representation that has exactly one
measure_representation_item that is a length_measure_with_unit with a name of
'maximum font horizontal extent'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3407"
></A
>5.2.3.1.262 part_tooling_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A part_tooling_feature is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Part_tooling_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY part_tooling_feature
 SUPERTYPE OF (fiducial_part_feature ANDOR 
               test_point_part_feature)
 SUBTYPE OF (shape_aspect);
END_ENTITY; -- part_tooling_feature
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3413"
></A
>5.2.3.1.263 passage_technology</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A passage_technology is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_component_termination_passage_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Default_unsupported_passage_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Passage_technology</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY passage_technology
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name, SELF\shape_aspect.of_shape;
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION' IN 
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) &#60;= 1;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation')) = 1))) = 0;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (
          {1 &#60;= SIZEOF (pcr.used_representation.items) &#60;= 8}
                                             ))) = 0))) = 0;
  WR5: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items | 
       NOT (it\representation_item.name IN ['maximum aspect ratio', 'plated passage', 
       'maximum allowed component terminal extent', 
       'minimum allowed component terminal extent', 
       'maximum as finished deposition thickness',  
       'minimum as finished deposition thickness',  
       'maximum as finished passage extent', 
       'minimum as finished passage extent']))) = 0))) = 0))) = 0;
  WR6: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RATIO_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'maximum aspect ratio') AND
       (it\measure_with_unit.value_component &#62; 1.0))) &#60;= 1))) = 0))) = 0;
  WR7: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'plated passage') AND
       (it\descriptive_representation_item.description IN ['true', 'false']))) = 1))) = 0))) = 0;
  WR8: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum as finished passage extent')
       )) &#60;= 1))) = 0))) = 0;
  WR9: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'maximum as finished deposition thickness'))) &#60;= 1))) = 0))) = 0;
 WR10: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum as finished deposition thickness'))) &#60;= 1))) = 0))) = 0;
 WR11: (NOT (SELF\shape_aspect.description IN 
       ['default component termination passage definition',
       'default via definition'])) OR 
       (SIZEOF (USEDIN (SELF, 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1);
 WR12: (NOT (SELF\shape_aspect.description IN  
       ['default component termination passage definition',
       'default unsupported passage definition',
       'default via definition'])) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum as finished passage extent'))) 
        = 1))) = 0))) = 0);
 WR13: (NOT (SELF\shape_aspect.description =
       'default component termination passage definition')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum as finished deposition thickness'))) 
         = 1))) = 0))) = 0);
 WR14: (NOT (SELF\shape_aspect.description =
       'default component termination passage definition')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum allowed component terminal extent'))) = 1))) = 0))) = 0);
 WR15: (NOT (SELF\shape_aspect.description =
       'default component termination passage definition')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'maximum allowed component terminal extent'))) = 1))) = 0))) = 0);
 WR16: (NOT (SELF\shape_aspect.description = 'default via definition')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum as finished deposition thickness'))) = 1))) = 0))) = 0);
 WR17: SIZEOF (QUERY (rpt &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'as finished inter stratum extent') |
       (rpt.related_shape_aspect.of_shape\property_definition.description =
       'finished stratum extent') AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP' 
       IN 
        TYPEOF (rpt.related_shape_aspect.of_shape\property_definition.
       definition)) 
       AND    
       (rpt.related_shape_aspect.of_shape\property_definition.
        definition\product_definition_relationship.name =
       'inter stratum extent')))) = 1;
END_ENTITY; -- passage_technology
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within the scope of the referenced shape.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The passage_technology shall be an aspect of the shape of a product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The passage_technology shall have at most one material designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The passage_technology shall have exactly one representation with a name
of 'physical characteristics representation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The passage_technology shall have at least one and at most eight items
in its representation with a name of 'physical characteristics
representation'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The items in the representation with a name of 'physical
characteristics representation' of a passage_technology shall have a name of
either 'maximum aspect ratio', 'plated passage',  'maximum allowed component
terminal extent', 'minimum allowed component terminal extent', 'maximum as
finished deposition thickness', 'minimum as finished deposition thickness',
'maximum as finished passage extent', or 'minimum as finished passage extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>At most one item in the representation with a name of 'physical
characteristics representation' of a passage_technology shall be a 
measure_representation_item and a ratio_measure_with_unit with a name of 
'maximum aspect ratio' and a value greater than 1.0.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Exactly one item in the representation with a name of 'physical
characteristics representation' of a passage_technology shall be a
descriptive_representation_item with a name of 'plated passage' and a
description of 'true' or 'false'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>At most one item in the representation with a name of 'physical
characteristics representation' of a passage_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'minimum as finished passage extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>At most one item in the representation with a name of 'physical
characteristics representation' of a passage_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'maximum as finished deposition thickness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>At most one item in the representation with a name of 'physical
characteristics representation' of a passage_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'minimum as finished deposition thickness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the passage_technology has a description of 'default via definition'
or 'default component termination passage definition', it shall have exactly
one material_designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the passage_technology has a description of 'default component
termination passage definition', 'default unsuported passage definition'
or 'default via definition', exactly one item in the representation with a
name of 'physical characteristics representation' of a passage_technology
shall be a measure_representation_item and a length_measure_with_unit with a
name of 'minimum as finished passage extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the passage_technology has a description of 'default component
termination passage definition', exactly one item in the representation with a
name of 'physical characteristics representation' of a passage_technology
shall be a measure_representation_item and a length_measure_with_unit with a
name of 'minimum as finished deposition thickness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the passage_technology has a description of 'default component
termination passage definition', exactly one item in the representation with a
name of 'physical characteristics representation' of a passage_technology
shall be a measure_representation_item and a length_measure_with_unit with a
name of 'minimum allowed component terminal extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the passage_technology has a description of 'default component
termination passage definition', exactly one item in the representation with a
name of 'physical characteristics representation' of a passage_technology
shall be a measure_representation_item and a length_measure_with_unit with a
name of 'maximum allowed component terminal extent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the passage_technology has a description of 'default via
definition', exactly one item in the representation with a name of 'physical
characteristics representation' of a passage_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'minimum as finished deposition thickness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>The passage_technology shall relate to exactly one shape_aspect of a
shape with a description of 'finished stratum extent' of a 
product_definition_relationship with a name of 'inter stratum extent' to 
specify the 'as finished inter stratum extent'.</DIV
></DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the passage_technology is related to a inter_stratum_feature with a
description of 'interconnect module edge' or 'interconnect module edge segment'
it, shall not be related to a representation_item with a name of 
'maximum as finished passage extent'</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the item in the representation with a name of 'physical
characteristics representation' of a passage_technology has a 
descriptive_representation_item with a name of 'plated passage'
and a description of 'true' then the material designation
shall have be the designation for a
material_designation_characterization with a property that is a
material_property_representation that has a definition that is a
material_property and a used_representation with a name of
'conductivity classification representation' that has an item that
is a descriptive_representation_item with a name of
'electrical conductivity classification' and a description of
'conductive'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3449"
></A
>5.2.3.1.264 perpendicularity_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A perpendicularity_tolerance is a
geometric_tolerance_with_specified_datum_source that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Perpendicularity_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY perpendicularity_tolerance
  SUBTYPE OF (geometric_tolerance_with_specified_datum_system);
WHERE
  WR1: SELF\geometric_tolerance.name = 'perpendicularity';
END_ENTITY; -- perpendicularity_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name for the perpendicularity_tolerance shall be 'perpendicularity'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The toleranced_shape_aspect of the perpendicularity_tolerance shall either lie on the 
boundary of the shape of the product; be a centre_of_symmetry with a description of 
either 'axis' or 'plane'; be a tangent with a description of 'plane'; be a 
part_template_definition; or be a composite_shape_aspect the 'composing' shape_aspects 
of which either are all of type part_template_definition, are all of type 
centre_of_symmetry and have the same description -- either 'axis' or 'plane', or are 
all of type tangent with a description of 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The perpendicularity_tolerance shall have at most two physical_unit_datum in its referenced 
datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The perpendicularity_tolerance shall have at least one physical_unit_datum in its referenced 
datum_system that has description of either 'axis' or 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the toleranced_shape_aspect of the perpendicularity_tolerance is neither a 
centre_of_symmetry with a description of 'axis' nor a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'axis', the tolerance_zone_boundary shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3462"
></A
>5.2.3.1.265 physical_connectivity_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_connectivity_definition is a shape_aspect that implements the ARM
concepts of  <SPAN
CLASS="INTERNALREF"
>Physical_connectivity_definition</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Physical_connectivity_structure_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_connectivity_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name,SELF\shape_aspect.of_shape;
WHERE
  WR1: SIZEOF (QUERY (at &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated terminals') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at.related_shape_aspect)) AND
((at.related_shape_aspect\shape_aspect.description = 
                 'assembly module component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
                        'bare die component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
               'interconnect component join terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
             'interconnect module component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
              'minimally defined component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
                     'packaged component join terminal'))
       )) &#62; 1;
  WR2: SIZEOF (QUERY( pd &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
        (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'connectivity allocation')) = 1)
       ))
       &#60;= 1;
END_ENTITY; -- physical_connectivity_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within the context of the product_definition_shape in the role of of_shape for the shape_aspect supertype.<DIV
CLASS="NOTE"
><P
></P
>NOTE: Since there may be only one product_definition for a product_definition_shape, this guarantees uniqueness within the context of the product_definition.</DIV
></DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_connectivity_definition shall relate to two or more
physical_component_terminal to specify the 'associated terminals'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_connectivity_definition shall be related by at most one property_definition_relationshp as a
'connectivity allocation'.</DIV
></DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>All component_terminals related to a physical_connectivity_definition shall be in the same design view.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>All component_terminals related to a physical_connectivity_definition shall not be in the set of terminals of the components that implement the connectivity defined by the physical_connectivity_definition.<DIV
CLASS="NOTE"
><P
></P
>NOTE: The terminals identified by the physical_connectivity_definition are a subset of the terminals referenced by the members of assembly_joint or by the members of the implementation of the ARM concept of Interface_mounted_join.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3480"
></A
>5.2.3.1.266 physical_connectivity_element</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_connectivity_element is a shape_aspect_relationship and a 
shape aspect that implement the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Physical_connectivity_element</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_connectivity_element
  SUBTYPE OF (shape_aspect_relationship, shape_aspect);
WHERE
  WR1: (SELF.relating_shape_aspect\shape_aspect.description = 
                          'topological junction') XOR
       (SIZEOF ([
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL'] *
       TYPEOF (SELF.relating_shape_aspect)) = 1);
  WR2: (SELF.related_shape_aspect\shape_aspect.description = 'topological junction') XOR
       (SIZEOF ([
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL'] *
       TYPEOF (SELF.related_shape_aspect)) = 1);
  WR3: SIZEOF (QUERY (se &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'structure element') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF (se.relating_shape_aspect))) = 1;
  WR4: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT' IN 
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.
         frame_of_reference.name = 
       'physical design');
END_ENTITY; -- physical_connectivity_element
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_connectivity_element shall have a relating_shape_aspect that
either has a description of 'topological junction', or is a component_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_connectivity_element shall have a related_shape_aspect that
either has a description of 'topological junction', or is a component_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The physical_connectivity_element shall be related to exactly one
physical_connectivity_definition as a 'structure element'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The physical_connectivity_element shall be an aspect of the shape of  a
physical_unit that has a frame_of_reference name of 'physical design'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3491"
></A
>5.2.3.1.267 physical_network</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_network is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Physical_network</SPAN
>.<DIV
CLASS="NOTE"
><P
></P
>NOTE: A physical_network should not be confused with the like sounding term physical_unit_network_definition.</DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_network
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (cr &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connectivity requirement') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (cr.related_shape_aspect)) AND
((cr.related_shape_aspect\shape_aspect.description = 
     'component termination passage join terminal') OR
(cr.related_shape_aspect\shape_aspect.description = 
                              'land join terminal') OR
(cr.related_shape_aspect\shape_aspect.description = 
               'non functional land join terminal') OR
(cr.related_shape_aspect\shape_aspect.description = 
                 'printed component join terminal'))
)) &#62;= 2;
  WR2: SIZEOF (QUERY (nt &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'network topology') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (nt.related_shape_aspect))) &#62;= 1;
  WR3: SIZEOF (QUERY (nt &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'reference connected terminals') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_CONNECTED_TERMINALS_DEFINITION' IN
       TYPEOF (nt.relating_shape_aspect))) &#60;= 1;
END_ENTITY; -- physical_network
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_network shall relate to at least two component_terminals with the specified descriptions to
specify a 'connectivity requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_network shall relate to at least one join_shape_aspect to specify a 'network topology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The physical_network shall relate to no more than one part_connected_terminals_definition to specify 'reference connected terminals'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>All component_terminals related to a physical_network in the role of
connectivity_requirement_element shall be in the same design view
as the physical_network (interconnect_module.)</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>All join_relationships related to a physical_network in the role of
interconnect_module_net_topology_element shall be in the same design view
as the physical_network (interconnect_module.)</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>All interconnect_module_net_topology_element and connectivity_requirement_element
related to physical_network shall be in the same design view (interconnect_module.)</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>The material_electrical_conductivity_category shall be the same for all materials that participate in the physical_network.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP5: </SPAN
>The physical_network shall not be referenced by more than one property_definition_relationship that relates the physical_network to an aggregate connectivity requirement implementation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3508"
></A
>5.2.3.1.268 physical_node_requirement_to_implementing_component_allocation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_node_requirement_to_implementing_component_allocation is a shape_aspect_relationship and
a shape_aspect that is the allocation of a physical node to the component that is partially or wholly responsible
for implementing that node in the assembly.  The relating and related shape_aspects are the node and a shape_aspect
of the component respectively.  
A physical_node_requirement_to_implementing_component_allocation implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Physical_node_requirement_to_implementing_component_allocation</SPAN
>.
<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_node_requirement_to_implementing_component_allocation
  SUBTYPE OF (shape_aspect_relationship, shape_aspect);
WHERE
  WR1: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.related_shape_aspect.of_shape\property_definition.definition)) AND
       (NOT (SELF.related_shape_aspect.of_shape\property_definition.definition\product_definition.description IN 
       ['laminate component']));
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF (SELF.relating_shape_aspect);
  WR3: acyclic_shape_aspect_relationship(SELF,
       [SELF\shape_aspect_relationship.related_shape_aspect],
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.'+
       'PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION');
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\physical_node_requirement_to_implementing_component_allocation)) = 0;
(*
  WR5: SIZEOF(terminal_of_implementing_component(SELF,SELF.relating_shape_aspect)) = 0;
*)
END_ENTITY; -- physical_node_requirement_to_implementing_component_allocation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_node_requirement_to_implementing_component_allocation shall have a related_shape_aspect that references a component_definition that is not a laminate component.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_node_requirement_to_implementing_component_allocation shall have a relating_shape_aspect that references a physical_connectivity_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The members of physical_node_requirement_to_implementing_component_allocation shall form a directed acyclic graph with the relating_shape_aspect, related_shape_aspect attributes of physical_node_requirement_to_implementing_component_allocation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>A member of physical_node_requirement_to_implementing_component_allocation shall not be any other subtype of shape_aspect or shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>in arm terms:
SIZEOF(QUERY (pct &#60;* physical_node_requirement.associated_terminals |
          pct\component_feature.associated_component = implementation_component )) = 0;&#13;</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3520"
></A
>5.2.3.1.269 physical_unit</H4
>A physical_unit is a product_definition that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Assembly_module_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Externally_defined_ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interconnect_module_usage_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Library_defined_ee_product_definition</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_unit</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_unit_design_view</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_unit_usage_view</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_unit
 SUPERTYPE OF (ONEOF (bare_die, 
                      package, 
                      packaged_part, 
                      assembly_definition, 
                      interconnect_definition,
                      reference_packaged_part_assembly_implementation,
                      reference_packaged_part_interconnect_implementation))
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs &#60;* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) &#60;= 1);
  WR2: SIZEOF (QUERY (adta &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) &#62;= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SELF.frame_of_reference.name IN ['physical design', 
       'physical design usage'];
  WR7: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'physical unit technology') |
       dut.relating_property_definition\property_definition.name =
       'unit technology')) = 1)) &#60;= 1;
  WR8: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa))) &#62;= 1))) = 0);
  WR9: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
               'maximum negative component height')) &#60;= 1))) = 0);
 WR10: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
                 'maximum positive component height')) &#60;= 1))) = 0);
 WR11: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'implemented function') AND
       (pdr.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1);
 WR12: NOT(is_assembly_module_design(SELF)) 
       OR
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATING_PRODUCT_DEFINITION') |
       (is_laminate_component(pdr.related_product_definition)
       ))) = 0);
 WR14: NOT(is_interconnect_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'implemented function') AND
       (pdr.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) &#60;= 1);
 WR15: NOT(is_interconnect_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd1 &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_SHAPE' IN TYPEOF (pd1)) 
       AND (SIZEOF(QUERY(cd &#60;* USEDIN(pd1,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CHARACTERIZED_DEFINITION' IN TYPEOF (cd))
       AND (SIZEOF(QUERY(pd2 &#60;* USEDIN(cd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd2\property_definition.name = 'located interconnect module thickness')
       AND (SIZEOF(USEDIN(pd2,        
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) &#62; 1)
       )) = 1))) = 1))) &#60;=1 );
 WR16: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
       'interconnect module usage view physical characteristics'))) &#60;= 1);
 WR17: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
          'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr &#60;* USEDIN (pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
          'minimum thickness over metal requirement')
       AND ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) &#60;= 1))) &#60;= 1);
 WR18: NOT(is_interconnect_module_usage(SELF))
        OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
         'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr &#60;* USEDIN (pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
         'maximum thickness over metal requirement')
       AND ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) &#60;= 1))) &#60;= 1);
 WR19: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
          'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr &#60;* USEDIN (pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
         'minimum thickness over dielectric requirement')
       AND ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) &#60;= 1))) &#60;= 1);
 WR20: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
          'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr &#60;* USEDIN (pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
           'maximum thickness over dielectric requirement')
       AND ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) &#60;= 1))) &#60;= 1);
 WR21: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ((pd\property_definition.name = 'restraint') OR
       (pd\property_definition.name = 'tolerance specific restraint')))) &#60;= 1);
 WR22: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (sa\shape_aspect.description = 
                                 'interconnect module primary surface')
       )) &#60;= 1))) = 0);
WR23: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (sa\shape_aspect.description = 
                              'interconnect module secondary surface')
       )) &#60;= 1))) = 0);
WR24: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (sa\shape_aspect.description =
                                 'interconnect module edge surface')
       )) &#60;= 1))) = 0);
WR25: NOT(is_assembly_module_design(SELF)) OR
((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'assembly module')      
       AND (SIZEOF (QUERY(pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY(sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (sa)))) &#62; 0 ))) = 0)))
       OR (SIZEOF (QUERY(pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY(sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_JOINT' IN TYPEOF (sa)) AND
       (SIZEOF (QUERY( acu &#60;* USEDIN (
       sa\shape_aspect_relationship.relating_shape_aspect.of_shape.definition,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
       AND (acu\product_definition_relationship.relating_product_definition = SELF)
       )) &#62;= 1))) &#62;=1 ))) &#62;= 1));
WR26: NOT(is_assembly_module_design(SELF)) OR
      ((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'assembly module')      
       ))
       AND (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj))AND
       (SIZEOF (QUERY( acu &#60;* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
        AND (acu\product_definition_relationship.relating_product_definition = SELF)
        )) = 0))) = 0));
WR27: NOT(is_assembly_module_design(SELF)) OR
      ((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'assembly module')      
       ))
       AND (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)) AND
        (SIZEOF (QUERY( cl &#60;* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect.of_shape.definition,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'REPRESENTATION.ITEMS') |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'COMPONENT_LOCATION' IN TYPEOF (cl))
        AND (aj IN cl\representation.items))) = 0))) = 0));
WR28: NOT(is_interconnect_module_design(SELF)) OR
       ((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'interconnect module')
       )) OR
       (SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATING_PRODUCT_DEFINITION') |
        (
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(pdr))
       AND
       (pdr\product_definition_relationship.name = 'interconnect module stratum assembly relationship')
       AND
       (pdr.related_product_definition\product_definition.description = 'primary design layer stratum')
       AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM' IN TYPEOF(pdr.related_product_definition))
        )
       )
       ) = 1));

END_ENTITY; -- physical_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the physical_unit is a product_definition_with_associated_documents,
there shall be at most one document in the set of documentation_ids that has a
product_data_type of 'CAD filename'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_unit shall have exactly one creation date.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The physical_unit shall have exactly one approval.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The physical_unit shall have at least one organization or 
person_and_organization as the creator.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The physical_unit shall have exactly one security_classification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The physical_unit shall have a frame_of_reference with a name of
'physical design' or 'physical design usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The physical_unit shall be related to at most one property with a name of 'unit technology'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the physical_unit is a 'physical design usage' of an 'assembly module', it shall have at least one shape_aspect that is of type assembly_module_terminal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the physical_unit is a 'physical design usage' of an 'assembly module',
it shall have at most one representation with a name of 'maximum negative
component height'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the physical_unit is a 'physical design usage' of an 'assembly module',
it shall have at most one representation with a name of 'maximum positive
component height'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the physical_unit is a 'physical design usage' of an 'assembly module',
it shall have exactly one 'functional design usage' specified as the implemented
function.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the physical_unit is a 'physical design' of an 'assembly module',
it shall have no laminate components.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the physical_unit is a 'physical design usage' of an 'interconnect
module', it shall have no more than one 'functional design usage' specified as the
'implemented function'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the physical_unit is a 'physical design usage' of an 'interconnect
module', it shall have at most one requirements_property with a name of 'located
interconnect module thickness'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the physical_unit is a physical design usage of an interconnect
module it shall be the definition for at most one property_definition
with a name of 'interconnect module usage view physical characteristics'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the physical_unit is a physical design usage of an interconnect
module it shall be the definition for at most one property_definition
with a name of 'interconnect module usage view physical characteristics'
and related to a length_measure_with_unit with a name of
'minimum thickness over metal requirement'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR17: </SPAN
>If the physical_unit is a physical design usage of an interconnect
module it shall be the definition for at most one property_definition
with a name of 'interconnect module usage view physical characteristics'
and related to a length_measure_with_unit with a name of
'maximum thickness over metal requirement'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR18: </SPAN
>If the physical_unit is a physical design usage of an interconnect
module it shall be the definition for at most one property_definition
with a name of 'interconnect module usage view physical characteristics'
and related to a length_measure_with_unit with a name of
'minimum thickness over dielectric requirement'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR19: </SPAN
>If the physical_unit is a physical design usage of an interconnect
module it shall be the definition for at most one property_definition
with a name of 'interconnect module usage view physical characteristics'
and related to a length_measure_with_unit with a name of
'maximum thickness over dielectric requirement'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR20: </SPAN
>If the physical_unit is a physical design usage of an interconnect
module it shall be the definition for at most one property_definition
with a name of 'restraint' or 'tolerance specific restraint'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR21: </SPAN
>If the physical_unit is a 'physical design usage' of an 'interconnect module', it shall have no more than one shape_aspect that is implementation of secondary surface.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR22: </SPAN
>If the physical_unit is a 'physical design usage' of an 'interconnect module', it shall have no more than one shape_aspect that is implementation of primary surface.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR23: </SPAN
>If the physical_unit is a 'physical design usage' of an 'interconnect module', it shall have no more than one shape_aspect that is implementation of edge surface.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR24: </SPAN
>If the physical_unit that is a design view of an assembly module is referenced by an
assembly_joint through the of_shape attribute, at least one of the members
of component_definition that are related by the relating_shape_aspect of that
assembly_joint shall be related by members of assembly_component_usage to
this physical_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR25: </SPAN
>If the physical_unit that is a design view of an assembly module is referenced by an assembly_joint through the of_shape attribute, each member of component_definition that are related by the related_shape_aspect of that assembly_joint shall be related by members of assembly_component_usage to this physical_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR26: </SPAN
>If the physical_unit that is a design view of an assembly module is referenced by an assembly_joint through the of_shape attribute, the component_definition that is related by the assembly_joint\shape_aspect_relationship.related_shape_aspect attribute of that assembly_joint shall be positioned by a member of component_location which also references that assembly_joint.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR27: </SPAN
>If the physical_unit that is a design view of an interconnect module, there shall be exactly one primary design layer stratum related to the physical_unit by an assembly_component_usage. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3573"
></A
>5.2.3.1.270 physical_unit_datum</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_unit_datum is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Common_datum</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Datum</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Datum_axis</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Datum_plane</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Datum_point</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Edge_segment_vertex</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Single_datum</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_unit_datum
  SUPERTYPE OF (edge_segment_vertex)
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: SELF\shape_aspect.description IN ['axis', 'plane', 'point', ''];
    WR2: SELF\shape_aspect.product_definitional = False;
    WR3: SELF\shape_aspect.name IN ['single datum', 'common datum', ''];
    WR4: (NOT (SELF\shape_aspect.name = 'common datum')) OR
         (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum feature usage in datum system') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'DATUM_SYSTEM' IN TYPEOF(SAR)))) &#62;= 1);
    WR5: (NOT (SELF\shape_aspect.name = 'common datum')) OR
         (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum feature usage in common datum') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'DATUM_SYSTEM' IN TYPEOF(SAR)))) &#62;= 2);
    WR6: (NOT ((SELF\shape_aspect.description = 'axis') AND
         (SELF\shape_aspect.name IN ['common datum', 'single datum']))) OR
         (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         NOT(sar\shape_aspect_relationship.name = 'reference axis') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'DATUM_REFERENCE_FRAME' IN TYPEOF(SAR)))) = 1);
    WR7: (NOT ((SELF\shape_aspect.description = 'plane') AND
         (SELF\shape_aspect.name IN ['common datum', 'single datum']))) OR
         (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         NOT(sar\shape_aspect_relationship.name = 'reference plane') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'DATUM_REFERENCE_FRAME' IN TYPEOF(SAR)))) = 1);
    WR8: (NOT ((SELF\shape_aspect.description = 'point') AND
         (SELF\shape_aspect.name IN ['common datum', 'single datum']))) OR
         (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         NOT(sar\shape_aspect_relationship.name = 'reference origin') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'DATUM_REFERENCE_FRAME' IN TYPEOF(SAR)))) = 1);
    WR9: (NOT (SELF\shape_aspect.name = 'single datum')) OR
         (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum usage in datum system') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'DATUM_SYSTEM' IN TYPEOF(SAR)))) &#62;= 1);
   WR10: (NOT (SELF\shape_aspect.name = 'single datum')) OR
         (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum feature usage in single datum') AND
         (TRUE))) &#60;= 1);
   WR11: NOT ((SELF\shape_aspect.name IN [''])
         AND (SELF\shape_aspect.description IN ['']));
   WR12: (NOT(SELF\shape_aspect.description = 'plane')) OR
         (SIZEOF(QUERY ( pd &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'PROPERTY_DEFINITION.DEFINITION') |
         pd\property_definition.description = 'datum direction property')) &#60;= 2);
END_ENTITY; -- physical_unit_datum
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_unit_datum shall have a description of 'axis', 'plane', 'point' or 'null'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_unit_datum shall not lie on the boundary of the shape of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The physical_unit_datum shall have a name of 'single datum', 'common datum', or 'null'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the name of the physical_unit_datum is 'common datum' it shall be related to at least one 
datum_system as a 'datum usage in datum system'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the name of the physical_unit_datum is 'common datum', it shall relate to at least two 
shape_aspect to specify the 'datum feature usage in common datum'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the description of the physical_unit_datum is 'axis' and the physical_unit_datum is not related 
to a datum_reference_frame as a 'reference axis', it shall have a name of either 'common datum' or 
'single datum'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the description of the physical_unit_datum is 'plane' and the physical_unit_datum is not related 
to a datum_reference_frame as a 'reference plane', it shall have a name of either 'common datum' or 
'single datum'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the description of the physical_unit_datum is 'point' and the physical_unit_datum is not related 
to a datum_reference_frame as a 'reference origin', it shall have a name of either 'common datum' 
or 'single datum'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the name of the physical_unit_datum is 'single datum', it shall be related to at least one 
datum_system as a 'datum usage in datum system'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the name of the physical_unit_datum is 'single datum', it shall relate to no more than one 
shape_aspect to specify the 'datum feature usage in single datum'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>The name and description of the physical_unit_datum shall not both be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the description of the physical_unit_datum is 'plane', it shall have at most two 
property_definitions with the description of 'datum direction property'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the description of the physical_unit_datum is 'plane' and it has two property_definitions with 
the description of 'datum direction property', the names of the two property_definitions shall not 
be the same.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3608"
></A
>5.2.3.1.271 physical_unit_datum_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_unit_datum_feature is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Datum_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_unit_datum_feature
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: (SIZEOF(QUERY ( pd &#60;* USEDIN(SELF,
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
             'PROPERTY_DEFINITION.' + 'DEFINITION') | 
             (pd\property_definition.description = 'datum feature identification')))) = 1;
    WR2: (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name IN ['datum feature usage in common datum',
         'datum feature usage in single datum'])) &#62;= 1);
    WR3: (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name = 'datum feature usage in single datum')) &#60;= 1);
END_ENTITY; -- physical_unit_datum_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_unit_datum_feature shall have exactly one property that has the description of 'datum feature identification'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_unit_datum_feature shall be related by at least one shape_aspect_relationship with a name of either 'datum feature usage in common datum' or 'datum feature usage in single datum'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The physical_unit_datum_feature shall be related to at most one shape_aspect as a 'datum feature usage in single datum'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The physical_unit_datum_feature shall either lie on the boundary of the shape of the product or be a part_template_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3620"
></A
>5.2.3.1.272 physical_unit_datum_target</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_unit_datum_target is a shape_aspect that implements that ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Datum_target</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_unit_datum_target
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name = 'datum target usage')) &#62;= 1);
END_ENTITY; -- physical_unit_datum_target
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_unit_datum_target shall be related to at least one shape_aspect as the 'datum target usage'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3628"
></A
>5.2.3.1.273 physical_unit_datum_target_set</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_unit_datum_target_set is a physical_unit_datum_feature that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Datum_target_set</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_unit_datum_target_set
  SUBTYPE OF (physical_unit_datum_feature);
WHERE
    WR1: (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name = 'datum target usage')) &#62;= 1);
    WR2: (SIZEOF (QUERY ( sar &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name = 'constituent')) = 0);
END_ENTITY; -- physical_unit_datum_target_set
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The physical_unit_datum_target_set shall relate to at least one shape_aspect to specify the 'datum 
target usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_unit_datum_target_set shall not be related to a shape_aspect as a 
'constituent'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3637"
></A
>5.2.3.1.274 physical_unit_geometric_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A physical_unit_geometric_tolerance is a geometric_tolerance and a
property_definition that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Circularity_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Flatness_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Geometric_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Geometric_tolerance_without_referenced_datum_system</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Straightness_tolerance</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_unit_geometric_tolerance
  SUBTYPE OF (geometric_tolerance, property_definition);
WHERE
    WR1: SELF\geometric_tolerance.name = SELF\property_definition.name;
    WR2: SELF\geometric_tolerance.toleranced_shape_aspect
         = SELF\property_definition.definition;
    WR3: (NOT (SIZEOF([
              'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
              'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM',
              'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
              'LINEAR_PROFILE_TOLERANCE',
              'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
              'SURFACE_PROFILE_TOLERANCE',
              'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
              'POSITION_TOLERANCE'] * TYPEOF(SELF)) = 0))
         OR (SELF\geometric_tolerance.name IN ['circularity',
             'cylindricity', 'flatness', 'straightness']);
    WR4: (NOT (SELF\geometric_tolerance.name = 'circularity')) OR
         (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF)));
    WR5: (NOT (SELF\geometric_tolerance.name = 'cylindricity')) OR
         (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
             'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF)));
    WR6: (NOT (SELF\geometric_tolerance.name = 'flatness')) OR
         (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
         'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF)));
    WR7: (SIZEOF (QUERY (pugt &#60;* QUERY ( sar &#60;* USEDIN(SELF,
          'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
          'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
          sar\shape_aspect_relationship.name = 'group geometric tolerance') | 
          pugt.relating_shape_aspect\shape_aspect.description = 
          'simultaneous requirement')) &#60;= 1);
END_ENTITY; -- physical_unit_geometric_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The value of two name attributes of the physical_unit_geometric_tolerance shall be identical.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The shape_aspect specified as the definition of the physical_unit_geometric_tolerance shall be the 
same shape_aspect specified as the toleranced_shape_aspect by the physical_unit_geometric_tolerance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the physical_unit_geometric_tolerance is neither a 
geometric_tolerance_with_specified_datum_system, a linear_profile_tolerance, a 
surface_profile_tolerance, nor a position_tolerance, the name of the 
physical_unit_geometric_tolerance shall be either 'circularity', 'cylindricity', 'flatness', or 'straightness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'circularity', it shall not be a 
modified_geometric_tolerance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'cylindricity', it shall not be a 
modified_geometric_tolerance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'flatness', it shall not be a 
modified_geometric_tolerance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The physical_unit_geometric_tolerance shall be related to at most one geometric_tolerance_group 
with a description of 'simultaneous requirement' as the 'group geometric tolerance'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The physical_unit_geometric_tolerance either shall relate to exactly one property_definition that has a 
description of either 'conical tolerance zone boundary size', 'positional boundary member 
property', 'profile related positional boundary property' to specify the 'defined boundary'; or 
shall be the defining_tolerance of exactly one tolerance_zone that is the zone of exactly one 
tolerance_zone_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The toleranced_shape_aspect of the physical_unit_geometric_tolerance shall either lie 
on the boundary of the shape of the product; be a centre_of_symmetry with a 
description of either 'axis', 'plane', or 'point'; be a tangent with a description of 
'plane'; be a part_template_definition; or be a composite_shape_aspect the 'composing' 
shape_aspects of which either are all of type part_template_definition, are all of 
type tangent with a description of 'plane', or are all of type centre_of_symmetry and 
have the same description -- either 'axis', 'plane', or 'point'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'circularity', the 
toleranced_shape_aspect shall either be a part_template_definition, lie on the 
boundary of the shape of the product, or be a composite_shape_aspect the 'composing' 
shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'circularity', the tolerance_zone_boundary 
shall be either a tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP5: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'cylindricity', the 
toleranced_shape_aspect shall either be a part_template_definition, lie on the 
boundary of the shape of the product, or be a composite_shape_aspect the 'composing' 
shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP6: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'cylindricity', the tolerance_zone_boundary 
shall be either a tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP7: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'flatness', the 
toleranced_shape_aspect shall either be a part_template_definition, lie on the 
boundary of the shape of the product, or be a composite_shape_aspect the 'composing' 
shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP8: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'flatness', the tolerance_zone_boundary 
shall be either a tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP9: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'flatness' and the 
physical_unit_geometric_tolerance is the defining_tolerance of a tolerance_zone that has a 
property_definition with a description of 'tolerance zone per unit size', the property_definition 
shall have exactly one representation that contains two length_measure_with_unit with a name of 
'per unit size'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP10: </SPAN
>There shall exist exactly one requirements_property that has a representation that contains a 
descriptive_representation_item that has the name of 'requirements description' and a description 
of 'geometric dimensioning and tolerancing reference', and that requirements_property shall be an 
item of one or more document_reference the assigned_document of which are ee_specification.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP11: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'straightness'; the 
toleranced_shape_aspect shall either lie on the boundary of the shape of the product; 
be a centre_of_symmetry with a description of either 'axis' or 'plane', be a 
part_template_definition; or be a composite_shape_aspect the 'composing' shape_aspects 
of which either are all of type part_template_definition, or are all of type 
centre_of_symmetry and have the same description -- either 'axis' or 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP12: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'straightness' and the 
toleranced_shape_aspect of the physical_unit_geometric_tolerance is either a 
centre_of_symmetry with a description of 'axis', or a composite_shape_aspect the 
'composing' shape_aspects of which are all of type centre_of_symmetry and have a 
description of 'axis'; the tolerance_zone_boundary shall have a description of 
'circular or cylindrical or spherical'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP13: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'straightness' and the 
toleranced_shape_aspect of the physical_unit_geometric_tolerance is neither a 
centre_of_symmetry with a description of 'axis', nor a composite_shape_aspect the 
'composing' shape_aspects of which are all of type centre_of_symmetry and have a 
description of 'axis'; the tolerance_zone_boundary shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP14: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'straightness' and the 
toleranced_shape_aspect either is a part_template_definition, lies on the boundary of 
the shape of the product, or is a composite_shape_aspect in which all the 'composing' 
shape_aspects are of type part_template_definition; the 
physical_unit_geometric_tolerance shall be the defining_tolerance of a tolerance_zone 
that has exactly one property_definition with a description of 'tolerance zone 
orientation' that relates to a property_definition with a description of 'viewing 
plane based orientation' to specify its 'zone orientation'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP15: </SPAN
>If the name of the physical_unit_geometric_tolerance is 'straightness' and the 
toleranced_shape_aspect is not a part_template_definition, does not lie on the 
boundary of the shape of the product, or is not a composite_shape_aspect in which all 
the 'composing' shape_aspects are of type part_template_definition; the 
physical_unit_geometric_tolerance shall be the defining_tolerance of a tolerance_zone 
that has exactly zero property_definition with a description of 'tolerance zone 
orientation'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3677"
></A
>5.2.3.1.275 physical_unit_network_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An physical_unit_network_definition is a product_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Physical_unit_network_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY physical_unit_network_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs &#60;* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) &#60;= 1);
  WR2: SIZEOF (QUERY (adta &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) &#62;= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\physical_unit_network_definition))) = 0;
  WR7: SELF.frame_of_reference.name IN ['physical network design'];
END_ENTITY; -- physical_unit_network_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the physical_unit_network_definition is a product_definition_with_associated_documents,
there shall be at most one document in the set of documentation_ids that has a
product_data_type of 'CAD filename'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The physical_unit_network_definition shall have exactly one creation date.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The physical_unit_network_definition shall have exactly one approval.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The physical_unit_network_definition shall have at least one organization or 
person_and_organization as the creator.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The physical_unit_network_definition shall have exactly one security_classification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The physical_unit_network_definition shall not be any other type of product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The physical_unit_network_definition shall have a frame_of_reference with a name of
'physical network design'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3691"
></A
>5.2.3.1.276 plated_cutout_edge_segment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A plated_cutout_edge_segment is a cutout_edge_segment and plated_inter_stratum_feature 
that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Plated_cutout_edge_segment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY plated_cutout_edge_segment
  SUBTYPE OF (cutout_edge_segment,plated_inter_stratum_feature);
WHERE
  WR1: SELF\shape_aspect.description IN ['plated cutout edge segment'];
  WR2: SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) &#60;= 1;
  WR3: (NOT (SELF\shape_aspect.description = 'plated cutout edge segment')) OR
       (SIZEOF (QUERY (cc &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed cutout') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (cc.relating_shape_aspect)) AND
       (cc.relating_shape_aspect\shape_aspect.description =
       'plated cutout'))) = 1);
END_ENTITY; -- plated_cutout_edge_segment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The plated_cutout_edge_segment shall have a description of 'plated cutout edge segment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The plated_cutout_edge_segment shall be related to at most one
join_shape_aspect with a name of 'inter stratum join' as a 'join
implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The plated_cutout_edge_segment shall be related to
exactly one cutout with a description of 'plated
cutout' as the 'composed cutout'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3701"
></A
>5.2.3.1.277 plated_inter_stratum_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A plated_inter_stratum_feature is an inter_stratum_feature that implements the
ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Inter_stratum_join_implementation</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Join_two_physical_connectivity_definition_supporting_inter_stratum_feature</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_network_supporting_inter_stratum_feature</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Plated_cutout</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Plated_inter_stratum_feature</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Plated_interconnect_module_edge</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY plated_inter_stratum_feature
  SUPERTYPE OF (ONEOF(plated_passage,plated_cutout_edge_segment, 
 plated_interconnect_module_edge_segment))
  SUBTYPE OF (inter_stratum_feature);
WHERE
  WR1: (SELF\shape_aspect.description IN ['bonded conductive base blind via', 
        'buried via',
       'component termination passage', 'interfacial connection', 
       'non conductive base blind via', 
       'join two physical connectivity definition supporting inter stratum feature', 
       'plated conductive base blind via', 
       'plated cutout', 'plated interconnect module edge']) OR 
       (SIZEOF 
       (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
	'PLATED_CUTOUT_EDGE_SEGMENT',
	'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
	'PLATED_INTERCONNECT_MODULE_EDGE_SEGMENT'] * TYPEOF (SELF)) = 1 );
  WR2: SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) &#60;= 1;
END_ENTITY; -- plated_inter_stratum_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The plated_inter_stratum_feature shall have a description of either
'bonded conductive base blind via', 'buried via', 'component termination
passage', 'interfacial connection', 'non conductive base blind via', 'plated
conductive base blind via', 'plated cutout', 
'join two physical connectivity definition supporting inter stratum feature',
or 'plated interconnect module edge' or shall be a segment subtype.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The plated_inter_stratum_feature shall be related to at most one
join_shape_aspect with a name of 'inter stratum join' as a 'join
implementation'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The plated_inter_stratum_feature shall have an associated passage_technology
that shall have descriptive_representation_item with a description of 'true'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the plated_inter_stratum_feature description is 'join two physical connectivity definition supporting inter stratum feature', it shall be associated with two physical connectivity definitions as the joined definitions through property_definition_relationship instances.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3725"
></A
>5.2.3.1.278 plated_interconnect_module_edge_segment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A plated_interconnect_module_edge_segment is a plated_inter_stratum_feature and interconnect_module_edge_segment that implements the
ARM concept of <SPAN
CLASS="INTERNALREF"
>Plated_interconnect_module_edge_segment</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY plated_interconnect_module_edge_segment
  SUBTYPE OF (interconnect_module_edge_segment,
              plated_inter_stratum_feature);
WHERE
  WR1: SELF\shape_aspect.description IN ['plated interconnect module edge segment'];
  WR2: SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) &#60;= 1;
  WR3: (NOT (SELF\shape_aspect.description = 
          'plated interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed edge') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_shape_aspect)) AND
       (ce.relating_shape_aspect\shape_aspect.description =
       'plated interconnect module edge'))) = 1);
END_ENTITY; -- plated_interconnect_module_edge_segment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The plated_interconnect_module_edge_segment shall have a description of 
'plated interconnect module edge segment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The plated_interconnect_module_edge_segment shall be related to at most one
join_shape_aspect with a name of 'inter stratum join' as a 'join
implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The plated_interconnect_module_edge_segment shall be related to
exactly one interconnect_module_edge with a description of 'plated
interconnect module edge' as the 'composed edge'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The associated passage_technology shall have descriptive_representation_item with a description of 'true'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3737"
></A
>5.2.3.1.279 plated_passage</H4
>A plated_passage is a plated_inter_stratum_feature that implements the ARM
concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Blind_via</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Bonded_conductive_base_blind_via</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Buried_via</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Component_termination_passage</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interfacial_connection</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Non_conductive_base_blind_via</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Plated_conductive_base_blind_via</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Plated_passage</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Via</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY plated_passage 
  SUBTYPE OF (plated_inter_stratum_feature);
WHERE
  WR1: SELF\shape_aspect.description IN ['bonded conductive base blind via', 
       'buried via', 'component termination passage', 
       'interfacial connection', 'non conductive base blind via',
       'plated conductive base blind via'];
  WR2: (NOT (SELF\shape_aspect.description = 'bonded conductive base blind via')) OR
       (SIZEOF (QUERY (fj &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'features join') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_CONCEPT_RELATIONSHIP' IN
       TYPEOF (fj.relating_shape_aspect)) AND
       (fj.relating_shape_aspect\shape_aspect.name =
       'stratum feature conductive join'))) = 1);
  WR3: (NOT (SELF\shape_aspect.description = 'component termination passage')) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'component termination passage template'))) = 1);
(*
  WR4: (NOT (SELF\shape_aspect.description = 'component termination passage')) OR
       (SIZEOF (QUERY (at &#60;* associated_terminals(SELF) |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'component termination passage interface terminal')))) &#62;= 0);
  WR5: (NOT (SELF\shape_aspect.description = 'component termination passage')) OR
       (SIZEOF (QUERY (at &#60;* associated_terminals(SELF)|
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'component termination passage join terminal')))) &#62;= 1);
*)
  WR6: (NOT (SELF\shape_aspect.description IN
       ['bonded conductive base blind via',
       'buried via',
       'interfacial connection',
       'non conductive base blind via',
       'plated conductive base blind via'])) OR
       (SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description =
       'via template'))) = 1);
END_ENTITY; -- plated_passage
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The plated_passage shall have a description of 'bonded conductive base
blind via', 'buried via', 'component termination passage', 'interfacial
connection', 'non conductive base blind via', or 'plated conductive base blind
via'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the plated_passage has a description of 'bonded conductive base
blind via', the plated_passage shall be related to exactly one
stratum_concept_relationship with a name of 'stratum feature conductive
join' as a 'features join'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the plated_passage has a description of 
'component termination passage', the plated_passage shall be related to 
exactly one part_template_definition with a description of
'component termination passage template' as an 'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the plated_passage has a description of 'component termination
passage', the plated_passage shall relate to zero or more 
component_shape_aspect that has a description of 'component termination
passage interface terminal' to specify the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the plated_passage has a description of 'component termination
passage', the plated_passage shall relate to at least one
component_terminal that has a description of 'component termination passage
join terminal' to specify the 'associated component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the plated_passage has a description of 'bonded conductive base
blind via', 'buried via', 'interfacial connection', 'non conductive base
blind via', or 'plated conductive base blind via', the plated_passage shall
be related to exactly one part_template_definition with a description of 'via
template' as an 'instantiated template'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3767"
></A
>5.2.3.1.280 position_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A position_tolerance is a physical_unit_geometric_tolerance that implements the
ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Boundary_based_position_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_feature_locating_position_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_feature_relating_position_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Position_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Position_tolerance_with_referenced_datum_system</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Position_tolerance_without_referenced_datum_system</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY position_tolerance
  SUBTYPE OF (physical_unit_geometric_tolerance);
WHERE
  WR1: (NOT(SELF\geometric_tolerance.name = 'boundary based position')) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF));
  WR2: (NOT(SELF\geometric_tolerance.name = 'boundary based position')) OR
       (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM' 
        IN TYPEOF(gtr.related_geometric_tolerance)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'SURFACE_PROFILE_TOLERANCE' 
        IN TYPEOF(gtr.related_geometric_tolerance)) AND
       (gtr.related_geometric_tolerance\geometric_tolerance.name IN ['surface profile',
        'surface profile locating', 'surface profile refinement']) AND
       (gtr\geometric_tolerance_relationship.name = 'profile control')
       )) &#60;= 1);
  WR3: (NOT(SELF\geometric_tolerance.name = 
                              'feature relating position')) OR
       (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       (gtr\geometric_tolerance_relationship.name = 'position refining control') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'POSITION_TOLERANCE' 
        IN TYPEOF(gtr.relating_geometric_tolerance))  AND
       (gtr.relating_geometric_tolerance\geometric_tolerance.name IN
       ['feature locating position', 'feature relating position'])
       )) = 1);
  WR4: (NOT(SELF\geometric_tolerance.name = 
                          'feature locating position')) OR
       (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'POSITION_TOLERANCE' 
        IN TYPEOF(gtr.related_geometric_tolerance))  AND    
       (gtr.related_geometric_tolerance\geometric_tolerance.name = 'feature relating position')
       AND (gtr\geometric_tolerance_relationship.name = 'position refining control')
       )) = 1);
  WR5: (NOT(SELF\geometric_tolerance.name = 
                         'feature relating position')) OR
       (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'POSITION_TOLERANCE' 
        IN TYPEOF(gtr.related_geometric_tolerance))  AND
       (gtr.related_geometric_tolerance\geometric_tolerance.name = 'feature relating position')
       AND (gtr\geometric_tolerance_relationship.name = 'position refining control')
       )) &#60;= 1);
END_ENTITY; -- position_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the position_tolerance has a name of 'boundary based position', it shall be a 
modified_geometric_tolerance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the position_tolerance has a name of 'boundary based position', it shall relate to at most one 
geometric_tolerance_with_specified_datum_system that is a surface_profile_tolerance with a name of 
either 'surface profile', 'surface profile locating', or 'surface profile refinement' to specify 
the 'profile control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the position_tolerance has a name of 'feature relating position', it shall be related as the 
'position refining control' to exactly one position_tolerance with a name of either 'feature 
locating position' or 'feature relating position'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the position_tolerance has a name of 'feature locating position', it shall relate to exactly one 
position_tolerance with a name of 'feature relating position' to specify the 'position refining 
control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the position_tolerance has a name of 'feature relating position', it shall relate to at most one 
position_tolerance with a name of 'feature relating position' to specify the 'position refining 
control'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If position_tolerance is a geometric_tolerance_with_specified_datum_system, it shall have a name of 
either 'position', 'feature relating position', 'feature locating position', or 'boundary based 
position'; otherwise, it shall have the name of either 'position' or 'feature relating position'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the name of the position_tolerance is 'boundary based position', the toleranced_shape_aspect shall 
either be a part_template_definition, lie on the boundary of the shape of the product, or be a 
composite_shape_aspect the 'composing' shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the position_tolerance has a name of 'boundary based position' and it relates to exactly one 
geometric_tolerance_with_specified_datum_system that is a surface_profile_tolerance with a name of 
either 'surface profile', 'surface profile locating', or 'surface profile refinement' to specify 
the 'profile control', the position_tolerance and surface_profile_tolerance shall specify the same 
shape_aspect as their toleranced_shape_aspect.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the position_tolerance has a name of 'boundary based position' and it relates to exactly one 
geometric_tolerance_with_specified_datum_system that is a surface_profile_tolerance with a name of 
either 'surface profile', 'surface profile locating', or 'surface profile refinement' to specify 
the 'profile control', the physical_unit_datum of the datum_system referenced by the 
surface_profile_tolerance shall also be physical_unit_datum of the datum_system referenced by the 
position_tolerance and shall be assigned the same precedence.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP5: </SPAN
>If the position_tolerance has a name of 'boundary based position' and it relates to exactly one 
geometric_tolerance_with_specified_datum_system that is a surface_profile_tolerance with a name of 
either 'surface profile', 'surface profile locating', or 'surface profile refinement' to specify 
the 'profile control', the position_tolerance shall relate to a property_definition that has a description of 
'profile related positional boundary property' to specify the 'defined boundary'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP6: </SPAN
>If the position_tolerance has a name of 'boundary based position' and it does not relate to a 
geometric_tolerance_with_specified_datum_system that is a surface_profile_tolerance with a name of 
either 'surface profile', 'surface profile locating', or 'surface profile refinement' to specify 
the 'profile control', the position_tolerance shall relate to a property_definition that has a description of 
'positional boundary member property' to specify the 'defined boundary'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP7: </SPAN
>If the name of the position_tolerance is 'feature locating position', the toleranced_shape_aspect 
shall be a composite_group_shape_aspect.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP8: </SPAN
>If the position_tolerance has a name of 'feature relating position', it shall be related as the 
'position refining control' to exactly one position_tolerance with a name of either 'feature 
locating position' or 'feature relating position'. Both of these position_tolerances 
shall specify the same shape_aspect as the toleranced_shape_aspect.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP9: </SPAN
>If the position_tolerance is not a geometric_tolerance_with_specified_datum_system and has a name 
of 'feature relating position', it shall not relate to a position_tolerance with a name of 
'feature relating position' to specify the 'position refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP10: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is related as the 
'position refining control' to exactly one position_tolerance with a name of 'feature relating 
position', it shall either not reference a datum_system or it shall have less physical_unit_datum 
in its referenced datum_system than the datum_system referenced by the position_tolerance to which 
it is related as the 'position refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP11: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is related as the 
'position refining control' to exactly one position_tolerance with a name of 'feature locating 
position', it shall either not reference a datum_system or it shall have less than or an equal 
number of physical_unit_datum in its referenced datum_system than the datum_system referenced by 
the position_tolerance to which it is related as the 'position refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP12: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is a 
geometric_tolerance_with_specified_datum_system, the physical_unit_datum of its referenced 
datum_system shall be physical_unit_datum of the datum_system of the position_tolerance to which it 
is related as the 'position refining control' and shall be assigned the same precedence.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP13: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is a 
geometric_tolerance_with_specified_datum_system that relates to a property_definition of a datum_system that 
has the description of 'datum system property without material conditions' to specify its 
'referenced datum system definition', the position_tolerance to which it is related as the 
'position refining control' shall also be a geometric_tolerance_with_specified_datum_system that 
relates to a property_definition of a datum_system that has the description of 'datum system property without 
material conditions' to specify its 'referenced datum system definition'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP14: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is a 
geometric_tolerance_with_specified_datum_system that relates to a property_definition of a datum_system that 
has the description of 'datum system property with material conditions' to specify its 'referenced 
datum system definition', the position_tolerance to which it is related as the 'position refining 
control' shall also be a geometric_tolerance_with_specified_datum_system that relates to a property_definition 
of a datum_system that has the description of 'datum system property with material conditions' to 
specify its 'referenced datum system definition', and each of these property_definition shall relate to 
property_definition with a description of 'datum feature material condition property' to specify their 
'applied material condition property'. These property_definition shall be applied to 
physical_unit_datum_features in the context of the datum_systems referenced by each of the 
position_tolerance. The name of the property_definition applied to each of the physical_unit_datum_feature in 
the context of the datum_system referenced by this position_tolerance shall be the same as the name 
of the property_definition applied to the same physical_unit_datum_feature in the context of the datum_system 
referenced by the position_tolerance to which this position_tolerance is related as the 'position 
refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP15: </SPAN
>If the position_tolerance has a name of 'feature relating position', it shall specify a 
measure_with_unit as its magnitude that is less than the measure_with_unit specified as the 
magnitude of the position_tolerance to which it is related as the 'position refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP16: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is specified as the 
defining_tolerance by a tolerance_zone that has a description of 'conical', the position_tolerance 
that is related to this position_tolerance as the 'position refining control' shall also be 
specified as the defining_tolerance by a tolerance_zone that has a description of 'conical'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP17: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is specified as the 
defining_tolerance by a tolerance_zone that is the zone of a projected_zone_definition, the 
position_tolerance that is related to this position_tolerance as the 'position refining control' 
shall also be specified as the defining_tolerance by a tolerance_zone that is the zone of a 
projected_zone_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP18: </SPAN
>If the position_tolerance has a name of 'feature relating position' and it is specified as the 
defining_tolerance by a tolerance_zone that has a property_definition with the description of 
'tolerance zone orientation' , the position_tolerance that is related to this position_tolerance as 
the 'position refining control' shall also be specified as the defining_tolerance by a 
tolerance_zone that has a property_definition with the description of 'tolerance zone orientation'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP19: </SPAN
>If the position_tolerance has a name of 'feature relating position' and its tolerance_zone_boundary 
has a description of 'conical', the position_tolerance that is related to this position_tolerance 
as the 'position refining control' shall also have a tolerance_zone_boundary that has a description 
of 'conical'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP20: </SPAN
>If the position_tolerance has a name of 'feature relating position' and its tolerance_zone_boundary 
has a description of 'circular or cylindrical or spherical', the position_tolerance that is related 
to this position_tolerance as the 'position refining control' shall also have a 
tolerance_zone_boundary that has a description of 'circular or cylindrical or spherical'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP21: </SPAN
>If the position_tolerance has a name of 'feature relating position' and its tolerance_zone_boundary 
is a tolerance_zone_explicit_opposing_boundary_set, the position_tolerance that is related to this 
position_tolerance as the 'position refining control' shall also have a tolerance_zone_boundary 
that is a tolerance_zone_explicit_opposing_boundary_set.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP22: </SPAN
>If the position_tolerance has a name of 'feature relating position' and its tolerance_zone_boundary 
is a tolerance_zone_implicit_opposing_boundary_set, the position_tolerance that is related to this 
position_tolerance as the 'position refining control' shall also have a tolerance_zone_boundary 
that is a tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP23: </SPAN
>The toleranced_shape_aspect of the position_tolerance shall either lie on the 
boundary of the shape of the product; be a centre_of_symmetry with a description of 
either 'axis', 'plane', or 'point'; be a part_template_definition; or be a 
composite_shape_aspect the 'composing' shape_aspects of which either are all of type 
part_template_definition, or are all of type centre_of_symmetry and have the same 
description -- either 'axis', 'plane', or 'point'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP24: </SPAN
>If the toleranced_shape_aspect of the position_tolerance is either a 
centre_of_symmetry with a description of 'plane', or a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'plane'; the tolerance_zone_boundary shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP25: </SPAN
>If the toleranced_shape_aspect of the position_tolerance is either a 
centre_of_symmetry with a description of 'point', or a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'point'; the position_tolerance shall be specified as the defining_tolerance by 
exactly one tolerance_zone that is specified as the zone of a 
tolerance_zone_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3817"
></A
>5.2.3.1.281 positional_boundary</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A positional_boundary is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Dimension_related_positional_boundary</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Positional_boundary</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_related_positional_boundary</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY positional_boundary
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN 
    ['dimension related positional boundary',
  'profile related positional boundary'];

  WR2: SELF\shape_aspect.product_definitional = False;

  WR3: (NOT(SELF\shape_aspect.description = 
           'dimension related positional boundary'))
       OR (SIZEOF(QUERY(sar &#60;* USEDIN(SELF, 
          'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'POSITIONAL_BOUNDARY_MEMBER' IN 
               TYPEOF(sar.related_shape_aspect))
            AND (sar\shape_aspect_relationship.name = 'boundary member'))) &#62;= 1);

  WR4: (NOT(SELF\shape_aspect.description = 
         'dimension related positional boundary'))
       OR (SIZEOF(QUERY(sar &#60;*USEDIN(SELF, 
          'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | (sar.related_shape_aspect.product_definitional = True) AND
            (sar\shape_aspect_relationship.name = 'constrained feature'))) +
           SIZEOF(QUERY(sar &#60;*USEDIN(SELF, 
          'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'PART_TEMPLATE_DEFINITION' IN TYPEOF(sar.related_shape_aspect))
            AND (sar\shape_aspect_relationship.name = 'constrained feature'))
           ) = 1);     

  WR5: (NOT(SELF\shape_aspect.description = 
              'dimension related positional boundary'))
       OR (SIZEOF(QUERY(pd &#60;* USEDIN(SELF,
          'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'PROPERTY_DEFINITION.DEFINITION')        
          | (pd\property_definition.description = 
                'dimension related positional boundary property'))) = 1);

  WR6: (NOT(SELF\shape_aspect.description = 
                  'profile related positional boundary'))
       OR (SIZEOF(QUERY(pd &#60;* USEDIN(SELF,
          'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'PROPERTY_DEFINITION.DEFINITION')        
          | (pd\property_definition.description = 
                  'profile related positional boundary property'))) = 1);
   
  WR7: (NOT(SELF\shape_aspect.description = 
                     'profile related positional boundary'))
       OR (SIZEOF(QUERY(sar &#60;* USEDIN(SELF, 
          'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'POSITIONAL_BOUNDARY_MEMBER' IN TYPEOF(sar.related_shape_aspect))
            AND (sar\shape_aspect_relationship.name = 
               'positional boundary and profile boundary member'))) = 1);
END_ENTITY; -- positional_boundary
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The positional_boundary shall have a description of either 'dimension related positional boundary' 
or 'profile related positional boundary'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The positional_boundary shall not lie on the boundary of the shape of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the description of the positional_boundary is 'dimension related positional boundary', the 
positional_boundary shall relate to at least one positional_boundary_member to specify the 
'boundary member'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the description of the positional_boundary is 'dimension related positional boundary', the  
positional_boundary shall either relate to exactly one shape_aspect that lies on the boundary of 
the shape of the product to specify the 'constrained feature' or relate to exactly one 
part_template_definition to specify the 'constrained feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the description of the positional_boundary is 'dimension related positional_boundary', the 
positional_boundary shall have exactly one property_definition that has the description of 'dimension related 
positional boundary property'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the description of the positional_boundary is 'profile related positional boundary', the 
positional_boundary shall have exactly one property_definition that has the description of 'profile related 
positional boundary property'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the description of the positional_boundary is 'profile related positional boundary' it shall 
relate to exactly one shape_aspect to specify the 'positional boundary and profile boundary member'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3837"
></A
>5.2.3.1.282 positional_boundary_member</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A positional_boundary_member is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Positional_boundary_member</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY positional_boundary_member
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.product_definitional = False;

  WR2: SIZEOF(QUERY(pd &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION')        
       | (pd\property_definition.description = 'positional boundary member property'))
       ) = 1;
  WR3: SIZEOF(QUERY(sar &#60;* USEDIN(SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') 
       | (sar\shape_aspect_relationship.name = 'boundary member') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
          'POSITIONAL_BOUNDARY' IN TYPEOF(sar.relating_shape_aspect))
         AND (sar.relating_shape_aspect\shape_aspect.description =
         'dimension related positional boundary'))) = 1;
END_ENTITY; -- positional_boundary_member
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The positional_boundary_member shall not lie on the boundary of the shape of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The positional_boundary_member shall have exactly one property_definition that has the description of 
'positional boundary member property'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The positional_boundary_member shall be related to exactly one positional_boundary as the 'boundary 
member', and that positional_boundary shall have a description of 'dimension related positional 
boundary'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3847"
></A
>5.2.3.1.283 power_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A power_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Power_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY power_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\power_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = watt;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- power_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The power_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The power_measure_with_unit shall reference an si_unit with a name of watt.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3857"
></A
>5.2.3.1.284 pre_defined_parallel_datum_axis_symbol_3d_2d_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An pre_defined_parallel_datum_axis_symbol_3d_2d_relationship is a volume_shape_intersection 
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Pre_defined_parallel_datum_axis_symbol_3d_2d_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY pre_defined_parallel_datum_axis_symbol_3d_2d_relationship
  SUBTYPE OF (volume_shape_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\volume_shape_intersection || 
       SELF\pre_defined_parallel_datum_axis_symbol_3d_2d_relationship))) = 0;
END_ENTITY; -- pre_defined_parallel_datum_axis_symbol_3d_2d_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The pre_defined_parallel_datum_axis_symbol_3d_2d_relationship shall not be a complex subtype of other than its direct supertypes.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3865"
></A
>5.2.3.1.285 pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship is a volume_shape_intersection 
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship
  SUBTYPE OF (volume_shape_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\volume_shape_intersection || 
       SELF\pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship))) = 0;
END_ENTITY; -- pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship shall not be a complex subtype of other than its direct supertypes.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3873"
></A
>5.2.3.1.286 pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship is a volume_shape_intersection 
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship
  SUBTYPE OF (volume_shape_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\volume_shape_intersection || 
       SELF\pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship))) = 0;
END_ENTITY; -- pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship shall not be a complex subtype of other than its direct supertypes.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3881"
></A
>5.2.3.1.287 pressure_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A pressure_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Pressure_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY pressure_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\pressure_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = pascal;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- pressure_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The pressure_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The pressure_measure_with_unit shall reference an si_unit with a name of pascal.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3891"
></A
>5.2.3.1.288 primary_orientation_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A primary_orientation_feature is a physical_unit_datum_feature that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Primary_orientation_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY primary_orientation_feature
 SUBTYPE OF (physical_unit_datum_feature);
WHERE
  WR1: SELF\shape_aspect.product_definitional = TRUE;
  WR2: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY_BOTTOM_SURFACE' IN
       TYPEOF (it.relating_shape_aspect)) 
       )) &#60;= 1;
  WR3: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY_TOP_SURFACE' IN
       TYPEOF (it.relating_shape_aspect)) 
       )) &#60;= 1;
END_ENTITY; -- primary_orientation_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>A primary_orientation_feature shall be on the surface of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>A primary_orientation_feature shall be associated with no more than one package_body_bottom_surface.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>A primary_orientation_feature shall be associated with no more than one package_body_top_surface.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3901"
></A
>5.2.3.1.289 primary_reference_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A primary_reference_terminal is a package_terminal that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Primary_reference_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY primary_reference_terminal
  SUBTYPE OF (package_terminal);
WHERE
 WR1: SIZEOF(QUERY ( sar &#60;* USEDIN (SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       = 0;
 WR2: SIZEOF(QUERY ( sar &#60;* USEDIN (SELF,
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       &#60;= 1;
END_ENTITY; -- primary_reference_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The primary_reference_terminal shall be referenced by no shape_aspect_relationship with a description of 'precedent feature' as the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The primary_reference_terminal shall be referenced by no more than one shape_aspect_relationship with a description of 'precedent feature' as the relating_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3910"
></A
>5.2.3.1.290 printed_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_component is a component_definition that implements the ARM concepts
of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Layout_macro_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_component</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_connector_component</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_component
  SUPERTYPE OF(layout_macro_component)
  SUBTYPE OF (component_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'layout occurrence';
  WR2: SELF\product_definition.description = 'printed component';
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ &#60;* QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'part template occurrence') |
       SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (pt_occ,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |  
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description IN ['printed part template', 
       'printed part cross section template', 
       'printed connector template']))) = 1)) = 1))) = 0;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'printed component join terminal'))) &#62;= 1))) = 0;
  WR5: (NOT (SELF\product_definition.description = 'printed connector component')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAMINATE_COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 
       'printed connector component interface terminal'))) &#62;= 1))) = 0);
  WR6: (NOT (SELF\product_definition.description = 'printed connector component')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ &#60;* QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'part template occurrence') |
       SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (pt_occ,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |  
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description = 
       'printed connector template'))) = 1)) = 1))) = 0);
  WR7: SIZEOF(QUERY(pd &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |  
        SIZEOF(QUERY(sa &#60;* USEDIN(pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') | 
        SIZEOF(QUERY(sar &#60;* USEDIN(sa, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'COMPONENT_SHAPE_ASPECT' IN TYPEOF(sar.relating_shape_aspect))
        AND (sar\shape_aspect_relationship.name = 'stratum feature implementation')
        AND (sar.relating_shape_aspect.description = 'stratum feature template component'))
        )) &#62;= 1
        )) &#62;= 1 
        )) &#62;= 1;
END_ENTITY; -- printed_component
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_component shall have a frame_of_reference with a name of
'layout occurrence'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_component shall have a description that is 'printed component'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_component shall have exactly one shape_aspect with a name of
'part template occurrence' that is related to a part_template_definition with
a description of 'printed part template', 'printed part cross section
template', or 'printed connector template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The printed_component shall have at least one shape_aspect that is a
component_terminal with a description of 'printed component join terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the printed_component has a description of 'printed connector component', 
it shall have at least one shape_aspect that is a
laminate_component_interface_terminal with a description of 'printed connector component
interface terminal'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the printed_component has a description of 'printed connector component',
it shall have exactly one shape_aspect with a name of 'part
template occurrence' that is related to a part_template_definition with a
description of 'printed connector template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The printed_component shall be associated to at least one component_shape_aspect with a description of 'stratum feature template component' as a 'stratum feature implementation'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3930"
></A
>5.2.3.1.291 printed_component_link</H4
>A printed_component_link is a product_definition and a product_definition_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Printed_component_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_component_link
  SUBTYPE OF (product_definition,product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :&#60;&#62;:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\printed_component_link)) = 0;
  WR5: EXISTS(SELF\product_definition.name);
  WR6: SELF\product_definition.name = '';
  WR7: SELF\product_definition_relationship.name = '';
  WR8: SIZEOF(USEDIN(SELF, 
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) = 1;
END_ENTITY; -- printed_component_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related element shall not be the relating element. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_component_link shall relate to only a component_definition in the related_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_component_link shall relate to only a component_definition in the relating_product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of printed_component_link shall be only printed_component_link, product_definition, and product_definition_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the product_definition supertype shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the product_definition supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The name attribute of the product_definition_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>Each printed_component_link shall be referenced exactly once by a product_definition_relationship related_product_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3944"
></A
>5.2.3.1.292 printed_connector_template_terminal_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_connector_template_terminal_relationship is a shape_aspect and a
shape_aspect_relationship that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Printed_connector_template_terminal_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_connector_template_terminal_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.relating_shape_aspect,
       SELF\shape_aspect_relationship.related_shape_aspect;
WHERE
  WR1: SIZEOF ( QUERY( sar &#60;* USEDIN ( SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (( sar\shape_aspect_relationship.name = 'connector') AND
          (sar.relating_shape_aspect\shape_aspect.description = 
              'printed connector template'))
        )) = 1;
  WR2: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN TYPEOF 
       (SELF\shape_aspect_relationship.relating_shape_aspect)) AND
       (SELF\shape_aspect_relationship.relating_shape_aspect\shape_aspect.description 
        = 'interface terminal'));
  WR3: (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN 
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect)) AND
       (SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description 
        = 'join terminal'));
  WR4: SELF\shape_aspect_relationship.relating_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.related_shape_aspect;
END_ENTITY; -- printed_connector_template_terminal_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of related and relating shape_aspects shall be unique within a population
of printed_connector_template_terminal_relationship.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_connector_template_terminal_relationship shall be related to
a  part_template_definition with a description of 'printed connector template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_connector_template_terminal_relationship shall have a relating_shape_aspect
that is a printed_part_template_terminal with a description of 'interface terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_connector_template_terminal_relationship shall have a related_shape_aspect that is a printed_part_template_terminal with a description of 'join terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The related and relating shape aspects shall not be the same shape_aspect.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3958"
></A
>5.2.3.1.293 printed_part_cross_section_template_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_part_cross_section_template_terminal is a shape_aspect that implements the ARM concept
of <SPAN
CLASS="INTERNALREF"
>Printed_part_cross_section_template_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_part_cross_section_template_terminal
  SUBTYPE OF (printed_part_template_terminal);
WHERE
  WR1: 
       SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'cross section definition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (am.relating_shape_aspect)) AND
       (am.relating_shape_aspect\shape_aspect.description = 
       'printed part cross section template'))) = 1;

  WR2: SIZEOF (QUERY (ga &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL_CONNECTION_ZONE_CATEGORY' IN
       TYPEOF (ga.assigned_group)) AND 
       (ga.assigned_group.name IN  
                       ['area edge segment', 'curve edge segment']))
        )) = 1;
  WR3: SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) &#60;= 1;
  WR4: SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) &#60;= 1;
  WR5: SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) &#60;= 1;
  WR6: SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) &#60;= 1;
  WR7: NOT((SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to right of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to left of terminal')
       ) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
       
  WR8: NOT((SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to top of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to left of terminal')
       ) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
  WR9: NOT((SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to bottom of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to left of terminal')
       ) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
 WR10: NOT((SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to right of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to top of terminal')
       ) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
 WR11: NOT((SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to right of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to bottom of terminal')
       ) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
 WR12: NOT((SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to top of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to bottom of terminal')
       ) |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
END_ENTITY; -- printed_part_cross_section_template_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_part_cross_section_template_terminal shall be related to
exactly one part_template_definition with a description of 'printed part cross section
template' as the 'cross section definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_part_cross_section_template_terminal shall be in exactly one printed_part_template_terminal_connection_zone_category that has a name of 'area edge segment' or 'curve edge segment'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_part_cross_section_template_terminal shall be in no more than one shape_aspect_relationship with a name of 'material to left of terminal' that specifies a printed_part_template_material_link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The printed_part_cross_section_template_terminal shall be in no more than one shape_aspect_relationship with a name of 'material to right of terminal' that specifies a printed_part_template_material_link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The printed_part_cross_section_template_terminal shall be in no more than one shape_aspect_relationship with a name of 'material to top of terminal' that specifies a printed_part_template_material_link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The printed_part_cross_section_template_terminal shall be in no more than one shape_aspect_relationship with a name of 'material to bottom of terminal' that specifies a printed_part_template_material_link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the material link to the left of the terminal exists and the material link to the right of the terminal exists, then they shall not be the same material link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the material link to the left of the terminal exists and the material link to the top of the terminal exists, then they shall not be the same material link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the material link to the left of the terminal exists and the material link to the bottom of the terminal exists, then they shall not be the same material link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the material link to the top of the terminal exists and the material link to the right of the terminal exists, then they shall not be the same material link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>If the material link to the bottom of the terminal exists and the material link to the right of the terminal exists, then they shall not be the same material link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the material link to the top of the terminal exists and the material link to the bottom of the terminal exists, then they shall not be the same material link.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3977"
></A
>5.2.3.1.294 printed_part_template_connected_terminals_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_part_template_connected_terminals_definition is a shape_aspect that
implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Printed_part_template_connected_terminals_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_part_template_connected_terminals_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (mct.related_shape_aspect)) AND
       (mct.related_shape_aspect\shape_aspect.description IN 
       ['interface terminal', 'join terminal']))) &#62;= 2;
END_ENTITY; -- printed_part_template_connected_terminals_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_part_template_connected_terminals_definition shall relate to
at least two printed_part_template_terminals with a description of 'interface
terminal' or 'join terminal' to specify a 'member connected terminal'.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="3988"
></A
>5.2.3.1.295 printed_part_template_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_part_template_link is a stratum_technology_link and shape_aspect_relationship that implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Printed_part_template_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_part_template_link
  SUBTYPE OF (stratum_technology_link,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\property_definition_relationship ||
       SELF\printed_part_template_link || SELF\property_definition ||
       SELF\stratum_technology_link || SELF\shape_aspect_relationship)) = 0;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN 
    TYPEOF(SELF\shape_aspect_relationship.related_shape_aspect);
  WR4: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN 
    TYPEOF(SELF\shape_aspect_relationship.relating_shape_aspect);
  WR5: SELF\shape_aspect_relationship.name = '';
  WR6: SELF\shape_aspect_relationship.description = '';
  WR7: SELF\shape_aspect_relationship.related_shape_aspect.description =
       'printed part template';
  WR8: SELF\shape_aspect_relationship.relating_shape_aspect.description =
       'printed part template';
END_ENTITY; -- printed_part_template_link
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_part_template_link shall not relate to the same shape_aspect through the related and relating attributes.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_part_template_link shall not be any other subtype of shape_aspect_relationship or property_definition or property_definition_relationship. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_part_template_link shall reference only a part_template_definition through the related attribute inherited from shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The printed_part_template_link shall reference only a part_template_definition through the relating attribute inherited from shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The printed_part_template_link name inherited from shape_aspect_relationship shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The printed_part_template_link description inherited from shape_aspect_relationship shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The printed_part_template_link shall reference only a shape_aspect with a description of 'printed part template' through the related attribute inherited from shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The printed_part_template_link shall reference only a shape_aspect with a description of 'printed part template' through the relating attribute inherited from shape_aspect_relationship.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4003"
></A
>5.2.3.1.296 printed_part_template_material</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_part_template_material is a product_definition that implements the ARM concept of: <SPAN
CLASS="INTERNALREF"
>Printed_part_template_material</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_part_template_material
 SUBTYPE OF (product_definition);
WHERE
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition))) = 1)) = 1;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) |
       ((sr_pdr.used_representation\representation.name = 
                'physical characteristics representation')
       AND
       (SIZEOF (sr_pdr.used_representation.items) = 2 )
       AND 
      ( SIZEOF(QUERY (it &#60;* sr_pdr.used_representation.items |
       it\representation_item.name IN ['maximum width', 
                                        'minimum width'])) = 2 ))
       )) = 1)))
       = 0;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\printed_part_template_material)) = 0;
 WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'top')))) &#60;= 1))) = 0;
 WR5: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'bottom')))) &#60;= 1))) = 0;
 WR6: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'left')))) &#60;= 1))) = 0;
 WR7: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'right')))) &#60;= 1))) = 0;
END_ENTITY; -- printed_part_template_material

(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_part_template_material shall have exactly one property_definition that is related to a property_definition of a stratum_technology as the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_part_template_material shall have exactly one representation that has a name of 'physical characteristics representation' and that has two representation items that have names of 'maximum width', 'minimum width'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_part_template_material shall not participate in a complex instance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The printed_part_template_material shall not have more than one top boundary.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The printed_part_template_material shall not have more than one bottom boundary.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The printed_part_template_material shall not have more than one left boundary.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The printed_part_template_material shall not have more than one right boundary.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4017"
></A
>5.2.3.1.297 printed_part_template_material_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_part_template_material_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Printed_part_template_material_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_part_template_material_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.related_shape_aspect, 
       SELF\shape_aspect_relationship.relating_shape_aspect;
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\printed_part_template_material_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SELF\shape_aspect_relationship.related_shape_aspect.of_shape :&#60;&#62;: 
       SELF\shape_aspect_relationship.relating_shape_aspect.of_shape;
  WR8: SELF\shape_aspect_relationship.relating_shape_aspect.description IN
       ['bottom', 'right'];
  WR9: SELF\shape_aspect_relationship.related_shape_aspect.description IN
       ['top', 'left'];
END_ENTITY; -- printed_part_template_material_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The relating_shape_aspect, related_shape_aspect combination shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related boundary shall not be the relating boundary. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_part_template_material_link shall relate to only a template_material_cross_section_boundary in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_part_template_material_link shall relate to only a template_material_cross_section_boundary in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of printed_part_template_material_link shall be only printed_part_template_material_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The shape specified by the related_shape_aspect shall not be the shape specified by the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The description attribute of the relating boundary shall be 'bottom' or 'right'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The description attribute of the related boundary shall be 'top' or 'left'.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4036"
></A
>5.2.3.1.298 printed_part_template_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_part_template_terminal is a shape_aspect that implements the ARM
concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_part_cross_section_template_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_part_template_interface_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_part_template_join_terminal</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Printed_part_template_terminal</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_part_template_terminal
  SUPERTYPE OF (printed_part_cross_section_template_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN ['interface terminal', 'join terminal'];
  WR2: SIZEOF (QUERY (ga &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_TERMINAL_CONNECTION_ZONE_CATEGORY' IN
       TYPEOF (ga.assigned_group))) = 1;
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 
       'connection zone')) &#62;= 1;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) &#62;= 1))) = 0;
  WR5: SIZEOF (QUERY (ad &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated definition') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (ad.relating_shape_aspect)) AND
       ((ad.relating_shape_aspect\shape_aspect.description = 'printed part template')
       OR
       (ad.relating_shape_aspect\shape_aspect.description = 'printed connector template'))
       )) = 1;
  WR6: SIZEOF (QUERY (mct &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION' IN
       TYPEOF (mct.relating_shape_aspect))) &#60;= 1;
END_ENTITY; -- printed_part_template_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_part_template_terminal shall have a description of
'interface terminal' or 'join terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The printed_part_template_terminal shall be in exactly one 
printed_part_template_terminal_connection_zone_category.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The printed_part_template_terminal shall relate to  at least one 
'connection zone'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The printed_part_template_terminal shall have at least one property that
is represented by a shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The printed_part_template_terminal shall be related to exactly one
part_template_definition with a description of 'printed part template' or 'printed
connector template' as the 'associated definition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The printed_part_template_terminal shall be related to at most one
printed_part_template_connected_terminals_definition  as the 'member connected
terminal'.</DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: Inverse cardinality rules required by Application Objects are implemented in rule 
printed_connector_template_terminal_relationship_unique_constraint.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4058"
></A
>5.2.3.1.299 printed_part_template_terminal_connection_zone_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A printed_part_template_terminal_connection_zone_category is a group that
specifies either an area_edge_segment, a curve_edge_segment, a surface_area,
or a surface_point for
a  <SPAN
CLASS="INTERNALREF"
>Printed_part_template_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY printed_part_template_terminal_connection_zone_category
   SUBTYPE OF (group);
WHERE
   WR1: SELF\group.name IN ['area edge segment','curve edge segment',
        'surface area','surface point'];
END_ENTITY; -- printed_part_template_terminal_connection_zone_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The printed_part_template_terminal_connection_zone_category shall have a
name equal to 'area edge segment', 'curve edge segment', 'surface area',
or 'surface point'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4066"
></A
>5.2.3.1.300 probe_access_area</H4
>A probe_access_area is a component_shape_aspect that implements the ARM concepts of  <SPAN
CLASS="INTERNALREF"
>Internal_probe_access_area</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Probe_access_area</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY probe_access_area
  SUBTYPE OF (component_shape_aspect);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
  WR2: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.name = 'interconnect module');
  WR3: SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description =
       'connection zone')) = 1;
  WR4: SIZEOF (QUERY (pli &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'probed layout item') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (pli.related_shape_aspect))) = 1;
  WR5: (NOT (SELF\shape_aspect.description = 
        'internal probe access area')) OR
       (SIZEOF (QUERY (i &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (i.relating_shape_aspect)))) = 1);
END_ENTITY; -- probe_access_area
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name of the product_definition associated with this probe_access_area shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The probe_access_area shall be an aspect of the shape of a component_definition that is a definition with a name of 'interconnect module'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The probe_access_area shall relate to exactly one shape_aspect with a
description of 'connection zone'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The probe_access_area shall relate to exactly one stratum_feature to
specify a 'probed layout item'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the probe_access_area has a description of 'internal probe access
area', the probe_access_area shall be related to exactly one
stratum_feature as the 'implementation'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4078"
></A
>5.2.3.1.301 product_related_characterized_product_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A product_related_characterized_product_category is a 
characterized_product_category and a product_related_product_category 
that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Ee_product_related_characterized_product_category</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY product_related_characterized_product_category
  SUBTYPE OF (characterized_product_category, 
              product_related_product_category);
END_ENTITY; -- product_related_characterized_product_category
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4084"
></A
>5.2.3.1.302 product_specific_parameter_value_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A product_specific_parameter_value_assignment is a 
characterized_product_category and a product_related_product_category 
that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Ee_product_specific_parameter_value_assignment</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY product_specific_parameter_value_assignment
  SUBTYPE OF (product_related_characterized_product_category); 
WHERE
  WR1: SIZEOF(SELF\product_related_product_category.products) = 1;
  WR2: SIZEOF(QUERY(pd &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.description = 
                                'product category parameter') AND
       (SIZEOF(QUERY(pdr &#60;* USEDIN(pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MODEL_PARAMETER',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'] *
       TYPEOF (pdr.used_representation)) = 1))) = 1))) = 1;
  WR3: SIZEOF(QUERY(pcr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY') |
       ((pcr\product_category_relationship.description = 
                                  'product value assignment') AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY') IN 
       TYPEOF (pcr.category))
       ))) = 1;
END_ENTITY; -- product_specific_parameter_value_assignment
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>There shall be exactly one product in the role of products.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>It shall be the definition of exactly one property_definition with a description of 
'product category parameter' that is the definition of a 
property_definition_representation with a used_representation that is
a representation that has in its items exactly one model_parameter, 
exactly one measure_representation_item, or exactly one descriptive_representation_item. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>It shall be the sub_category of exactly one category that is a product_related_product_category,
and the product_category_relationship establishing the sub_category relationship shall have
a description of 'product value assignment'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4094"
></A
>5.2.3.1.303 promissory_usage_in_product_model</H4
>A promissory_usage_in_product_model is a group that participates in an assignment to indicate that a product_definition is to be associated with a product_model.  The promissory_usage_in_product_model string attributes may be populated with 'undefined' to indicate there is no requirement associated with these attributes.<DIV
CLASS="NOTE"
><P
></P
>NOTE: The group entity is provided for structural consistency with other parts of this standard.</DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY promissory_usage_in_product_model
 SUBTYPE OF (group);
WHERE
   WR1: SIZEOF( QUERY(aga &#60;* USEDIN(SELF,
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'GROUP_ASSIGNMENT.ASSIGNED_GROUP') | 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'APPLIED_PROMISSORY_USAGE_IN_PRODUCT_MODEL_ASSIGNMENT' IN TYPEOF(aga))
           ) &#62;= 1;
END_ENTITY; -- promissory_usage_in_product_model
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The promissory_usage_in_product_model shall be referenced by an applied_promissory_usage_in_product_model_assignment.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4101"
></A
>5.2.3.1.304 rectangular_array_placement_group_component_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An rectangular_array_placement_group_component_definition is a array_placement_group_component_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Rectangular_array_placement_group</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rectangular_array_placement_group_component_definition
  SUBTYPE OF (array_placement_group_component_definition);
END_ENTITY; -- rectangular_array_placement_group_component_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4107"
></A
>5.2.3.1.305 rectangular_array_placement_group_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An rectangular_array_placement_group_component_shape_aspect is a array_placement_group_component_shape_aspect that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Rectangular_array_placement_group</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rectangular_array_placement_group_component_shape_aspect
  SUBTYPE OF (array_placement_group_component_shape_aspect);
END_ENTITY; -- rectangular_array_placement_group_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4113"
></A
>5.2.3.1.306 rectangular_composite_array_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A rectangular_composite_array_shape_aspect is a composite_shape_aspect that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Part_rectangular_array_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rectangular_composite_array_shape_aspect
  SUBTYPE OF (composite_array_shape_aspect);
END_ENTITY; -- rectangular_composite_array_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4119"
></A
>5.2.3.1.307 reference_packaged_part_assembly_implementation</H4
>A reference_packaged_part_assembly_implementation is a physical_unit.  A reference_packaged_part_assembly_implementation implements the ARM concept of a <SPAN
CLASS="INTERNALREF"
>Reference_packaged_part_assembly_implementation</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY reference_packaged_part_assembly_implementation
 SUBTYPE OF (physical_unit);
WHERE
  WR1: (SIZEOF (QUERY (prpc &#60;* 
       USEDIN (SELF.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1) AND
       (SELF\product_definition.name = 'assembly module');
  WR2: (NOT (SELF.frame_of_reference.name = 'physical design')) OR
       (SIZEOF (QUERY (du &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_ASSEMBLY_DEFINITION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_ASSEMBLY_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name =
       'assembly module') AND
       (SIZEOF (QUERY (prpc &#60;*
       USEDIN (du.relating_product_definition.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1)
       )) = 1);
END_ENTITY; -- reference_packaged_part_assembly_implementation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The reference_packaged_part_assembly_implementation name shall be 'assembly model' and it shall be a definition of a product that is classified as an 'template model'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the reference_packaged_part_assembly_implementation is a physical design, it shall relate to exactly
one reference_packaged_part_assembly_implementation, externally_defined_reference_packaged_part_assembly_implementation, or 
library_defined_reference_packaged_part_assembly_implementation that is a physical design usage with a 
frame_of_reference name of 'assembly module' as the design usage.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4127"
></A
>5.2.3.1.308 reference_packaged_part_interconnect_implementation</H4
>A reference_packaged_part_interconnect_implementation is a physical_unit that implements the ARM concept
of <SPAN
CLASS="INTERNALREF"
>Reference_packaged_part_interconnect_implementation</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY reference_packaged_part_interconnect_implementation
 SUBTYPE OF (physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: (SIZEOF (QUERY (prpc &#60;*
       USEDIN (SELF.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1) AND
       (SELF\product_definition.name = 'interconnect module');
  WR3: SIZEOF (QUERY (du &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_PHYSICAL_UNIT', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIBRARY_DEFINED_PHYSICAL_UNIT'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name =
       'interconnect module') AND
       (SIZEOF (QUERY (prpc &#60;*
       USEDIN (du.relating_product_definition.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) &#62;= 1) 
       )) &#60;= 1;
  WR4: SELF.frame_of_reference.name = 'physical design';
END_ENTITY; -- reference_packaged_part_interconnect_implementation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name attribute shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The reference_packaged_part_interconnect_implementation name shall be 'interconnect module' and it shall be a definition of a product that is classified as an 'template model'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The reference_packaged_part_interconnect_implementation shall relate to no more than one physical_unit, externally_defined_physical_unit, or library_defined_physical_unit that is a physical design usage with a name of 'interconnect module' as the design usage, and that is a 'template model'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The reference_packaged_part_interconnect_implementation shall be in the 'physical design' context.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4137"
></A
>5.2.3.1.309 requirement_allocation_group</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A requirement_allocation_group is a group and a property_definition_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Requirement_allocation</SPAN
> and <SPAN
CLASS="INTERNALREF"
>Test_requirement_allocation</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY requirement_allocation_group
  SUBTYPE OF (group, property_definition_relationship);
WHERE
  WR1: (SIZEOF (QUERY (aga &#60;* QUERY (ga &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_FORMATION',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONFIGURATION_ITEM'] * TYPEOF (aga.items)) = 1))) = 1);

  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN TYPEOF 
   (SELF\property_definition_relationship.relating_property_definition);

  WR4: NOT(SELF\property_definition_relationship.related_property_definition.description = 'test requirement') OR
       (SIZEOF (QUERY (aga &#60;* QUERY (ga &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION'] * TYPEOF (aga.items)) = 1))) &#62;= 1);
END_ENTITY; -- requirement_allocation_group
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The requirement_allocation_group shall be assigned to exactly one item that is a configuration_item, product, or product_definition_formation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The requirement_allocation_group shall reference a requirements_property as the relating_property_definition. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the property_definition_relationship references a property_definition with a description of 'test requirement' the requirement_allocation_group shall be assigned to more than one property_definition_representation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4148"
></A
>5.2.3.1.310 requirement_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
An requirement_definition is a product_definition that implements the ARM concepts of: <SPAN
CLASS="INTERNALREF"
>Requirement_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY requirement_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs &#60;* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) &#60;= 1);
  WR2: SIZEOF (QUERY (adta &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) &#62;= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\requirement_definition))) = 0;
  WR7: SIZEOF (QUERY (prpc &#60;* USEDIN (SELF.formation.of_product,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'requirements model')) &#62;= 1;
END_ENTITY; -- requirement_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the requirement_definition is a product_definition_with_associated_documents,
there shall be at most one document in the set of documentation_ids that has a
product_data_type of 'CAD filename'</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The requirement_definition shall have exactly one creation date.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The requirement_definition shall have exactly one approval.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The requirement_definition shall have at least one organization or 
person_and_organization as the creator.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The requirement_definition shall have exactly one security_classification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The requirement_definition shall not be any other type of product_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The requirement_definition shall have a product_category with a name of 'requirements model'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4162"
></A
>5.2.3.1.311 requirements_property</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A requirements_property is a property_definition that implements the ARM
concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Constraint_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Design_characteristic_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Design_requirement_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Ee_requirement_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Electrical_requirement_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Electromagnetic_requirement_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Interface_requirement_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Material_electrical_conductivity_requirement_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Part_based_constraint_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Purpose_occurrence</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Thermal_requirement_occurrence</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY requirements_property
  SUBTYPE OF (property_definition);
WHERE
  WR1: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'requirements property composition')) &#60;= 1;
  WR2: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'requirements description'))) = 1)) &#60;= 1;
  WR3: SIZEOF (QUERY (dr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EE_SPECIFICATION' IN 
       TYPEOF (dr.assigned_document))) &#62;= 1;
  WR4: NOT(EXISTS(SELF\property_definition.description)) OR
       (NOT (SELF\property_definition.description IN ['constraint', 
        'part based constraint']) OR
       (SIZEOF (QUERY (dc &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'design constraint') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_DEFINITION' IN 
       TYPEOF (dc.relating_property_definition.definition))) = 1));
  WR5: NOT(EXISTS(SELF\property_definition.description)) OR
       (NOT (SELF\property_definition.description = 
          'part based constraint') OR
       (SIZEOF (QUERY (cp &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'constraining part') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP' IN
       TYPEOF (cp.relating_property_definition.definition)) AND
       (cp.relating_property_definition.definition\product_definition_relationship.name = 
       'constraining part') AND
   (cp.relating_property_definition.definition.related_product_definition.
       frame_of_reference.name = 'design requirement'))) = 1));
  WR6: NOT(EXISTS(SELF\property_definition.description)) OR
       (NOT (SELF\property_definition.description = 
         'interface requirement') OR
       (SIZEOF (QUERY (itnha &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'interface to next higher assembly') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION' IN
       TYPEOF (itnha.relating_property_definition.definition)) AND
    (itnha.relating_property_definition.definition.frame_of_reference.name
       = 'design requirement') AND
       (SIZEOF (QUERY (hai &#60;* QUERY (pdr &#60;* 
       USEDIN (itnha.relating_property_definition.definition,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'higher assembly interface') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (hai,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SPECIFIED_HIGHER_USAGE_OCCURRENCE'  
       IN TYPEOF (pdr))) = 1)) = 1))) = 1));
  WR7: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'requirements name'))) = 1)) = 1;
END_ENTITY; -- requirements_property
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The requirements_property shall be related to at most one property_definition 
as the 'requirements property composition'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The requirements_property shall have at most one representation that
contains a descriptive_representation_item with a name of 'requirements
description'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The requirements_property shall be referenced by at least one ee_specification.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the requirements_property has a description of 'constraint' or 'part
based constraint', it shall be related to exactly one property_definition of a
rule_definition as the 'design constraint'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the requirements_property has a description of 'part based
constraint', it shall be related to exactly one property_definition of a
product_definition_relationship with name of 'constraining part' and a
related_product_definition that has a frame_of_reference name of 'design
requirement' as the 'constraining part'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the requirements_property has a description of 'interface
requirement', it shall be related to exactly one property_definition of a
product_definition that has a frame_of_reference name of 'design requirement',
and that relates exactly one product_definition to a product_definition that
is the component in exactly one specified_higher_usage_occurrence to specify
the 'higher assembly interface', as the 'interface to next higher assembly'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The requirements_property shall have exactly one representation that
contains a descriptive_representation_item with a name of 'requirements
name'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4198"
></A
>5.2.3.1.312 requirements_property_group</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A requirements_property_group is a requirements_property and a group that
implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Requirement_group_occurrence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY requirements_property_group
  SUBTYPE OF (requirements_property, group);
WHERE
  WR1: SIZEOF (QUERY (rpc &#60;* QUERY (pdr &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'requirements property composition') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (rpc.related_property_definition))) &#62;= 1;
END_ENTITY; -- requirements_property_group
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The requirements_property_group shall relate to at least one   
requirements_property as a 'requirements property composition'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4206"
></A
>5.2.3.1.313 resistance_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A resistance_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Resistance_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY resistance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\resistance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = ohm;
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- resistance_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The resistance_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The resistance_measure_with_unit shall reference an si_unit with a name of ohm.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The unit_component shall be an si_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4216"
></A
>5.2.3.1.314 routed_physical_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A routed_physical_component is a component_definition that implements the ARM concept
of <SPAN
CLASS="INTERNALREF"
>Routed_physical_component</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY routed_physical_component
  SUBTYPE OF (component_definition);
WHERE
  WR1: SIZEOF (QUERY (ip &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1;
  WR2: SELF\product_definition.description :&#60;&#62;: 'laminate component';
END_ENTITY; -- routed_physical_component
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The routed_physical_component shall be related, as the 'instantiated part',
to exactly one physical_unit that is in the 'physical design usage'
product_definition_context.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The routed_physical_component shall not have a description of 'laminate component'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4225"
></A
>5.2.3.1.315 routed_printed_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A routed_printed_component is a printed_component that implements the
ARM concept of  <SPAN
CLASS="INTERNALREF"
>Routed_printed_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY routed_printed_component
 SUBTYPE OF (printed_component);
WHERE
  WR1: SIZEOF(QUERY(pd &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF(QUERY(sa &#60;* USEDIN(pd, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (SIZEOF(QUERY(sar &#60;* USEDIN(sa,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PART_TEMPLATE_DEFINITION' IN TYPEOF(sar.relating_shape_aspect))
        AND (sar.relating_shape_aspect\shape_aspect.description = 
            'printed part cross section template')
        AND (sar\shape_aspect_relationship.name = 'instantiated template')
          )) = 1)
         )) = 1)
        )) = 1;
  WR2: SIZEOF(QUERY(csa &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'COMPONENT_SHAPE_ASPECT' IN TYPEOF(csa))      
         AND (SIZEOF(QUERY(sar &#60;* USEDIN(csa, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (SIZEOF(QUERY(pdr &#60;* USEDIN(sar,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(pdr)) AND
        (pdr\product_definition_relationship.name = 'inter stratum extent')      
        )) = 1)
        AND (sar\shape_aspect_relationship.name = 'component extent')
        )) = 1)
        )) = 1;
END_ENTITY; -- routed_printed_component
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The routed_printed_component shall be associated to exactly one
part_template_definition with a description of
'printed part cross section template' as an 'instantiated template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The routed_printed_component shall be associated to exactly one
component_shape_aspect that shall be related to exactly one shape_aspect
that is a shape_aspect for a product_definition_relationship with a name of
'inter stratum extent' to specify a 'component extent'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The routed_printed_component shall have exactly one property that has
exactly one representation.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4236"
></A
>5.2.3.1.316 rule_action</H4
>A rule_action is an action that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_action</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_adoption</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_change_request</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_creation</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_expiration</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_justification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_modification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_rejection</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_request</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_submission</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Rule_supersedence</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_action
  SUBTYPE OF (action);
WHERE
  WR1: SIZEOF (QUERY (aaa &#60;* QUERY (aa &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'ACTION_ASSIGNMENT.ASSIGNED_ACTION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_ACTION_ASSIGNMENT' IN
       TYPEOF (aa)) |
       SIZEOF (QUERY (it &#60;* aaa.items |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_FORMATION' IN 
       TYPEOF (it))
AND (it\product_definition_formation.description = 'rule version'))
)) = 1)) = 1;
  WR2: SIZEOF (QUERY (adta &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'participant date and time')) +
       SIZEOF (QUERY (ada &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'participant date')) = 1;
  WR3: (NOT (SELF\action.name = 'rule justification')) OR
       (SIZEOF (QUERY (ja &#60;* QUERY (ar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ACTION_RELATIONSHIP.RELATED_ACTION') |
       ar\action_relationship.name = 'justified action') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_ACTION' IN
       TYPEOF (ja.relating_action))) = 1);
  WR4: (NOT (SELF\action.name = 'rule modification')) OR
       (SIZEOF (QUERY (mr &#60;* QUERY (ar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ACTION_RELATIONSHIP.RELATED_ACTION') |
       ar\action_relationship.name = 'modification rationale') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_ACTION' IN
       TYPEOF (mr.relating_action)) AND
       (mr.relating_action\action.name = 'rule change request'))) = 1);
  WR5: (NOT (SELF\action.name = 'rule replacement from')) OR
       (SIZEOF (QUERY (rrfa &#60;* QUERY (aa &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'ACTION_ASSIGNMENT.ASSIGNED_ACTION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_REPLACEMENT_FROM_ASSIGNMENT' IN
       TYPEOF (aa)) |
       SIZEOF (QUERY (it &#60;* rrfa.items |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_FORMATION' IN 
       TYPEOF (it))
AND (it\product_definition_formation.description = 'rule version'))
)) = 1)) = 1);
  WR6: (NOT (SELF\action.name = 'rule replacement to')) OR
       (SIZEOF (QUERY (rrta &#60;* QUERY (aa &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'ACTION_ASSIGNMENT.ASSIGNED_ACTION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_REPLACEMENT_TO_ASSIGNMENT' IN
       TYPEOF (aa)) |
       SIZEOF (QUERY (it &#60;* rrta.items |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_FORMATION' IN 
       TYPEOF (it))
AND (it\product_definition_formation.description = 'rule version'))
)) = 1)) = 1);
END_ENTITY; -- rule_action
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_action shall be assigned to exactly one product_definition_formation with a description of 'rule version'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The rule_action shall have exactly one date or one date and time 
with a role of 'participant date' or 'participant date and time'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the rule_action has a name of 'rule justification', it shall be
related to rule_action as the 'justified action'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the rule_action has a name of 'rule modification', it shall be
related to rule_action with a name of 'rule change request' as the
'modification rationale'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the rule_action has a name of 'rule replacement from', it shall be
assigned to exactly one product_definition_formation with a description of 'rule version' 
by a rule_replacement_from_assignment.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the rule_action has a name of 'rule replacement to', it shall be
assigned to exactly one product_definition_formation with a description of 'rule version'
by a rule_replacement_to_assignment.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4270"
></A
>5.2.3.1.317 rule_complex_clause</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A rule_complex_clause is a characterized_object and is an externally_defined_item that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Ee_rule_complex_clause</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_complex_clause 
 SUBTYPE OF (representation);
UNIQUE
 UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_SIMPLE_CLAUSE' IN TYPEOF (rr.rep_1))) &#62;= 1;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_complex_clause)) = 0;
END_ENTITY; -- rule_complex_clause
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within a population of rule_complex_clause.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_complex_clause shall have at least one
representation_relationship that references a
rule_simple_clause.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The rule_complex_clause shall not be a complex instance. </DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4282"
></A
>5.2.3.1.318 rule_conclusion_definition</H4
>A rule_conclusion_definition is a representation that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Ee_rule_conclusion_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_conclusion_definition 
 SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'RULE_DEFINITION' IN TYPEOF
       (pdr.definition.definition))) = 1;
  WR2: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'RULE_SIMPLE_CLAUSE' IN TYPEOF 
       (rr\representation_relationship.rep_1))) &#62;= 1;

  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_conclusion_definition)) = 0;
END_ENTITY; -- rule_conclusion_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_conclusion_definition shall have one
property_definition_representation that references a
rule definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The rule_conclusion_definition shall have at least one
representation_relationship that references a
rule_simple_clause.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The rule_conclusion_definition shall not be a complex instance. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4291"
></A
>5.2.3.1.319 rule_definition</H4
>A rule_definition is a product_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Ee_rule_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_definition 
 SUBTYPE OF (product_definition);
WHERE
  WR1: SELF\product_definition.formation.description = 'rule version';
END_ENTITY; -- rule_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_definition shall reference a product_definition_formation with a description of 'rule version'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4298"
></A
>5.2.3.1.320 rule_function_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A rule_function_definition is a representation that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Ee_rule_function</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_function_definition 
 SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (it &#60;* SELF.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MODEL_PARAMETER' IN
       TYPEOF (it))) &#62;= 1;
  WR2: SIZEOF(QUERY(adf &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       (adf\document_reference.assigned_document.kind\document_type.product_data_type
       = 'reference document') AND
       (SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EE_SPECIFICATION', 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DOCUMENT'] * 
        TYPEOF(adf\document_reference.assigned_document))&#62;=1))) = 1;
  WR3: SIZEOF(QUERY(adf &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       (adf\document_reference.assigned_document.kind\document_type.product_data_type =
       'source code') AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EE_SPECIFICATION' IN 
        TYPEOF(adf\document_reference.assigned_document)))) = 1;
END_ENTITY; -- rule_function_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_function_definition shall contain at least one model_parameter.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The rule_function_definition shall contain exactly one document or ee_specification with a document_type of 'reference document'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The rule_function_definition shall contain exactly one ee_specification with a document_type of 'source code'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The combination of identifier and the item which has a document type of
'reference document' shall be unique for rule_function_definition.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4310"
></A
>5.2.3.1.321 rule_premise_definition</H4
>A rule_premise_definition is a representation that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Ee_rule_premise_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_premise_definition 
 SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'RULE_DEFINITION' IN TYPEOF
       (pdr.definition.definition))) = 1;

  WR2: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'RULE_COMPLEX_CLAUSE' IN TYPEOF 
       (rr\representation_relationship.rep_1))) &#62;= 1;

  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_premise_definition)) = 0;
END_ENTITY; -- rule_premise_definition
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_premise_definition shall have one
property_definition_representation that references a
rule definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The rule_premise_definition shall have at least one
representation_relationship that references a
rule_complex_clause.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The rule_premise_definition shall not be a complex instance. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4319"
></A
>5.2.3.1.322 rule_replacement_from_assignment</H4
>The rule_replacement_from_assignment is an action_assignment that specifies
a rule version which is being superseded in a  <SPAN
CLASS="INTERNALREF"
>Rule_supersedence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_replacement_from_assignment
 SUBTYPE OF (action_assignment);
     items : SET [1:?] OF replacement_from_item;
END_ENTITY; -- rule_replacement_from_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4324"
></A
>5.2.3.1.323 rule_replacement_to_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A rule_replacement_to_assignment is an action_assignment that specifies a
rule version which is superseding another rule version in
a  <SPAN
CLASS="INTERNALREF"
>Rule_supersedence</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_replacement_to_assignment
 SUBTYPE OF (action_assignment);
     items : SET [1:?] OF replacement_to_item;
END_ENTITY; -- rule_replacement_to_assignment
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The assigned_action shall be in the role of a related_action for an
action_relationship where the relating_action is an action that has been
assigned by a rule_replacement_from_assignment.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4332"
></A
>5.2.3.1.324 rule_set</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A rule_set is a group that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Rule_set</SPAN
>
 and  <SPAN
CLASS="INTERNALREF"
>Rule_set_group</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_set 
 SUBTYPE OF (group);
UNIQUE
  UR1: SELF\group.name;
WHERE
  WR1: (SIZEOF (QUERY (aga &#60;* QUERY (ga &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT' IN 
       TYPEOF (ga)) |
       SIZEOF (QUERY (rd &#60;* QUERY (it &#60;* aga.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_DEFINITION' IN
       TYPEOF (it)) |
       SIZEOF (QUERY (pd &#60;* USEDIN (rd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'rule priority')) &#62;= 1)) &#62;= 1)) &#62;= 1)) &#62;= 1) OR
       (SIZEOF (QUERY (rsge &#60;* QUERY (gr &#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'GROUP_RELATIONSHIP.RELATING_GROUP') |
       gr\group_relationship.name = 'rule set group element') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_SET' IN
       TYPEOF (rsge.related_group))) &#62;= 2);
END_ENTITY; -- rule_set
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_set shall be assigned to at least one rule_definition that has
at least one property that has at least one representation with a name of
'rule priority', or it shall relate to at least one rule_sets to specify a 'rule set
group element'.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4344"
></A
>5.2.3.1.325 rule_simple_clause</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A rule_simple_clause is a representation that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Ee_rule_simple_clause</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY rule_simple_clause 
 SUBTYPE OF (representation);
UNIQUE
 UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION' IN
       TYPEOF (rr.rep_2))) &#62;= 1;
  WR2: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'RULE_FUNCTION_DEFINITION' IN TYPEOF (rr.rep_1))) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_simple_clause)) = 0;
END_ENTITY; -- rule_simple_clause
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique within a population of rule_simple_clause. </DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The rule_simple_clause shall have at least one
representation_relationship that references a
parameter_assignment_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The rule_simple_clause shall have exactly one
representation_relationship that references a rule_function_definition.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The rule_simple_clause shall not be a complex instance. </DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4357"
></A
>5.2.3.1.326 scalar_terminal_definition_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A scalar_terminal_definition_link is a shape_aspect and a shape_aspect_relationship that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Scalar_terminal_definition_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY scalar_terminal_definition_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
UNIQUE
  UR1: related_shape_aspect, relating_shape_aspect;
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :&#60;&#62;:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\scalar_terminal_definition_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SELF\shape_aspect_relationship.relating_shape_aspect\shape_aspect.description = 'scalar terminal';
  WR8: SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description = 'scalar terminal';
END_ENTITY; -- scalar_terminal_definition_link 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related_shape_aspect in combination with the relating shape_aspect shall be unique. </DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The related point shall not be the relating point. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The scalar_terminal_definition_link shall relate to only a functional_unit_terminal_definition in the related_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The scalar_terminal_definition_link shall relate to only a functional_unit_terminal_definition in the relating_shape_aspect.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The types of scalar_terminal_definition_link shall be only scalar_terminal_definition_link, shape_aspect, and shape_aspect_relationship.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The name attribute of the shape_aspect supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The name attribute of the shape_aspect_relationship supertype shall be an empty string.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The scalar_terminal_definition_link shall relate to only a functional_unit_terminal_definition in the relating_shape_aspect that has a description of 'scalar terminal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The scalar_terminal_definition_link shall relate to only a functional_unit_terminal_definition in the related_shape_aspect that has a description of 'scalar terminal'.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4375"
></A
>5.2.3.1.327 scattering_parameter_measure_with_unit</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A scattering_parameter_measure_with_unit is a measure_with_unit that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Scattering_parameter_measure_with_unit</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY scattering_parameter_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\scattering_parameter_measure_with_unit))) = 0;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.RATIO_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- scattering_parameter_measure_with_unit
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The scattering_parameter_measure_with_unit shall not be any other type of measure_with_unit.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The unit_component shall be a ratio_unit.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4384"
></A
>5.2.3.1.328 seating_plane</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
The seating_plane is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Seating_plane</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY seating_plane
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
         SELF\seating_plane)) = 0;
END_ENTITY; -- seating_plane
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The seating_plane shall not be any other subtype of shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4392"
></A
>5.2.3.1.329 secondary_orientation_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A secondary_orientation_feature is a physical_unit_datum_feature that implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Secondary_orientation_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY secondary_orientation_feature
 SUBTYPE OF (physical_unit_datum_feature);
WHERE
 WR1:SIZEOF ((TYPEOF (SELF)) * 
      ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRIMARY_ORIENTATION_FEATURE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SEATING_PLANE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VIEWING_PLANE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT_DATUM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT']) = 0;
 WR2: SELF.product_definitional = TRUE;
 WR3: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY_BOTTOM_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) &#60;= 1;
 WR4: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY_TOP_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) &#60;= 1;
END_ENTITY; -- secondary_orientation_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The secondary_orientation_feature shall not be a primary_orientation_feature,
a seating_plane, a viewing_plane, a component_shape_aspect, or
a physical_unit_datum.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>A secondary_orientation_feature shall be on the surface of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>A primary_orientation_feature shall be associated with no more than one package_body_bottom_surface.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>A primary_orientation_feature shall be associated with no more than one package_body_top_surface.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4403"
></A
>5.2.3.1.330 sequential_laminate_passage_based_fabrication_joint</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A sequential_laminate_passage_based_fabrication_joint is a shape_aspect that 
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Interconnect_module_product_assembly_view_fabrication_joint</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY sequential_laminate_passage_based_fabrication_joint
  SUBTYPE OF (shape_aspect);
END_ENTITY; -- sequential_laminate_passage_based_fabrication_joint
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4409"
></A
>5.2.3.1.331 shape_formed_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A shape_formed_terminal is an altered_package_terminal that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Shape_formed_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY shape_formed_terminal
   SUBTYPE OF (altered_package_terminal);
WHERE
 WR1: (SIZEOF (QUERY (ada &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EE_SPECIFICATION' IN
       TYPEOF (ada.assigned_document)) AND
       (ada.assigned_document.kind\document_type.product_data_type =
       'lead form specification') AND
       (SIZEOF (QUERY (dr &#60;* USEDIN (ada.assigned_document,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DOCUMENT_RELATIONSHIP.RELATED_DOCUMENT') |
       dr.relating_document.kind\document_type.product_data_type =
       'material specification')) = 1))) = 1);
END_ENTITY; -- shape_formed_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The shape_formed_terminal shall have exactly one document_reference where the assigned_document is an
ee_specification with a product_data_type of 'lead form specification' and is
related to a document with a product_data_type of 'material specification'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4417"
></A
>5.2.3.1.332 shape_modification</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A shape_modification is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Design_intent_modification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Electrical_isolation_removal_structure</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Filled_area_material_removal_structure</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Material_addition_feature</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Material_removal_feature</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Material_shape_modification</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Thermal_isolation_removal_structure</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY shape_modification
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (dim &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design intent') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (dim.relating_shape_aspect))) = 1;
  WR2: (SIZEOF (QUERY (pd&#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pd)) AND
       (pd\property_definition.description = 'modification causal'))) = 1) OR
       (SIZEOF (QUERY (mcf &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'modification causal feature') |
       (SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_INTERFACE_TERMINAL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE'] *
       TYPEOF (mcf.relating_shape_aspect)) = 1) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM' IN
       TYPEOF (mcf.relating_shape_aspect.of_shape.definition)))) = 1);
  WR3: (NOT (SELF\shape_aspect.description IN ['electrical isolation removal',
         'thermal isolation removal'])) OR (SIZEOF(
          QUERY ( pd &#60;* USEDIN(SELF,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'PROPERTY_DEFINITION.DEFINITION') | 
         (pd\property_definition.name = 'spacing requirement')  AND
         (SIZEOF(QUERY (pdr &#60;* USEDIN(pd,
         'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
   'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')|
         (pdr\property_definition_relationship.name = 'spacing requirement') AND
         ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'REQUIREMENTS_PROPERTY' IN
         TYPEOF(pdr.relating_property_definition)))) = 1) ))
                = 1);
  WR4: (NOT (SELF\shape_aspect.description IN ['electrical isolation removal',
       'thermal isolation removal'])) OR
       (SIZEOF (QUERY (di &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design intent') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (di.relating_shape_aspect)) AND
       (di.relating_shape_aspect\shape_aspect.description IN ['conductive filled area',
       'connected filled area']))) = 1);
  WR5: (NOT (SELF\shape_aspect.description = 'thermal isolation removal')) OR
       (SIZEOF (QUERY (pd&#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pd)) AND
       (pd\property_definition.description = 'angular orientation requirement'))) = 1);
  WR6: (NOT (SELF\shape_aspect.description = 'thermal isolation removal')) OR
       (SIZEOF (QUERY (pd&#60;* USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pd)) AND
       (pd\property_definition.description = 'effective current capacity requirement'))) = 1);
  WR7: (NOT (SELF\shape_aspect.description = 'material addition feature')) OR
       (SIZEOF (QUERY (dim &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material addition shape') |
       (dim.relating_shape_aspect\shape_aspect.description =
       'material addition feature template'))) = 1);
END_ENTITY; -- shape_modification
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The shape_modification shall be related to exactly one stratum_feature as the 'design intent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The shape_modification shall have exactly one requirements_property with
a description of 'modification causal', or it shall be related to exactly one
component_shape_aspect, component_terminal, component_interface_terminal,
stratum_feature, or  shape_aspect of a stratum as the 'modification causal
feature'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the shape_modification has a description of 'electrical isolation
removal' or 'thermal isolation removal', it shall have exactly one
requirements_property with a description of 'spacing requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the shape_modification has a description of 'electrical isolation
removal' or 'thermal isolation removal', it shall be related to exactly one
stratum_feature with a description of 'conductive filled area' or 'connected
filled area' as the 'design intent'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the shape_modification has a description of 'thermal isolation
removal', it shall have exactly one requirements_property with the description
of 'angular orientation requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the shape_modification has a description of 'thermal isolation
removal', it shall have exactly one requirements_property with the description
of 'effective current capacity requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the shape_modification has a description of 'material addition feature', it
shall be related to exactly one 'material addition feature template'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4445"
></A
>5.2.3.1.333 shape_representation_relationship_with_transformation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A shape_representation_relationship_with_transformation is a shape_representation_relationship
and a representation_relationship_with_transformation
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Component_part_2d_non_planar_geometric_representation_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY shape_representation_relationship_with_transformation
  SUBTYPE OF (shape_representation_relationship, representation_relationship_with_transformation);
END_ENTITY; -- shape_representation_relationship_with_transformation 
(* </PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4451"
></A
>5.2.3.1.334 shell_based_2d_wireframe_shape_representation</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A shell_based_2d_wireframe_shape_representation is a shape_representation that
implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Shell_based_2d_wireframe</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY shell_based_2d_wireframe_shape_representation
  SUBTYPE OF (shape_representation);
WHERE
  WR1: SIZEOF (QUERY (it &#60;* SELF\representation.items |
       NOT (SIZEOF ( 
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_2D'] *
       TYPEOF (it)) = 1))) = 0;
  WR2: SIZEOF (QUERY (it &#60;* SELF\representation.items |
       SIZEOF ( 
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM'] * 
       TYPEOF (it)) = 1)) &#62;= 1;
  WR3: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;* 
       sbwm\shell_based_wireframe_model.sbwm_boundary |                  
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
       NOT (SIZEOF (QUERY (eloop &#60;* QUERY (wsb &#60;*
       ws\wire_shell.wire_shell_extent |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_LOOP' IN TYPEOF (wsb)) | 
       NOT (SIZEOF (QUERY (el &#60;* eloop\path.edge_list |
       NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_CURVE' IN
       TYPEOF (el.edge_element)))) = 0))) = 0))) = 0))) = 0;
  WR4: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;*
       sbwm\shell_based_wireframe_model.sbwm_boundary |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
       NOT (SIZEOF (QUERY (eloop &#60;* QUERY (wsb &#60;*
       ws\wire_shell.wire_shell_extent |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_LOOP' IN TYPEOF (wsb)) |
       NOT (SIZEOF (QUERY (pline_el &#60;*  QUERY (el &#60;* eloop\path.edge_list |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'POLYLINE' IN
       TYPEOF (el.edge_element\edge_curve.edge_geometry)) |
       NOT (SIZEOF (pline_el.edge_element\edge_curve.
       edge_geometry\polyline.points) &#62; 2))) = 0))) = 0))) = 0))) = 0;
  WR5: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;*
       sbwm\shell_based_wireframe_model.sbwm_boundary |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
       NOT (SIZEOF (QUERY (eloop &#60;* QUERY (wsb &#60;* 
       ws\wire_shell.wire_shell_extent |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_LOOP' IN TYPEOF (wsb)) |
       NOT (SIZEOF (QUERY (el &#60;* eloop\path.edge_list |
       NOT (valid_2d_wireframe_edge_curve
       (el.edge_element\edge_curve.edge_geometry,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN')))) =
       0))) = 0))) = 0))) = 0;
  WR6: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;*
       sbwm\shell_based_wireframe_model.sbwm_boundary |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
       NOT (SIZEOF (QUERY (eloop &#60;* QUERY (wsb &#60;*
       ws\wire_shell.wire_shell_extent |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_LOOP' IN TYPEOF (wsb)) |
       NOT (SIZEOF (QUERY (el &#60;* eloop\path.edge_list |
       NOT (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_POINT' IN
       TYPEOF (el.edge_element.edge_start)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_POINT' IN
       TYPEOF (el.edge_element.edge_end))) )) = 0))) = 0))) = 0))) = 0;
  WR7: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;*
       sbwm\shell_based_wireframe_model.sbwm_boundary |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
       NOT (SIZEOF (QUERY (eloop &#60;* QUERY (wsb &#60;*
       ws\wire_shell.wire_shell_extent |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_LOOP' IN TYPEOF (wsb)) |
       NOT (SIZEOF (QUERY (el &#60;* eloop\path.edge_list |
       NOT ((valid_wireframe_vertex_point 
       (el.edge_element.edge_start\vertex_point.vertex_geometry)) AND
       (valid_wireframe_vertex_point
       (el.edge_element.edge_end\vertex_point.vertex_geometry))))) =
       0))) = 0))) = 0))) = 0;
  WR8: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
       TYPEOF (it)) |
       NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;*
       sbwm\shell_based_wireframe_model.sbwm_boundary |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
       NOT (SIZEOF (QUERY (eloop &#60;* QUERY (wsb &#60;*
       ws\wire_shell.wire_shell_extent |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_LOOP' IN TYPEOF (wsb)) |
       NOT (SIZEOF (QUERY (con_edges &#60;* QUERY (el &#60;* eloop\path.edge_list |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'CONIC' IN
       TYPEOF (el.edge_element\edge_curve.edge_geometry)) | 
       NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'AXIS2_PLACEMENT_2D' IN
       TYPEOF (con_edges.edge_element\edge_curve.
       edge_geometry\conic.position)))) = 0))) = 0))) = 0))) = 0;
  WR9: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
       TYPEOF(it)) |
       NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;*
       sbwm\shell_based_wireframe_model.sbwm_boundary |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
       NOT (SIZEOF (QUERY (vloop &#60;* QUERY (wsb &#60;*
       ws\wire_shell.wire_shell_extent |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_LOOP' IN TYPEOF (wsb)) |
       NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_POINT' IN
       TYPEOF (vloop\vertex_loop.loop_vertex)))) = 0))) = 0))) = 0;
  WR10: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
        TYPEOF(it)) |
        NOT (SIZEOF (QUERY (ws &#60;* QUERY (sb &#60;*
        sbwm\shell_based_wireframe_model.sbwm_boundary |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'WIRE_SHELL' IN TYPEOF (sb)) |
        NOT (SIZEOF (QUERY (vloop &#60;* QUERY (wsb &#60;*
        ws\wire_shell.wire_shell_extent |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_LOOP' IN TYPEOF (wsb)) |
        NOT (valid_wireframe_vertex_point (vloop\vertex_loop.
        loop_vertex\vertex_point.vertex_geometry)))) =
        0))) = 0))) = 0;
  WR11: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
        TYPEOF(it)) |
        NOT (SIZEOF (QUERY (vs &#60;* QUERY (sb &#60;*
        sbwm\shell_based_wireframe_model.sbwm_boundary |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_SHELL' IN TYPEOF (sb)) |
        NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_POINT' IN
        TYPEOF (vs\vertex_shell.vertex_shell_extent.loop_vertex)))) 
        = 0))) = 0;
  WR12: SIZEOF (QUERY (sbwm &#60;* QUERY (it &#60;* SELF\representation.items |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHELL_BASED_WIREFRAME_MODEL' IN
        TYPEOF(it)) |
        NOT (SIZEOF (QUERY (vs &#60;* QUERY (sb &#60;*
        sbwm\shell_based_wireframe_model.sbwm_boundary |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VERTEX_SHELL' IN TYPEOF (sb)) |
        NOT (valid_wireframe_vertex_point (vs\vertex_shell.
        vertex_shell_extent.loop_vertex\vertex_point.vertex_geometry))))
        = 0))) = 0;
  WR13: SIZEOF (QUERY (mi &#60;* QUERY (it &#60;* SELF\representation.items |
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MAPPED_ITEM' IN TYPEOF (it)) |
        NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
        'SHELL_BASED_2D_WIREFRAME_SHAPE_REPRESENTATION' IN
        TYPEOF(mi\mapped_item.mapping_source.mapped_representation)
        ))) = 0;
  WR14: SELF.context_of_items\geometric_representation_context.
        coordinate_space_dimension = 2;
END_ENTITY; -- shell_based_2d_wireframe_shape_representation
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The items in a shell_based_2d_wireframe_shape_representation shall be a
shell_based_wireframe_model, a mapped_item, or an axis2_placement_2d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>At least one of the items in a shell_based_2d_wireframe_shape_representation 
shall be either a shell_based_wireframe_model or a mapped_item.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>Every edge defined for an edge_loop in a shell_based_wireframe_model
shall be an edge_curve.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>Every polyline that underlies an edge in a shell_based_wireframe_model
shall contain more than two distinct points.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The edge_geometry that underlies an edge for a shell_based_wireframe_model 
shall be a line, circle, ellipse, parabola, hyperbola, b_spline_curve,
offset_curve_2d, polyline, or curve_replica and the curves that have a basis
defined by other curves shall be defined consistently. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>Every vertex defined as the start or end vertex for an edge in a 
shell_based_wireframe_model shall be a vertex_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The vertex_geometry that underlies the vertices that define the
boundaries of the edges in an edge_loop for a shell_based_wireframe_model
shall be a cartesian_point or point_replica, and the point_replica shall
replicate either another point_replica or a cartesian_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The position of a conic that underlies an edge in an edge_loop for a
shell_based_wireframe_model shall only be an axis2_placement_2d.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The vertex that defines the vertex_loop which is used as a bound in a
shell_based_wireframe_model shall be a vertex_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The vertex that defines the vertex_loop which is used as a bound in a
shell_based_wireframe_model shall be underlaid by a cartesian_point or 
point_replica, and the point_replica shall replicate either another 
point_replica or a cartesian_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>The vertex that defines the vertex_loop which is used as the 
vertex_shell_extent for a vertex_shell in a shell_based_wireframe_model shall 
be a vertex_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>The vertex that defines the vertex_loop which is used as the 
vertex_shell_extent for a vertex_shell in a shell_based_wireframe_model shall be
underlaid by a cartesian_point or point_replica, and the point_replica shall
replicate either another point_replica or a cartesian_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If there is a mapped_item in a shell_based_2d_wireframe_shape_representation, 
the source of the mapped_item shall be a 
shell_based_2d_wireframe_shape_representation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>The dimensionality of the shell_based_2d_wireframe_shape_representation
is two.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4472"
></A
>5.2.3.1.335 signal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A signal is a characterized_object that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Signal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY signal
  SUBTYPE OF (characterized_object);
WHERE
  WR1: SIZEOF (QUERY (aca &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_CLASSIFICATION_ASSIGNMENT.ITEMS') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SIGNAL_CATEGORY' IN
       TYPEOF (aca.assigned_group))) &#62;= 1;
  WR2: (SIZEOF (QUERY (ada &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc &#60;* USEDIN (ada.assigned_document,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
       duc\document_usage_constraint.subject_element = 'signal category')) = 1)) = 1);
  WR3: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
END_ENTITY; -- signal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The signal shall be classified in at least one signal_category.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The signal shall be referenced by exactly one document that has a usage constraint that identifies the 'signal category'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The signal shall be referenced by exactly one document.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4482"
></A
>5.2.3.1.336 signal_category</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A signal_category is a group and an externally_defined_item that specifies the <SPAN
CLASS="INTERNALREF"
>External_definition</SPAN
>
 for
a  <SPAN
CLASS="INTERNALREF"
>Signal_property</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY signal_category
  SUBTYPE OF (group, externally_defined_item);
WHERE
  WR1: SELF\group.description IN ['signal characteristic category', 
       'signal property category'];
END_ENTITY; -- signal_category
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The signal_category shall have a group description of either 'signal
characteristic category' or 'signal property category'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4491"
></A
>5.2.3.1.337 solid_curve_font</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A solid_curve_font is a pre_defined_curve_font that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Solid_curve</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY solid_curve_font
 SUBTYPE OF (pre_defined_curve_font);
END_ENTITY; -- solid_curve_font
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4497"
></A
>5.2.3.1.338 start_request</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A start_request is a formal notification of a desire to begin a new design
for a product or group of s.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY start_request
 SUBTYPE OF (action_request_assignment);
     items : SET [1:?] OF start_request_item;
END_ENTITY; -- start_request
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4503"
></A
>5.2.3.1.339 start_work</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A start_work identifies the s
that have been fulfilled and, as a result, have established a new version of
a product.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY start_work
 SUBTYPE OF (action_assignment);
     items : SET [1:?] OF work_item;
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DIRECTED_ACTION' IN 
       TYPEOF (SELF.assigned_action);
END_ENTITY; -- start_work
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The start_work shall assign a directed_action.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4511"
></A
>5.2.3.1.340 statistical_dimensional_location</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A statistical_dimensional_location is a dimensional_location that implements
the combination of the ARM concepts  <SPAN
CLASS="INTERNALREF"
>Statistical_dimensional_tolerance</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Dimensional_location</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY statistical_dimensional_location
 SUBTYPE OF (dimensional_location);
END_ENTITY; -- statistical_dimensional_location
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The statistical_dimensional_location shall have exactly one property_definition with a description 
of 'dimensional location property', and that property_definition shall be related to at most one 
property_definition, of a dimensional_location, with a description of 'dimensional location 
property' as the 'substitutable dimension'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The statistical_dimensional_location shall have exactly one property_definition with a description 
of 'dimensional location property', and that property_definition shall relate to a 
requirements_property to specify the 'dimensional tolerance statistical control requirement'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The statistical_dimensional_location shall have exactly one property_definition with a description 
of 'dimensional location property', and if that property_definition is related to a 
property_definition, of a dimensional_location, with a description of 'dimensional location 
property' as the 'substitutable dimension', that dimensional_location shall not be a
statistical_dimensional_location.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>The statistical_dimensional_location shall have exactly one property_definition with a description 
of 'dimensional location property', and if that property_definition is related to a 
property_definition, of a dimensional_location, with a description of 'dimensional location 
property' as the 'substitutable dimension', both the statistical_dimensional_location and the 
dimensional_location shall specify the same two shape_aspects as the related_shape_aspect and the 
relating_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4523"
></A
>5.2.3.1.341 statistical_dimensional_size</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A statistical_dimensional_size is a dimensional_size_property that implements
the combination of the ARM concepts  <SPAN
CLASS="INTERNALREF"
>Statistical_dimensional_tolerance</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Dimensional_size</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY statistical_dimensional_size
 SUBTYPE OF (dimensional_size_property);
WHERE
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 'substitutable dimension'))) 
       &#60;= 1))) &#60;= 1;       
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 
        'dimensional tolerance statistical control requirement')))
       &#60;= 1))) &#60;= 1;       
  WR3: (NOT(SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 'substitutable dimension'))) 
       &#60;= 1))) &#60;= 1))
       OR (NOT(SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (NOT('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STATISTICAL_DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition))) AND
       (pdr\property_definition_relationship.name = 'substitutable dimension'))) 
       &#60;= 1))) &#60;= 1));     
END_ENTITY; -- statistical_dimensional_size
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The statistical_dimensional_size shall be related to at most one dimensional_size as the 
'substitutable dimension'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The statistical_dimensional_size shall relate to a requirements_property to specify the 
'dimensional tolerance statistical control requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the statistical_dimensional_size is related to a dimensional_size, as the 'substitutable 
dimension', that dimensional_size shall not be a statistical_dimensional_size.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the statistical_dimensional_size is related to a dimensional_size as 
the 'substitutable dimension', both the statistical_dimensional_size and the dimensional_size 
shall apply to the same shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4536"
></A
>5.2.3.1.342 statistical_geometric_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A statistical_geometric_tolerance is a physical_unit_geometric_tolerance
that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Statistical_geometric_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY statistical_geometric_tolerance
  SUBTYPE OF (physical_unit_geometric_tolerance);
WHERE
  WR1: SIZEOF(QUERY(gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') | 
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE' IN
       TYPEOF(gtr.relating_geometric_tolerance)) AND
       (gtr\geometric_tolerance_relationship.name = 'substitutable geometric tolerance')
       )) &#60;= 1;
  WR2: SIZEOF(QUERY(pdr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') | 
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF(pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 'geometric tolerance statistical control requirement')
       )) = 1;
  WR3: SIZEOF(QUERY(gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') | 
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STATISTICAL_GEOMETRIC_TOLERANCE' IN
       TYPEOF(gtr.relating_geometric_tolerance)) AND
       (gtr\geometric_tolerance_relationship.name = 'substitutable geometric tolerance')
       )) &#60;= 0;
END_ENTITY; -- statistical_geometric_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The statistical_geometric_tolerance shall be related to at most one 
physical_unit_geometric_tolerance as the 'substitutable geometric tolerance'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The statistical_geometric_tolerance shall relate to exactly one requirements_property to specify 
the 'geometric tolerance statistical control requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The statistical_geometric_tolerance shall be related to exactly zero 
statistical_geometric_tolerance as the 'substitutable geometric tolerance'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the statistical_geometric_tolerance is related to exactly one physical_unit_geometric_tolerance 
as the 'substitutable geometric tolerance', the statistical_geometric_tolerance and the 
physical_unit_geometric_tolerance shall specify the same shape_aspect as their 
toleranced_shape_aspect.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4548"
></A
>5.2.3.1.343 stratum</H4
>A stratum is a product_definition that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Design_layer_stratum</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Documentation_layer_stratum</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Stratum</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum
 SUBTYPE OF (product_definition);
UNIQUE
  UR1: SELF\product_definition.id, SELF\product_definition.formation;
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition))) = 1)) = 1;
  WR3: (SIZEOF (QUERY (ada &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc &#60;* USEDIN (ada.assigned_document,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
       duc\document_usage_constraint.subject_element = 'attachment region size')) = 1)) &#60;= 1) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'stratum usage') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNAL_DEFINITION' IN 
       TYPEOF (tu.relating_property_definition))) = 1)) &#60;= 1);
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = '3d bound volume shape')) &#60;= 1))) 
       = 0;
  WR5: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = 
                  'planar projected shape')) &#60;= 1))) = 0;
  WR6: SIZEOF (QUERY (acu &#60;* QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ASSEMBLY_COMPONENT_USAGE' IN
       TYPEOF (pdr)) |
       acu\product_definition_relationship.name = 'interconnect module stratum assembly relationship'
       )) &#62;= 1;
  WR7: NOT(SELF\product_definition.name = 'design layer') OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition)) AND
       (tu.relating_property_definition.definition\characterized_object.description =
       'design layer'))) = 1)) = 1);
  WR8: NOT(SELF\product_definition.name = 'design layer') OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (sa))) &#62;= 1)) &#62;= 1);
  WR9: NOT(SELF\product_definition.name = 'documentation layer') OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition)) AND
       (tu.relating_property_definition.definition\characterized_object.description =
       'documentation layer'))) = 1)) = 1);
  WR10: NOT(SELF\product_definition.name = 'design layer') OR
       ((NOT(SELF\product_definition.description = 'primary design layer stratum') OR 
       (SIZEOF(QUERY(imps &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa &#60;* USEDIN (imps,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       SIZEOF (QUERY (sar &#60;* USEDIN (sa,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT' IN
       TYPEOF (sar.relating_shape_aspect)) AND 
        (sar.relating_shape_aspect\shape_aspect.description = 
       'interconnect module primary surface'))) &#62;= 0)) &#62;= 0)) = 1)) OR 
       (NOT (SELF\product_definition.description = 'non primary design layer stratum') OR
       (SIZEOF(QUERY(imps &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa &#60;* USEDIN (imps,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       SIZEOF(QUERY (sar &#60;* USEDIN (sa,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT' IN
       TYPEOF (sar.relating_shape_aspect)) AND
        (sar.relating_shape_aspect\shape_aspect.description =
       'interconnect module primary surface'))) &#62;= 0)) &#62;= 0)) = 0)));
END_ENTITY; -- stratum
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique in the context of the version of the product.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall exist.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The stratum shall have exactly one property_definition that is related
to a property_definition of a stratum_technology as the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The stratum shall be referenced by at most one document with a usage
constraint that specifies the 'attachment region size', or it shall have at most
one property that is related to an external_definition as the 'stratum usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The stratum shall have at most one shape_representation with a name of
'3d bound volume shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The stratum shall have at most one shape_representation with a name of
'planar projected shape'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The stratum shall be the component in at least one assembly_component_usage 
as the 'interconnect module stratum assembly relationship'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the stratum is a definition of a product that has a name of 'design layer', it shall have exactly one property_definition that is related to exactly one property_definition of a stratum_technology with a description of 'design layer' as the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the stratum is a definition of a product that has a name of 'design layer', it shall have at least one layer_connection_point.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>If the stratum is a definition of a product that has a name of 
'documentation layer', it shall have exactly one property_definition that is
related to exactly one property_definition of a stratum_technology with a
description of 'documentation layer' as the 'technology usage'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>If the stratum is a definition of a product that has a name of 'design layer', then either the description shall be 'primary design layer stratum' and it shall be assigned to an interconnect module primary surface, or the description shall be 'non primary design layer stratum' and it shall not be assigned to an interconnect module primary surface.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4573"
></A
>5.2.3.1.344 stratum_concept_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A stratum_concept_relationship is a shape_aspect and a 
shape_aspect_relationship that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Dielectric_crossover_area</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Inter_stratum_join_implementation</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Physical_network_supporting_stratum_feature_conductive_join</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Stratum_concept_relationship</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Stratum_feature_conductive_join</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum_concept_relationship
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF (pd))) &#62;= 1; 
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (USEDIN (pd, 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) = 1)) = 1;
  WR3: (NOT (SELF\shape_aspect_relationship.name = 
       'dielectric crossover area')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN 
       TYPEOF (SELF.relating_shape_aspect)) AND
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (SELF.related_shape_aspect)));
  WR4: (NOT (SELF\shape_aspect_relationship.name = 
       'dielectric crossover area')) OR
       (SIZEOF (QUERY (rdc &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'resulting dielectric crossover') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_FEATURE' IN
       TYPEOF (rdc.relating_shape_aspect)))) = 1);
  WR5: (NOT (SELF\shape_aspect_relationship.name = 
       'stratum feature conductive join')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND' IN 
       TYPEOF (SELF.relating_shape_aspect)) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'stratum feature template component')));
  WR6: (NOT (SELF\shape_aspect_relationship.name = 
       'stratum feature conductive join')) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LAND' IN 
       TYPEOF (SELF.related_shape_aspect)) OR
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description = 
       'stratum feature template component')));
  WR7: (NOT (SELF\shape_aspect_relationship.name =
       'stratum feature conductive join')) OR
       (SIZEOF (QUERY (fj &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'features join') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PLATED_PASSAGE' IN
       TYPEOF (fj.related_shape_aspect)) AND
       (fj.related_shape_aspect\shape_aspect.description =
       'bonded conductive base blind via'))) &#60;= 1);
  WR8: (NOT ((SELF\shape_aspect.description =
       'physical network supporting stratum feature conductive join') AND
       (SELF\shape_aspect_relationship.name =
       'stratum feature conductive join'))) OR
       (SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) = 1);
END_ENTITY; -- stratum_concept_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The stratum_concept_relationship shall have at least one requirements_property.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The stratum_concept_relationship shall have exactly one property_definition 
that is represented.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the stratum_concept_relationship has a shape_aspect_relationship name
of 'dielectric crossover area', it shall relate two stratum_features.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the stratum_concept_relationship has a shape_aspect_relationship name
of 'dielectric crossover area', the stratum_concept_relationship shall be
related to exactly one stratum_feature as a 'resulting dielectric crossover'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the stratum_concept_relationship has a shape_aspect_relationship name
of 'stratum feature conductive join', it shall have a relating_shape_aspect
that is either a land or a component_definition with a description of 'stratum
feature template component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the stratum_concept_relationship has a shape_aspect_relationship name
of 'stratum feature conductive join', it shall have a related_shape_aspect
that is either a land or a component_definition with a description of 'stratum
feature template component'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>If the stratum_concept_relationship has a shape_aspect_relationship
name of 'stratum feature conductive join', the stratum_concept_relationship
shall relate to at most one plated_passage that has a description of
'bonded conductive base blind via' to specify the 'features join'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>If the stratum_concept_relationship has a shape_aspect description of
'physical network supporting stratum feature conductive join' and a
shape_aspect_relationship name of 'stratum feature conductive join', the
stratum_concept_relationship shall be related, as the 'join
implementation', to exactly one join_shape_aspect that has a name of 'inter
stratum join'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4598"
></A
>5.2.3.1.345 stratum_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A stratum_feature is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Conductive_filled_area</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Conductor</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Connected_filled_area</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Stratum_feature</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum_feature
  SUPERTYPE OF (fiducial_stratum_feature)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'feature of size') AND
       (it\descriptive_representation_item.description IN 
             ['true', 'false']))) = 1)) = 1))) = 0;
  WR3: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'conductor') OR
       (SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name = 
       'intra stratum join'))) = 1));
  WR4: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'connected filled area') OR
       (SIZEOF (QUERY (ji &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name = 
       'intra stratum join'))) = 1));
  WR5: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'conductor') OR
       (SELF\shape_aspect.of_shape.definition.name = 'design layer'));
  WR6: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'connected filled area') OR
       (SELF\shape_aspect.of_shape.definition.name = 'design layer'));
END_ENTITY; -- stratum_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The stratum_feature shall be an aspect of the shape of a stratum.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The stratum_feature shall have exactly one representation that specifies
if the stratum_feature is a 'feature of size'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the stratum_feature has a description of 'conductor', it shall be related to exactly one join_shape_aspect with a name of 'intra stratum join' as the 'join implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the stratum_feature has a description of 'connected filled area', it
shall be related to exactly one join_shape_aspect with a name of 'intra
stratum join' as the 'join implementation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>If the stratum_feature has a description of 'conductor', it shall be related to a 'design layer'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>If the stratum_feature has a description of 'connected filled area ', it shall be related to a 'design layer'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4619"
></A
>5.2.3.1.346 stratum_occurrence_specific_padstack_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A stratum_occurrence_specific_padstack_definition is a product_definition that implements the ARM concepts of: <SPAN
CLASS="INTERNALREF"
>Stratum_occurrence_specific_padstack_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum_occurrence_specific_padstack_definition 
 SUBTYPE OF (padstack_definition);
END_ENTITY; -- stratum_occurrence_specific_padstack_definition 
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4625"
></A
>5.2.3.1.347 stratum_surface</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A stratum_surface is a shape_aspect that implements the ARM concepts
of  <SPAN
CLASS="INTERNALREF"
>Stratum_surface</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Stratum_average_surface</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum_surface
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: SELF\shape_aspect.description IN ['primary surface',
         'secondary surface', 'average surface']; 
    WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
         'STRATUM' IN TYPEOF(SELF\shape_aspect.of_shape.definition);
END_ENTITY; -- stratum_surface
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The stratum_surface shall have a description of 'primary surface', 
'secondary surface', or 'average surface'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The stratum_surface shall be the shape of a stratum.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4635"
></A
>5.2.3.1.348 stratum_technology</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A stratum_technology is a characterized_object that implements the ARM concepts
of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Design_layer_technology</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Documentation_layer_technology</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Stratum_technology</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum_technology
  SUBTYPE OF (characterized_object);
UNIQUE
  UR1: SELF\characterized_object.name;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
  WR2: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'stiffness class representation')) &#60;= 1))) = 0;
  WR3: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation')) = 1))) = 1;
  WR4: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (scr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 'stratum class representation') |
       NOT (SIZEOF (QUERY (it &#60;* scr.used_representation.items | 
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'laminate stiffness class') AND
       (it\descriptive_representation_item.description IN ['fluid like', 'conformal coat', 
       'stiff laminate']))) = 1))) = 0))) = 0;
  WR5: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT ({2 &#60;= SIZEOF (pcr.used_representation.items) 
        &#60;= 8}))) = 0))) = 0;
  WR6: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items | 
       NOT (it\representation_item.name IN ['layer purpose', 
       'layer position', 
       'maximum feature size requirement', 
       'minimum finished feature spacing', 
       'minimum finished feature size', 
       'maximum thickness',  
       'minimum thickness']))) = 0))) = 0))) = 0;
  WR7: NOT(EXISTS(SELF\characterized_object.description)) OR
       (NOT (SELF\characterized_object.description = 'design layer') OR 
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum finished feature size'))) = 1))) = 0))) = 0));
  WR8: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'maximum thickness'))) = 1))) = 0))) = 0;
  WR9: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum thickness'))) = 1))) = 0))) = 0;
 WR10: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'maximum feature size requirement'))) &#60;= 1))) = 0))) = 0;
 WR11: SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum finished feature spacing'))) &#60;= 1))) = 0))) = 0;
 WR12: NOT(EXISTS(SELF\characterized_object.description)) OR
       ((NOT (SELF\characterized_object.description = 'documentation layer')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'layer purpose'))) = 1))) = 0))) = 0));
 WR13: NOT(EXISTS(SELF\characterized_object.description)) OR
       ((NOT (SELF\characterized_object.description = 'design layer')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum finished feature spacing'))) = 1))) = 0))) = 0));
 WR14: NOT(EXISTS(SELF\characterized_object.description)) OR
       ((NOT (SELF\characterized_object.description = 'design layer')) OR
       (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'layer purpose') AND
       (it\descriptive_representation_item.description IN ['power or ground', 'other signal', 
       'lands only']))) = 1))) = 0))) = 0));
 WR15:  SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr &#60;* QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it &#60;* pcr.used_representation.items |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'layer position') AND
       (it\descriptive_representation_item.description IN [
        'primary', 
        'secondary', 
        'internal', 
        'external', 
        'all']))) = 1))) = 0))) = 0;
 WR16: NOT(EXISTS(SELF\characterized_object.description)) OR
        (SELF\characterized_object.description IN [
         'design layer',
         'documentation layer']);
END_ENTITY; -- stratum_technology
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name shall be unique.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The stratum_technology shall have exactly one material designation.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The stratum_technology shall have at most one representation with a name
of 'stiffness class representation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The stratum_technology shall have exactly one representation with a name
of 'physical characteristics representation'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>Exactly one item in the representation  with a name of 'stiffness class
representation' shall be a descriptive_representation_item with a name of
'laminate stiffness class' and a description of 'fluid like', 'conformal
coat', or 'stiff laminate'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The stratum_technology shall have at least two and at most eight items
in its representation with a name of 'physical characteristics
representation'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The items in the representation with a name of 'physical
characteristics representation' of a stratum_technology shall have a name of
either 'documentation layer purpose', 'design layer purpose', 'design layer
position', 'maximum feature size requirement', 'minimum finished feature
spacing', 'minimum finished feature size', 'maximum stratum thickness', or
'minimum stratum thickness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>Exactly one item in the representation with a name of 'physical
characteristics representation' of a stratum_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'minimum finished feature size'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>Exactly one item in the representation with a name of 'physical
characteristics representation' of a stratum_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'maximum stratum thickness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>Exactly one item in the representation with a name of 'physical
characteristics representation' of a stratum_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'minimum stratum thickness'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>At most one item in the representation with a name of 'physical
characteristics representation' of a stratum_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'maximum feature size requirement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>At most one item in the representation with a name of 'physical
characteristics representation' of a stratum_technology shall be a
measure_representation_item and a length_measure_with_unit with a name of
'minimum finished feature spacing'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR12: </SPAN
>If the stratum_technology has a description of 'documentation layer',
exactly one item in its representation with a name of 'physical
characteristics representation' shall be a descriptive_representation_item
with a name of 'layer purpose'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR13: </SPAN
>If the stratum_technology has a description of 'design layer', exactly
one item in its representation with a name of 'physical characteristics
representation' shall be a measure_representation_item and a
length_measure_with_unit with a name of 'minimum finished feature spacing'. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR14: </SPAN
>If the stratum_technology has a description of 'design layer', exactly
one item in its representation with a name of 'physical characteristics
representation' shall be a descriptive_representation_item with a name of
'layer purpose' and a description of 'power or ground', 'other signal', or
'lands only'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR15: </SPAN
>If the stratum_technology has a description of 'design layer', exactly one item in its representation with a name of 'physical characteristics representation' shall be a descriptive_representation_item with a name of 'layer position' and a description of 'primary', 'secondary', 'all', 'external' or 'internal'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR16: </SPAN
>If the description attribute exists, it shall be either 'design layer' or 'documentation layer'.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4667"
></A
>5.2.3.1.349 stratum_technology_link</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A stratum_technology_link is a property_definition_relationship that implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Stratum_technology_link</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum_technology_link
  SUPERTYPE OF ( printed_part_template_link)
  SUBTYPE OF (property_definition, property_definition_relationship);
WHERE
  WR1: SELF\property_definition_relationship.related_property_definition.definition :&#60;&#62;:
       SELF\property_definition_relationship.relating_property_definition.definition;
  WR2: (SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\property_definition_relationship ||
       SELF\stratum_technology_link || SELF\property_definition)) = 0) OR
        ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_LINK' IN TYPEOF(SELF));
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
    TYPEOF(SELF\property_definition_relationship.related_property_definition.definition);
  WR4: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRATUM_TECHNOLOGY' IN 
    TYPEOF(SELF\property_definition_relationship.relating_property_definition.definition);
  WR5: SELF\property_definition.name = '';
  WR6: SELF\property_definition.description = '';
  WR7: SELF\property_definition_relationship.name = '';
  WR8: SELF\property_definition_relationship.description = '';
  WR9: ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PART_TEMPLATE_DEFINITION' IN TYPEOF(SELF\property_definition.definition)) AND
       (SELF\property_definition.definition.description = 'printed part template');
 WR10: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       pdr.name = 'precedent stratum technology link')) &#60;= 1; 
 WR11: SIZEOF (QUERY (pdr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr.name = 'precedent stratum technology link')) &#60;= 1; 
END_ENTITY; -- stratum_technology_link
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The stratum_technology_link shall not relate to the same property_definition definition through the related and relating
attributes.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The stratum_technology_link shall not be any other subtype of property_definition_relationship or property_definition. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The stratum_technology_link shall reference only a stratum_technology through the related attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The stratum_technology_link shall reference only a stratum_technology through the relating attribute.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The stratum_technology_link name inherited from property_definition shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The stratum_technology_link description inherited from property_definition shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR7: </SPAN
>The stratum_technology_link name inherited from property_definition_relationship shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR8: </SPAN
>The stratum_technology_link description inherited from property_definition_relationship shall be blank.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR9: </SPAN
>The stratum_technology_link shall be referenced exactly once by a part_template_definition that has a description of 'printed part template'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR10: </SPAN
>The stratum_technology_link shall be referenced as a relating_property_definition no more than once by another stratum_technology_link.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR11: </SPAN
>The stratum_technology_link shall be referenced as a related_property_definition no more than once by another stratum_technology_link.</DIV
><DIV
CLASS="NOTE"
><P
></P
>NOTE: The stratum_technology_link that is not referenced as a related_property_definition but that is referenced by a relating_property_definition attribute of a property_definition_relationship with a name of 'precedent stratum technology link' is considered the initial link.  The stratum_technology itself has no instance information and the sequence is only defined for printed part template purposes.  The actual stackup in the interconnect is not formally constrained in this standard.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4686"
></A
>5.2.3.1.350 stratum_type_independent_padstack_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A stratum_type_independent_padstack_definition is a product_definition that implements the ARM concepts of: <SPAN
CLASS="INTERNALREF"
>Stratum_type_independent_padstack_definition</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY stratum_type_independent_padstack_definition 
 SUBTYPE OF (padstack_definition);
END_ENTITY; -- stratum_type_independent_padstack_definition 
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4692"
></A
>5.2.3.1.351 structured_text_representation_context</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A structured_text_representation_context is a context that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Structured_text</SPAN
> in association with the structured_text_representation_item.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY structured_text_representation_context
  SUBTYPE OF (representation_context);
WHERE
  WR1: SIZEOF (QUERY (rep &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION.CONTEXT_OF_ITEMS') | NOT (
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRUCTURED_TEXT_REPRESENTATION_ITEM' IN
       TYPEOF (rep)))) = 0;
END_ENTITY; -- structured_text_representation_context
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The structured_text_representation_context shall only be a context for representations that contain structured_text_representation_items.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4700"
></A
>5.2.3.1.352 structured_text_representation_item</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A structured_text_representation_item is a representation and a descriptive_representation_item
that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Structured_text</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY structured_text_representation_item
  SUBTYPE OF (representation, descriptive_representation_item);
WHERE
  WR1: SIZEOF (QUERY (rr &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'STRUCTURED_TEXT_REPRESENTATION_ITEM' IN
       TYPEOF (rr.rep_1) ))&#60;= 1;
  WR2: SIZEOF (USEDIN (SELF, 
        'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) &#62;= 1;
  WR3: (SIZEOF (QUERY (it &#60;* SELF\representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EXTERNALLY_DEFINED_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) = 1); 
END_ENTITY; -- structured_text_representation_item
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The structured_text_representation_item shall relate to at most one structured_text_representation_item through a representation_relationship. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The structured_text_representation_item shall be referenced by at least one document.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The structured_text_representation_item shall contain exactly one externally_defined_representation_item.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4710"
></A
>5.2.3.1.353 supplied_part_relationship</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A supplied_part_relationship relates the identifications of
two s and specifies that one is the
identification used by the internal design organization and the other is
the identification used by a supplier.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY supplied_part_relationship
 SUBTYPE OF (product_definition_relationship);
WHERE
  WR1: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRODUCT_DEFINITION_FORMATION_WITH_SPECIFIED_SOURCE' IN
       TYPEOF (SELF.related_product_definition.formation);
  WR2: NOT ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION' IN ROLESOF (SELF));
END_ENTITY; -- supplied_part_relationship
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The supplied_part_relationship shall have a related_product_definition
in which the source is specified.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The supplied_part_relationship shall not be the definition of a
product_definition_shape.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4719"
></A
>5.2.3.1.354 surface_prepped_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A surface_prepped_terminal is a package_terminal that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Surface_prepped_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY surface_prepped_terminal
   SUBTYPE OF (altered_package_terminal);
WHERE
WR2: (SIZEOF (QUERY (ada &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EE_SPECIFICATION' IN
       TYPEOF (ada.assigned_document)) AND
       (ada.assigned_document.kind\document_type.product_data_type =
       'surface finish specification'))) = 1);
END_ENTITY; -- surface_prepped_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The surface_prepped_terminal shall have exactly one document_reference where the
assigned_document is an ee_specification with a product_data_type of
'surface finish specification'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4727"
></A
>5.2.3.1.355 surface_profile_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A surface_profile_tolerance is a physical_unit_geometric_tolerance that
implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_surface_profile_locating_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Composite_surface_profile_refinement_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_surface_tolerance</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_surface_tolerance_with_referenced_datum_system</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Profile_of_any_surface_tolerance_without_referenced_datum_system</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY surface_profile_tolerance
  SUBTYPE OF (physical_unit_geometric_tolerance);
WHERE
  WR1: (NOT(SELF\geometric_tolerance.name = 
               'surface profile refinement'))
       OR (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'SURFACE_PROFILE_TOLERANCE' IN 
             TYPEOF(gtr.relating_geometric_tolerance))
       AND ((gtr.relating_geometric_tolerance\geometric_tolerance.name = 
           'surface profile locating')
       OR (gtr.relating_geometric_tolerance\geometric_tolerance.name = 
               'surface profile refinement'))
       AND (gtr\geometric_tolerance_relationship.name = 'surface profile refining control')
       )) = 1);
  WR2: (NOT(SELF\geometric_tolerance.name = 'surface profile locating'))
       OR (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'SURFACE_PROFILE_TOLERANCE' IN 
               TYPEOF(gtr.related_geometric_tolerance))
       AND (gtr.related_geometric_tolerance\geometric_tolerance.name = 
               'surface profile refinement')
       AND (gtr\geometric_tolerance_relationship.name = 'surface profile refining control')
       )) = 1);
  WR3: (NOT((NOT(
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM' IN TYPEOF(SELF)))
       AND(SELF\geometric_tolerance.name = 'surface profile refinement')))
       OR (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'SURFACE_PROFILE_TOLERANCE' IN 
             TYPEOF(gtr.related_geometric_tolerance))
       AND (gtr.related_geometric_tolerance\geometric_tolerance.name = 
              'surface profile refinement')
       AND (gtr\geometric_tolerance_relationship.name = 'surface profile refining control')
       )) = 0);
  WR4: (NOT(SELF\geometric_tolerance.name = 
            'surface profile refinement'))
       OR (SIZEOF(QUERY(gtr &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'SURFACE_PROFILE_TOLERANCE' IN 
            TYPEOF(gtr.related_geometric_tolerance))
       AND (gtr.related_geometric_tolerance\geometric_tolerance.name = 
            'surface profile refinement')
       AND (gtr\geometric_tolerance_relationship.name = 'surface profile refining control')
       )) = 1);
  WR5: NOT('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 
       'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF));
END_ENTITY; -- surface_profile_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement', it shall be related as 
the 'surface profile refining control' to exactly one surface_profile_tolerance with a name of 
either 'surface profile locating' or 'surface profile refinement'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile locating', it shall relate to 
exactly one surface_profile_tolerance with a name of 'surface profile refinement' to specify the 
'surface profile refining control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>If the surface_profile_tolerance is not a geometric_tolerance_with_specified_datum_system and has a 
name of 'surface profile refinement', it shall not relate to a surface_profile_tolerance 
with a name of 'surface profile refinement' to specify the 'surface profile refining control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement', it shall relate to at 
most one surface_profile_tolerance with a name of 'surface profile refinement' to specify the 
'surface profile refining control'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The surface_profile_tolerance shall not be a modified_geometric_tolerance.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If surface_profile_tolerance is a geometric_tolerance_with_specified_datum_system, it shall have a 
name of either 'surface profile', 'surface profile refinement', or 'surface profile locating'; 
otherwise, it shall have the name of either 'surface profile' or 'surface profile refinement'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement', it shall be related as 
the 'surface profile refining control' to exactly one surface_profile_tolerance with a name of 
either 'surface profile locating' or 'surface profile refinement'. Both of these surface_profile_tolerances 
shall specify the same shape_aspect as the toleranced_shape_aspect.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement' and it is related as 
the 'surface profile refining control' to exactly one surface_profile_tolerance with a name of 
'surface profile refinement', it shall either not reference a datum_system or it shall have less 
physical_unit_datum in its referenced datum_system than the datum_system referenced by the 
surface_profile_tolerance to which it is related as the 'surface profile refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement' and it is related as 
the 'surface profile refining control' to exactly one surface_profile_tolerance with a name of 
'surface profile locating', it shall either not reference a datum_system or it shall have less than 
or an equal number of physical_unit_datum in its referenced datum_system than the datum_system 
referenced by the surface_profile_tolerance to which it is related as the 'surface profile refining 
control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP5: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement' and it is a 
geometric_tolerance_with_specified_datum_system, the physical_unit_datum of its referenced 
datum_system shall be physical_unit_datum of the datum_system of the surface_profile_tolerance to 
which it is related as the 'surface profile refining control' and shall be assigned the same 
precedence.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP6: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement' and it is a 
geometric_tolerance_with_specified_datum_system that relates to a property_definition of a datum_system that 
has the description of 'datum system property without material conditions' to specify its 
'referenced datum system definition', the surface_profile_tolerance to which it is related as the 
'surface profile refining control' shall also be a geometric_tolerance_with_specified_datum_system 
that relates to a property_definition of a datum_system that has the description of 'datum system property 
without material conditions' to specify its 'referenced datum system definition'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP7: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement' and it is a 
geometric_tolerance_with_specified_datum_system that relates to a property_definition of a datum_system that 
has the description of 'datum system property with material conditions' to specify its 'referenced 
datum system definition', the surface_profile_tolerance to which it is related as the 'surface 
profile refining control' shall also be a geometric_tolerance_with_specified_datum_system that 
relates to a property_definition of a datum_system that has the description of 'datum system property with 
material conditions' to specify its 'referenced datum system definition', and each of these 
property_definition shall relate to property_definition with a description of 'datum feature material condition 
property' to specify their 'applied material condition property'. These property_definition shall be applied 
to physical_unit_datum_features in the context of the datum_systems referenced by each of the 
surface_profile_tolerance. The name of the property_definition applied to each of the 
physical_unit_datum_feature in the context of the datum_system referenced by this 
surface_profile_tolerance shall be the same as the name of the property_definition applied to the same 
physical_unit_datum_feature in the context of the datum_system referenced by the 
surface_profile_tolerance to which this surface_profile_tolerance is related as the 'surface 
profile refining control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP8: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement', it shall specify a 
measure_with_unit as its magnitude that is less than the measure_with_unit specified as the 
magnitude of the surface_profile_tolerance to which it is related as the 'surface profile refining 
control'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP9: </SPAN
>If the surface_profile_tolerance has a name of 'surface profile refinement', there shall exist a 
property_definition that has a description of 'true profile' that is related as the 'basic profile' to a 
property_definition of the tolerance_zone_boundary of this surface_profile_tolerance and to a property_definition of the 
tolerance_zone_boundary of the surface_profile_tolerance that this surface_profile_tolerance is 
related to as the 'surface profile refining control', and these property_definition shall have the 
description of 'boundary zone definition with specified size' and a name of either 'profile 
boundary' or 'profile boundary with offsets'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP10: </SPAN
>The toleranced_shape_aspect of the surface_profile_tolerance shall either be a 
part_template_definition, lie on the boundary of the shape of the product, or be 
a composite_shape_aspect the 'composing' shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP11: </SPAN
>The tolerance_zone_boundary of the surface_profile_tolerance shall have a property_definition with a 
description of 'boundary zone definition with specified size' and a name of either 'profile 
boundary' or 'profile boundary with offsets'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4761"
></A
>5.2.3.1.356 symmetry_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A symmetry_tolerance is a geometric_tolerance_with_specified_datum_system that
implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Symmetry_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY symmetry_tolerance
  SUBTYPE OF (geometric_tolerance_with_specified_datum_system);
WHERE
  WR1: SELF\geometric_tolerance.name = 'symmetry';
END_ENTITY; -- symmetry_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name for the symmetry_tolerance shall be 'symmetry'.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The toleranced_shape_aspect of the symmetry_tolerance shall either be a 
centre_of_symmetry with a description of 'plane', or a composite_shape_aspect in which 
the 'composing' shape_aspects are all of type centre_of_symmetry with a description of 
'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The symmetry_tolerance shall have at most two physical_unit_datum in its referenced datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The symmetry_tolerance shall have at least one physical_unit_datum in its referenced datum_system 
that has description of 'plane'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>The tolerance_zone_boundary of the symmetry_tolerance shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a tolerance_zone_implicit_opposing_boundary_set.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4774"
></A
>5.2.3.1.357 table_representation_item</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A table_representation_item is a compound_representation_item
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Characteristic_data_table</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY table_representation_item
  SUBTYPE OF (compound_representation_item);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS')) &#62; 0;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LIST_REPRESENTATION_ITEM'
       IN TYPEOF(SELF\compound_representation_item.item_element);
END_ENTITY; -- table_representation_item
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The table_representation_item shall be referenced by exactly
one applied_document_reference.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The item_element attribute shall be a list_representation_item.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4783"
></A
>5.2.3.1.358 template_material_cross_section_boundary</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A template_material_cross_section_boundary is a shape_aspect that implements the ARM concepts of: <SPAN
CLASS="INTERNALREF"
>Template_material_cross_section_boundary</SPAN
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY template_material_cross_section_boundary
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\template_material_cross_section_boundary)) = 0;
  WR2: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRINTED_PART_TEMPLATE_MATERIAL' IN TYPEOF 
       (SELF.of_shape\property_definition.definition);
  WR3: SELF\shape_aspect.description IN
       ['top', 'left', 'right', 'bottom'];
END_ENTITY; -- template_material_cross_section_boundary
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The template_material_cross_section_boundary shall not participate in a complex instance.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The template_material_cross_section_boundary shall be an aspect of a printed_part_template_material.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The land_physical_template description shall only be 'top', 'bottom', 'left' or 'right'. </DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4793"
></A
>5.2.3.1.359 template_stratum_assignment</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A template_stratum_assignment relates a specific part_template_definition to a specific stratum
for the purposes of binding them for one or more padstack definition. <DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY template_stratum_assignment
 SUBTYPE OF (shape_aspect_relationship);
END_ENTITY; -- template_stratum_assignment
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4798"
></A
>5.2.3.1.360 tertiary_orientation_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A tertiary_orientation_feature is a physical_unit_datum_feature that implements the ARM
concept of <SPAN
CLASS="INTERNALREF"
>Tertiary_orientation_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY tertiary_orientation_feature
 SUBTYPE OF (physical_unit_datum_feature);
WHERE
 WR1:SIZEOF ((TYPEOF (SELF)) * 
      ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRIMARY_ORIENTATION_FEATURE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SECONDARY_ORIENTATION_FEATURE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SEATING_PLANE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'VIEWING_PLANE',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PHYSICAL_UNIT_DATUM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'COMPONENT_SHAPE_ASPECT']) = 0;
 WR2: SELF.product_definitional = TRUE;
 WR3: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY_BOTTOM_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) &#60;= 1;
 WR4: SIZEOF (QUERY (it &#60;* QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PACKAGE_BODY_TOP_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) &#60;= 1;
END_ENTITY; -- tertiary_orientation_feature
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The tertiary_orientation_feature shall not be a primary_orientation_feature, a secondary_orientation_feature,
a seating_plane, a viewing_plane, a component_shape_aspect, or
a physical_unit_datum.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>A tertiary_orientation_feature shall be on the surface of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>A tertiary_orientation_feature shall be associated with no more than one package_body_bottom_surface.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>A tertiary_orientation_feature shall be associated with no more than one package_body_top_surface.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4809"
></A
>5.2.3.1.361 test_point_part_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A test_point_part_feature is a part_tooling_feature that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Fiducial_part_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY test_point_part_feature
 SUBTYPE OF (part_tooling_feature);
END_ENTITY; -- test_point_part_feature
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4815"
></A
>5.2.3.1.362 thermal_component</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A thermal_component is a component_definition that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Thermal_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY thermal_component
  SUBTYPE OF (component_definition);
END_ENTITY; -- thermal_component
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4821"
></A
>5.2.3.1.363 thermal_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A thermal_component_shape_aspect is a component_shape_aspect that implements
the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Thermal_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY thermal_component_shape_aspect
  SUBTYPE OF (component_shape_aspect);
END_ENTITY; -- thermal_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4827"
></A
>5.2.3.1.364 thermal_feature</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A thermal_feature is a shape_aspect that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Thermal_feature</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY thermal_feature
 SUBTYPE OF (shape_aspect);
END_ENTITY; -- thermal_feature
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4833"
></A
>5.2.3.1.365 thermal_isolation_component_shape_aspect</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A thermal_isolation_component_shape_aspect is a filled_area_material_removal_component_shape_aspect
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Thermal_isolation_laminate_component</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY thermal_isolation_component_shape_aspect
  SUBTYPE OF (filled_area_material_removal_component_shape_aspect);
END_ENTITY; -- thermal_isolation_component_shape_aspect
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4839"
></A
>5.2.3.1.366 thermal_isolation_removal_template_definition</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A thermal_isolation_removal_template_definition is a part_template_definition that implements the ARM concept of <SPAN
CLASS="INTERNALREF"
>Thermal_isolation_removal_template</SPAN
>
.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY thermal_isolation_removal_template_definition
  SUBTYPE OF (part_template_definition);
(*
WHERE
  WR1: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TEXT_LITERAL' IN
       TYPEOF (it))) = 1)) = 1))) = 0);
  WR2: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font vertical extent'))) = 1
       )) = 1))) = 0);
  WR3: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (SIZEOF (
       ['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font horizontal extent'))) = 1
       )) = 1))) = 0);
*)
END_ENTITY; -- thermal_isolation_removal_template_definition
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4845"
></A
>5.2.3.1.367 thermal_network</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A thermal_network is a functional_unit that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Thermal_network_definition</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY thermal_network
  SUBTYPE OF (functional_unit);
END_ENTITY; -- thermal_network
(*</PRE
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4851"
></A
>5.2.3.1.368 tolerance_zone_boundary</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A tolerance_zone_boundary is a shape_aspect that implements the ARM concepts of:<DIV
CLASS="LIST"
><UL
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Conical_tolerance_zone_boundary</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Tolerance_zone_boundary</SPAN
></LI
><LI
CLASS="LISTITEM"
> <SPAN
CLASS="INTERNALREF"
>Tolerance_zone_circular_or_cylindrical_or_spherical_boundary</SPAN
></LI
></UL
></DIV
><DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY tolerance_zone_boundary
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: (NOT(SELF\shape_aspect.description = 'conical'))
       OR (NOT(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                'TOLERANCE_ZONE_EXPLICIT_OPPOSING_BOUNDARY_SET'
                IN TYPEOF(SELF))
           OR('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'TOLERANCE_ZONE_IMPLICIT_OPPOSING_BOUNDARY_SET'
               IN TYPEOF(SELF))));
  WR2: (NOT(SELF\shape_aspect.description = 
                 'circular or cylindrical or spherical'))
       OR (NOT(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
                'TOLERANCE_ZONE_EXPLICIT_OPPOSING_BOUNDARY_SET'
                IN TYPEOF(SELF))
           OR('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
               'TOLERANCE_ZONE_IMPLICIT_OPPOSING_BOUNDARY_SET'
               IN TYPEOF(SELF))));
  WR3: SELF\shape_aspect.product_definitional = False;
  WR4: NOT(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
           'TOLERANCE_ZONE_EXPLICIT_OPPOSING_BOUNDARY_SET'
           IN TYPEOF(SELF))
       AND ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
           'TOLERANCE_ZONE_IMPLICIT_OPPOSING_BOUNDARY_SET'
           IN TYPEOF(SELF)));
    WR5: SIZEOF(QUERY(pd &#60;* USEDIN(SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') | (pd\property_definition.description = 
       'boundary zone definition with specified size') OR 
       (pd\property_definition.description = 'conical tolerance zone boundary')
       )) = 1;
  WR6: SIZEOF(USEDIN(SELF, 
            'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'TOLERANCE_ZONE_DEFINITION.BOUNDARIES')) = 1;
END_ENTITY; -- tolerance_zone_boundary
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>If the description of the tolerance_zone_boundary is 'conical', it shall not be either a 
tolerance_zone_explicit_opposing_boundary_set or a tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>If the description of the tolerance_zone_boundary is 'circular or cylindrical or spherical', it 
shall not be either a tolerance_zone_explicit_opposing_boundary_set or a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The tolerance_zone_boundary shall not lie on the boundary of the shape of the product.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The tolerance_zone_boundary shall not be both a tolerance_zone_explicit_opposing_boundary_set and a 
tolerance_zone_implicit_opposing_boundary_set.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR5: </SPAN
>The tolerance_zone_boundary shall have exactly one property_definition that has the description of either 
'boundary zone definition with specified size' or 'conical tolerance zone boundary'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR6: </SPAN
>The tolerance_zone_boundary shall be specified as the boundaries by exactly one 
tolerance_zone_definition.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>If the description of the tolerance_zone_boundary is 'conical', the tolerance_zone_boundary shall 
relate to exactly two shape_aspect to specify the 'conical tolerance zone boundary and surface'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>If the description of the tolerance_zone_boundary is 'circular or cylindrical or spherical', the 
tolerance_zone_boundary shall have exactly one property_definition with a description of 'boundary 
zone definition with specified size', and that property_definition shall be represented by exactly 
one representation that has a name of 'diametrical boundary size'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4873"
></A
>5.2.3.1.369 tolerance_zone_explicit_opposing_boundary_set</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A tolerance_zone_explicit_opposing_boundary_set is a tolerance_zone_boundary
that implements the ARM concepts of <SPAN
CLASS="INTERNALREF"
>Tolerance_zone_explicit_opposing_boundary_set</SPAN
>
and  <SPAN
CLASS="INTERNALREF"
>Tolerance_zone_opposing_boundary_set</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY tolerance_zone_explicit_opposing_boundary_set
  SUBTYPE OF (tolerance_zone_boundary);
END_ENTITY; -- tolerance_zone_explicit_opposing_boundary_set
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The tolerance_zone_explicit_opposing_boundary_set shall relate to exactly two shape_aspect instances that 
have a description of 'tolerance zone boundary member' to specify the 'zone boundary member'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The tolerance_zone_explicit_opposing_boundary_set shall have exactly one property_definition with a 
description of 'boundary zone definition with specified size', and that property_definition shall 
be represented by exactly one representation that has a name of 'opposing boundary set size'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4883"
></A
>5.2.3.1.370 tolerance_zone_implicit_opposing_boundary_set</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A tolerance_zone_implicit_opposing_boundary_set is a tolerance_zone_boundary
that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Tolerance_zone_implicit_opposing_boundary_set</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY tolerance_zone_implicit_opposing_boundary_set
  SUBTYPE OF (tolerance_zone_boundary);
END_ENTITY; -- tolerance_zone_implicit_opposing_boundary_set
(*</PRE
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The tolerance_zone_implicit_opposing_boundary_set shall have exactly one property_definition with a 
description of 'boundary zone definition with specified size', and that property_definition shall 
be represented by exactly one representation that has a name of 'opposing boundary set size'.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4891"
></A
>5.2.3.1.371 total_runout_tolerance</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A total_runout_tolerance is a geometric_tolerance_with_specified_datum_system
that implements the ARM concept 
of  <SPAN
CLASS="INTERNALREF"
>Total_runout_tolerance</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY total_runout_tolerance
  SUBTYPE OF (geometric_tolerance_with_specified_datum_system);
WHERE
  WR1: SELF\geometric_tolerance.name = 'total runout';
  WR2: NOT('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
           'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF));
END_ENTITY; -- total_runout_tolerance
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The name for the total_runout_tolerance shall be 'total runout'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The total_runout_tolerance shall not be a modified_geometric_tolerance.</DIV
></DIV
><DIV
CLASS="INFORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Informal propositions:</P
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP1: </SPAN
>The toleranced_shape_aspect of the total_runout_tolerance shall either be a 
part_template_definition, lie on the boundary of the shape of the product, or be 
a composite_shape_aspect the 'composing' shape_aspects of which are all of type part_template_definition.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP2: </SPAN
>The total_runout_tolerance shall have at most two physical_unit_datum 
instances in its referenced datum_system.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP3: </SPAN
>The total_runout_tolerance shall have at least one physical_unit_datum in its referenced 
datum_system that has a description of 'axis'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP4: </SPAN
>The total_runout_tolerance shall relate to exactly one property_definition that has the description of 'datum 
system property without material conditions' to specify the 'referenced datum system definition'.</DIV
><DIV
CLASS="INFORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>IP5: </SPAN
>The tolerance_zone_boundary of the total_runout_tolerance shall be either a 
tolerance_zone_explicit_opposing_boundary_set or a tolerance_zone_implicit_opposing_boundary_set.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4906"
></A
>5.2.3.1.372 usage_view_connection_zone_terminal_shape_relationship</H4
>A usage_view_connection_zone_terminal_shape_relationship is a representation and a representation_relationship_with_transformation that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Usage_view_connection_zone_terminal_shape_relationship</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY usage_view_connection_zone_terminal_shape_relationship
  SUBTYPE OF (representation, representation_relationship_with_transformation);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'] *
       TYPEOF (SELF.rep_1)) = 1;
  WR2: SIZEOF (['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_REPRESENTATION'] *
       TYPEOF (SELF.rep_2)) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\representation_relationship_with_transformation || 
       SELF\usage_view_connection_zone_terminal_shape_relationship))) = 0;
  WR4: SELF\representation_relationship.rep_1 &#60;&#62; 
       SELF\representation_relationship.rep_2;
END_ENTITY; -- usage_view_connection_zone_terminal_shape_relationship 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of rep_1 and rep_2 shall be unique within a population of usage_view_connection_zone_terminal_shape_relationship.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The usage_view_connection_zone_terminal_shape_relationship shall reference a shape_representation as its rep_1.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The usage_view_connection_zone_terminal_shape_relationship shall reference a shape_representation as its rep_2.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The usage_view_connection_zone_terminal_shape_relationship shall only be a representation, representation_relationship, or representation_relationship_with_transformation in addition to itself.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The usage_view_connection_zone_terminal_shape_relationship rep_1 shall not be the rep_2.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4919"
></A
>5.2.3.1.373 viewing_plane</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
The viewing_plane is a shape_aspect that implements the ARM concept
of  <SPAN
CLASS="INTERNALREF"
>Viewing_plane</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY viewing_plane
  SUBTYPE OF (shape_aspect);
  WHERE
    wr1: SELF\shape_aspect.description = 'affected plane';
    wr2: (SIZEOF(QUERY ( pd &#60;* USEDIN (SELF,
             'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
             'PROPERTY_DEFINITION.' + 'DEFINITION') | (pd\property_definition.description = 
             'viewing plane property')))) =1;
    wr3: NOT SELF\shape_aspect.product_definitional;
END_ENTITY; -- viewing_plane
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The viewing_plane shall have a description of 'affected plane'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The viewing_plane shall have exactly one property_definition that has the description of 'viewing plane 
property'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The viewing_plane shall not lie on the boundary of the shape of the product.</DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4929"
></A
>5.2.3.1.374 volume_shape_intersection</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A volume_shape_intersection is a representation and a shape_representation_relationship
that implements the ARM concept of  <SPAN
CLASS="INTERNALREF"
>Volume_shape_intersection</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY volume_shape_intersection
  SUPERTYPE OF (ONEOF(edge_segment_cross_section,
              pre_defined_parallel_datum_axis_symbol_3d_2d_relationship,
              pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship,
              pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship))
  SUBTYPE OF (representation, 
              shape_representation_relationship, 
              representation_relationship_with_transformation);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SELF\representation_relationship.rep_1 :&#60;&#62;: SELF\representation_relationship.rep_2;
  WR2: (SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\representation_relationship_with_transformation || 
       SELF\volume_shape_intersection))) = 0)  OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'EDGE_SEGMENT_CROSS_SECTION' IN TYPEOF (SELF)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRE_DEFINED_PARALLEL_DATUM_AXIS_SYMBOL_3D_2D_RELATIONSHIP' IN TYPEOF (SELF)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRE_DEFINED_PERPENDICULAR_DATUM_AXIS_SYMBOL_3D_2D_RELATIONSHIP' IN TYPEOF (SELF)) OR
       ('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PRE_DEFINED_PERPENDICULAR_DATUM_PLANE_SYMBOL_3D_2D_RELATIONSHIP' IN TYPEOF (SELF));
  WR3: 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'ITEM_DEFINED_TRANSFORMATION' IN TYPEOF 
       (SELF\representation_relationship_with_transformation.transformation_operator);

END_ENTITY; -- volume_shape_intersection 
(* </PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The combination of rep_1 and rep_2 shall be unique within a population of volume_shape_intersection.</DIV
></DIV
><DIV
CLASS="FORMALPROPOSITIONSGROUP"
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The volume_shape_intersection rep_1 shall not be rep_2. </DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The volume_shape_intersection shall not be a complex subtype of other than its direct supertypes.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The volume_shape_intersection shall reference an item_defined_transformation.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="ENTITYDEF"
><H4
><A
NAME="4942"
></A
>5.2.3.1.375 wire_terminal</H4
><DIV
CLASS="NOTE"
><P
></P
>NOTE:  The local rules for this entity have not been fully updated to agree with the changes in clause 4.2.</DIV
>
A wire_terminal is a package_terminal that implements the ARM
concept of  <SPAN
CLASS="INTERNALREF"
>Wire_terminal</SPAN
>.<DIV
CLASS="EXPRESSCODE"
><P
CLASS="EXPCODEHEAD"
>EXPRESS specification:</P
><PRE
CLASS="EXPCODEBODY"
>*)
ENTITY wire_terminal
   SUBTYPE OF (package_terminal);
WHERE
WR1: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (QUERY (it &#60;* pdr.used_representation.items |
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM') IN TYPEOF (it))
       AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_UNIT') IN
   TYPEOF (it\measure_with_unit.unit_component)))) = 2))) = 1)) )) = 0);
 WR2: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (QUERY (it &#60;* pdr.used_representation.items | (
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) AND
       (it\representation_item.name = 'maximum wire terminal length')
       AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_UNIT') IN
        TYPEOF (it\measure_with_unit.unit_component)))) = 1
                                               ))) = 1)) )) = 0);
 WR3: (SIZEOF (QUERY (pd &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (NOT (SIZEOF (QUERY (pdr &#60;* USEDIN (pd,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (QUERY (it &#60;* pdr.used_representation.items | (
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) AND
       (it\representation_item.name = 'minimum wire terminal length')
       AND
       (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'LENGTH_UNIT') IN
       TYPEOF (it\measure_with_unit.unit_component)))) = 1)))
                                                     = 1)) )) = 0);
 WR4: (SIZEOF (QUERY (sar &#60;* USEDIN (SELF,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'internal connection zone') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1);
END_ENTITY; -- wire_terminal
(*</PRE
></DIV
><DIV
CLASS="FORMALPROPOSITIONS"
><P
CLASS="CONSTRAINTSHEAD"
>Formal propositions:</P
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR1: </SPAN
>The wire_terminal shall have a representation that contains exactly two length_measure_with_units.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR2: </SPAN
>The wire_terminal shall have a representation that contains exactly one length_measure_with_unit with
a name of 'maximum wire terminal length'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR3: </SPAN
>The wire_terminal shall have a representation that contains exactly one length_measure_with_unit with
a name of 'minimum wire terminal length'.</DIV
><DIV
CLASS="FORMALPROPOSITIONSRUL"
><P
></P
><SPAN
CLASS="RULELABEL"
>WR4: </SPAN
>The wire_terminal shall be related to exactly one shape_aspect with a description of
'connection zone' as the 'internal connection zone'.</DIV
></DIV
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEFSCL4"
><H3
><A
NAME="importentitydefs"
></A
>5.2.3.2 Imported entity modifications</H3
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="4956"
></A
>5.2.3.2.1 action</H4
><P
>The base definition of the action entity is given in ISO 10303-41.</P
><P
>The definition of action is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the action entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#rule_supersedence_constraint"
>rule_supersedence_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_action"
>subtype_mandatory_action</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="4967"
></A
>5.2.3.2.2 action_assignment</H4
><P
>The base definition of the action_assignment entity is given in ISO 10303-41.</P
><P
>The definition of action_assignment is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the action_assignment entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_combination_action_assignment"
>subtype_combination_action_assignment</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="4977"
></A
>5.2.3.2.3 action_directive</H4
><P
>The base definition of the action_directive entity is given in ISO 10303-41.</P
><P
>The definition of action_directive is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the action_directive entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_action_directive"
>dependent_instantiable_action_directive</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="4987"
></A
>5.2.3.2.4 action_request_assignment</H4
><P
>The base definition of the action_request_assignment entity is given in ISO 10303-41.</P
><P
>The definition of action_request_assignment is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the action_request_assignment entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_action_request_assignment"
>subtype_exclusive_action_request_assignment</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="4997"
></A
>5.2.3.2.5 action_request_status</H4
><P
>The base definition of the action_request_status entity is given in ISO 10303-41.</P
><P
>The definition of action_request_status is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the action_request_status entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#restrict_action_request_status"
>restrict_action_request_status</A
></LI
><LI
><A
HREF="ruledefs.htm#versioned_action_request_requires_status"
>versioned_action_request_requires_status</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5008"
></A
>5.2.3.2.6 address</H4
><P
>The base definition of the address entity is given in ISO 10303-41.</P
><P
>The definition of address is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the address entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_address"
>dependent_instantiable_address</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_address"
>subtype_mandatory_address</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5019"
></A
>5.2.3.2.7 alternate_product_relationship</H4
><P
>The base definition of the alternate_product_relationship entity is given in ISO 10303-44.</P
><P
>The definition of alternate_product_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the alternate_product_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#assembly_alternate_product_constraint"
>assembly_alternate_product_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5029"
></A
>5.2.3.2.8 angular_size</H4
><P
>The base definition of the angular_size entity is given in ISO 10303-47.</P
><P
>The definition of angular_size is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the angular_size entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#angular_size_dimension_constraint"
>angular_size_dimension_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5039"
></A
>5.2.3.2.9 annotation_fill_area_occurrence</H4
><P
>The base definition of the annotation_fill_area_occurrence entity is given in ISO 10303-46.</P
><P
>The definition of annotation_fill_area_occurrence is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the annotation_fill_area_occurrence entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#fill_area_occurrence_constraint"
>fill_area_occurrence_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5049"
></A
>5.2.3.2.10 application_context</H4
><P
>The base definition of the application_context entity is given in ISO 10303-41.</P
><P
>The definition of application_context is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the application_context entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#application_context_requires_ap_definition"
>application_context_requires_ap_definition</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5059"
></A
>5.2.3.2.11 application_protocol_definition</H4
><P
>The base definition of the application_protocol_definition entity is given in ISO 10303-41.</P
><P
>The definition of application_protocol_definition is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the application_protocol_definition entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#application_context_requires_ap_definition"
>application_context_requires_ap_definition</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5069"
></A
>5.2.3.2.12 approval</H4
><P
>The base definition of the approval entity is given in ISO 10303-41.</P
><P
>The definition of approval is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the approval entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#approval_requires_approval_date_time"
>approval_requires_approval_date_time</A
></LI
><LI
><A
HREF="ruledefs.htm#approval_requires_approval_person_organization"
>approval_requires_approval_person_organization</A
></LI
><LI
><A
HREF="ruledefs.htm#approvals_are_assigned"
>approvals_are_assigned</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5081"
></A
>5.2.3.2.13 approval_assignment</H4
><P
>The base definition of the approval_assignment entity is given in ISO 10303-41.</P
><P
>The definition of approval_assignment is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the approval_assignment entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#approvals_are_assigned"
>approvals_are_assigned</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5091"
></A
>5.2.3.2.14 approval_date_time</H4
><P
>The base definition of the approval_date_time entity is given in ISO 10303-41.</P
><P
>The definition of approval_date_time is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the approval_date_time entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#approval_requires_approval_date_time"
>approval_requires_approval_date_time</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5101"
></A
>5.2.3.2.15 approval_person_organization</H4
><P
>The base definition of the approval_person_organization entity is given in ISO 10303-41.</P
><P
>The definition of approval_person_organization is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the approval_person_organization entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#approval_requires_approval_person_organization"
>approval_requires_approval_person_organization</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5111"
></A
>5.2.3.2.16 approval_status</H4
><P
>The base definition of the approval_status entity is given in ISO 10303-41.</P
><P
>The definition of approval_status is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the approval_status entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_approval_status"
>dependent_instantiable_approval_status</A
></LI
><LI
><A
HREF="ruledefs.htm#restrict_approval_status"
>restrict_approval_status</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5122"
></A
>5.2.3.2.17 assembly_component_usage</H4
><P
>The base definition of the assembly_component_usage entity is given in ISO 10303-44.</P
><P
>The definition of assembly_component_usage is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the assembly_component_usage entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#acu_requires_security_classification"
>acu_requires_security_classification</A
></LI
><LI
><A
HREF="ruledefs.htm#assembly_composition_relationship_constraint"
>assembly_composition_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#assembly_composition_relationship_unique_constraint"
>assembly_composition_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#interconnect_module_stratum_assembly_relationship_constraint"
>interconnect_module_stratum_assembly_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#interconnect_module_stratum_assembly_relationship_unique_constraint"
>interconnect_module_stratum_assembly_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#material_assembly_relationship_constraint"
>material_assembly_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#material_assembly_relationship_unique_constraint"
>material_assembly_relationship_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5138"
></A
>5.2.3.2.18 assembly_component_usage_substitute</H4
><P
>The base definition of the assembly_component_usage_substitute entity is given in ISO 10303-44.</P
><P
>The definition of assembly_component_usage_substitute is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the assembly_component_usage_substitute entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#substitute_product_constraint"
>substitute_product_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5148"
></A
>5.2.3.2.19 centre_of_symmetry</H4
><P
>The base definition of the centre_of_symmetry entity is given in ISO 10303-47.</P
><P
>The definition of centre_of_symmetry is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the centre_of_symmetry entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#centre_of_symmetry_constraint"
>centre_of_symmetry_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5158"
></A
>5.2.3.2.20 certification_type</H4
><P
>The base definition of the certification_type entity is given in ISO 10303-41.</P
><P
>The definition of certification_type is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the certification_type entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_certification_type"
>dependent_instantiable_certification_type</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5168"
></A
>5.2.3.2.21 characterized_object</H4
><P
>The base definition of the characterized_object entity is given in ISO 10303-41.</P
><P
>The definition of characterized_object is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the characterized_object entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_certification_type"
>dependent_instantiable_certification_type</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_characterized_object"
>subtype_mandatory_characterized_object</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5179"
></A
>5.2.3.2.22 composite_shape_aspect</H4
><P
>The base definition of the composite_shape_aspect entity is given in ISO 10303-47.</P
><P
>The definition of composite_shape_aspect is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the composite_shape_aspect entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#composite_shape_element_constraint"
>composite_shape_element_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_feature_unique_constraint"
>part_feature_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_composite_shape_aspect"
>subtype_mandatory_composite_shape_aspect</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5191"
></A
>5.2.3.2.23 configuration_effectivity</H4
><P
>The base definition of the configuration_effectivity entity is given in ISO 10303-44.</P
><P
>The definition of configuration_effectivity is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the configuration_effectivity entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#planned_effectivity_constraint"
>planned_effectivity_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#planned_effectivity_unique_constraint"
>planned_effectivity_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5202"
></A
>5.2.3.2.24 configuration_item</H4
><P
>The base definition of the configuration_item entity is given in ISO 10303-44.</P
><P
>The definition of configuration_item is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the configuration_item entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#configuration_item_requires_person_organization"
>configuration_item_requires_person_organization</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_product_configuration_constraint"
>ee_product_configuration_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_product_configuration_unique_constraint"
>ee_product_configuration_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#product_concept_requires_configuration_item"
>product_concept_requires_configuration_item</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5215"
></A
>5.2.3.2.25 contract</H4
><P
>The base definition of the contract entity is given in ISO 10303-41.</P
><P
>The definition of contract is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the contract entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#contract_constraint"
>contract_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#contract_unique_constraint"
>contract_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5226"
></A
>5.2.3.2.26 contract_type</H4
><P
>The base definition of the contract_type entity is given in ISO 10303-41.</P
><P
>The definition of contract_type is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the contract_type entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_contract_type"
>dependent_instantiable_contract_type</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5236"
></A
>5.2.3.2.27 curve_style</H4
><P
>The base definition of the curve_style entity is given in ISO 10303-46.</P
><P
>The definition of curve_style is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the curve_style entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#curve_style_requires_length_measure_with_unit"
>curve_style_requires_length_measure_with_unit</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5246"
></A
>5.2.3.2.28 date</H4
><P
>The base definition of the date entity is given in ISO 10303-41.</P
><P
>The definition of date is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the date entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#date_constraint"
>date_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_date"
>dependent_instantiable_date</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_date"
>subtype_mandatory_date</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5258"
></A
>5.2.3.2.29 date_and_time</H4
><P
>The base definition of the date_and_time entity is given in ISO 10303-41.</P
><P
>The definition of date_and_time is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the date_and_time entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#date_and_time_require_minute_and_second"
>date_and_time_require_minute_and_second</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5268"
></A
>5.2.3.2.30 date_role</H4
><P
>The base definition of the date_role entity is given in ISO 10303-41.</P
><P
>The definition of date_role is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the date_role entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_date_role"
>dependent_instantiable_date_role</A
></LI
><LI
><A
HREF="ruledefs.htm#restrict_date_role"
>restrict_date_role</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5279"
></A
>5.2.3.2.31 date_time_role</H4
><P
>The base definition of the date_time_role entity is given in ISO 10303-41.</P
><P
>The definition of date_time_role is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the date_time_role entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_date_time_role"
>dependent_instantiable_date_time_role</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5289"
></A
>5.2.3.2.32 derived_shape_aspect</H4
><P
>The base definition of the derived_shape_aspect entity is given in ISO 10303-47.</P
><P
>The definition of derived_shape_aspect is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the derived_shape_aspect entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#derived_shape_element_constraint"
>derived_shape_element_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#directed_axis_constraint"
>directed_axis_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#directed_axis_unique_constraint"
>directed_axis_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5301"
></A
>5.2.3.2.33 descriptive_representation_item</H4
><P
>The base definition of the descriptive_representation_item entity is given in ISO 10303-45.</P
><P
>The definition of descriptive_representation_item is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the descriptive_representation_item entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#component_feature_external_reference_constraint"
>component_feature_external_reference_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_feature_external_reference_unique_constraint"
>component_feature_external_reference_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#configuration_controlled_message_constraint"
>configuration_controlled_message_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#package_terminal_external_reference_constraint"
>package_terminal_external_reference_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#package_terminal_external_reference_unique_constraint"
>package_terminal_external_reference_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5315"
></A
>5.2.3.2.34 dimensional_location</H4
><P
>The base definition of the dimensional_location entity is given in ISO 10303-47.</P
><P
>The definition of dimensional_location is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the dimensional_location entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dimensional_characteristic_constraint"
>dimensional_characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#dimensional_location_constraint"
>dimensional_location_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_locating_relationship_constraint"
>shape_element_locating_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_locating_relationship_unique_constraint"
>shape_element_locating_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_dimensional_location"
>subtype_exclusive_dimensional_location</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5329"
></A
>5.2.3.2.35 dimensional_size</H4
><P
>The base definition of the dimensional_size entity is given in ISO 10303-47.</P
><P
>The definition of dimensional_size is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the dimensional_size entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dimensional_characteristic_constraint"
>dimensional_characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#dimensional_size_constraint"
>dimensional_size_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_dimensional_size"
>subtype_exclusive_dimensional_size</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5341"
></A
>5.2.3.2.36 directed_action</H4
><P
>The base definition of the directed_action entity is given in ISO 10303-41.</P
><P
>The definition of directed_action is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the directed_action entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#directed_action_requires_approval"
>directed_action_requires_approval</A
></LI
><LI
><A
HREF="ruledefs.htm#directed_action_requires_date_or_date_and_time"
>directed_action_requires_date_or_date_and_time</A
></LI
><LI
><A
HREF="ruledefs.htm#work_order_constraint"
>work_order_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#work_order_unique_constraint"
>work_order_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5354"
></A
>5.2.3.2.37 document</H4
><P
>The base definition of the document entity is given in ISO 10303-41.</P
><P
>The definition of document is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the document entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#ee_document_constraint"
>ee_document_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_document_identifier_unique_constraint"
>ee_document_identifier_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_document_unique_constraint"
>ee_document_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5366"
></A
>5.2.3.2.38 document_type</H4
><P
>The base definition of the document_type entity is given in ISO 10303-41.</P
><P
>The definition of document_type is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the document_type entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_document_type"
>dependent_instantiable_document_type</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5376"
></A
>5.2.3.2.39 externally_defined_item</H4
><P
>The base definition of the externally_defined_item entity is given in ISO 10303-41.</P
><P
>The definition of externally_defined_item is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the externally_defined_item entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_externally_defined_item"
>subtype_mandatory_externally_defined_item</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5386"
></A
>5.2.3.2.40 externally_defined_text_font</H4
><P
>The base definition of the externally_defined_text_font entity is given in ISO 10303-46.</P
><P
>The definition of externally_defined_text_font is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the externally_defined_text_font entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#registered_font_constraint"
>registered_font_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#registered_font_unique_constraint"
>registered_font_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5397"
></A
>5.2.3.2.41 geometric_tolerance</H4
><P
>The base definition of the geometric_tolerance entity is given in ISO 10303-47.</P
><P
>The definition of geometric_tolerance is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the geometric_tolerance entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_geometric_tolerance"
>subtype_mandatory_geometric_tolerance</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5407"
></A
>5.2.3.2.42 global_unit_assigned_context</H4
><P
>The base definition of the global_unit_assigned_context entity is given in ISO 10303-41.</P
><P
>The definition of global_unit_assigned_context is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the global_unit_assigned_context entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#cartesian_coordinate_system_constraint"
>cartesian_coordinate_system_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5417"
></A
>5.2.3.2.43 group</H4
><P
>The base definition of the group entity is given in ISO 10303-41.</P
><P
>The definition of group is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the group entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_group"
>subtype_mandatory_group</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5427"
></A
>5.2.3.2.44 make_from_usage_option</H4
><P
>The base definition of the make_from_usage_option entity is given in ISO 10303-44.</P
><P
>The definition of make_from_usage_option is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the make_from_usage_option entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#no_shape_for_make_from"
>no_shape_for_make_from</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_make_from_relationship_constraint"
>stratum_make_from_relationship_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5438"
></A
>5.2.3.2.45 mapped_item</H4
><P
>The base definition of the mapped_item entity is given in ISO 10303-43.</P
><P
>The definition of mapped_item is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the mapped_item entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#design_intent_modification_in_stratum_3d_position_constraint"
>design_intent_modification_in_stratum_3d_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_intent_modification_in_stratum_planar_position_constraint"
>design_intent_modification_in_stratum_planar_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#device_2d_position_constraint"
>device_2d_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#device_3d_position_constraint"
>device_3d_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_feature_in_stratum_3d_position_constraint"
>stratum_feature_in_stratum_3d_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_feature_in_stratum_planar_position_constraint"
>stratum_feature_in_stratum_planar_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_interconnect_module_3d_position_constraint"
>stratum_interconnect_module_3d_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_interconnect_module_planar_position_constraint"
>stratum_interconnect_module_planar_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_surface_in_stratum_3d_position_constraint"
>stratum_surface_in_stratum_3d_position_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_mapped_item"
>subtype_exclusive_mapped_item</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5457"
></A
>5.2.3.2.46 material_designation</H4
><P
>The base definition of the material_designation entity is given in ISO 10303-45.</P
><P
>The definition of material_designation is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the material_designation entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#ee_material_constraint"
>ee_material_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_material_unique_constraint"
>ee_material_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#printed_part_template_material_constraint"
>printed_part_template_material_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5469"
></A
>5.2.3.2.47 measure_qualification</H4
><P
>The base definition of the measure_qualification entity is given in ISO 10303-45.</P
><P
>The definition of measure_qualification is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the measure_qualification entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dimension_qualifier_constraint"
>dimension_qualifier_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#geometric_tolerance_qualifier_constraint"
>geometric_tolerance_qualifier_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#pre_defined_dimension_qualifier_constraint"
>pre_defined_dimension_qualifier_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#pre_defined_geometric_tolerance_qualifier_constraint"
>pre_defined_geometric_tolerance_qualifier_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#user_defined_dimension_qualifier_constraint"
>user_defined_dimension_qualifier_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#user_defined_geometric_tolerance_qualifier_constraint"
>user_defined_geometric_tolerance_qualifier_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5484"
></A
>5.2.3.2.48 modified_geometric_tolerance</H4
><P
>The base definition of the modified_geometric_tolerance entity is given in ISO 10303-47.</P
><P
>The definition of modified_geometric_tolerance is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the modified_geometric_tolerance entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#geometric_tolerance_with_applied_material_condition_property_constraint"
>geometric_tolerance_with_applied_material_condition_property_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5494"
></A
>5.2.3.2.49 named_unit</H4
><P
>The base definition of the named_unit entity is given in ISO 10303-41.</P
><P
>The definition of named_unit is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the named_unit entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_named_unit"
>dependent_instantiable_named_unit</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5504"
></A
>5.2.3.2.50 next_assembly_usage_occurrence</H4
><P
>The base definition of the next_assembly_usage_occurrence entity is given in ISO 10303-44.</P
><P
>The definition of next_assembly_usage_occurrence is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the next_assembly_usage_occurrence entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#coordinated_assembly_and_shape"
>coordinated_assembly_and_shape</A
></LI
><LI
><A
HREF="ruledefs.htm#next_higher_assembly_relationship_constraint"
>next_higher_assembly_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#next_higher_assembly_relationship_unique_constraint"
>next_higher_assembly_relationship_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5516"
></A
>5.2.3.2.51 organization_role</H4
><P
>The base definition of the organization_role entity is given in ISO 10303-41.</P
><P
>The definition of organization_role is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the organization_role entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_organization_role"
>dependent_instantiable_organization_role</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5526"
></A
>5.2.3.2.52 parametric_representation_context</H4
><P
>The base definition of the parametric_representation_context entity is given in ISO 10303-43.</P
><P
>The definition of parametric_representation_context is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the parametric_representation_context entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_parametric_representation_context"
>dependent_instantiable_parametric_representation_context</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5536"
></A
>5.2.3.2.53 person_and_organization_role</H4
><P
>The base definition of the person_and_organization_role entity is given in ISO 10303-41.</P
><P
>The definition of person_and_organization_role is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the person_and_organization_role entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_person_and_organization_role"
>dependent_instantiable_person_and_organization_role</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5546"
></A
>5.2.3.2.54 plus_minus_tolerance</H4
><P
>The base definition of the plus_minus_tolerance entity is given in ISO 10303-47.</P
><P
>The definition of plus_minus_tolerance is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the plus_minus_tolerance entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#plus_minus_tolerance_range_representation_constraint"
>plus_minus_tolerance_range_representation_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5556"
></A
>5.2.3.2.55 pre_defined_item</H4
><P
>The base definition of the pre_defined_item entity is given in ISO 10303-41.</P
><P
>The definition of pre_defined_item is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the pre_defined_item entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_pre_defined_item"
>subtype_mandatory_pre_defined_item</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5566"
></A
>5.2.3.2.56 product</H4
><P
>The base definition of the product entity is given in ISO 10303-41.</P
><P
>The definition of product is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#ee_product_constraint"
>ee_product_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_product_unique_constraint"
>ee_product_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#mandatory_product_related_product_category_value"
>mandatory_product_related_product_category_value</A
></LI
><LI
><A
HREF="ruledefs.htm#product_requires_person_organization"
>product_requires_person_organization</A
></LI
><LI
><A
HREF="ruledefs.htm#product_requires_product_definition_formation"
>product_requires_product_definition_formation</A
></LI
><LI
><A
HREF="ruledefs.htm#substitute_product_constraint"
>substitute_product_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5581"
></A
>5.2.3.2.57 product_concept</H4
><P
>The base definition of the product_concept entity is given in ISO 10303-44.</P
><P
>The definition of product_concept is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_concept entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#ee_product_model_unique_constraint"
>ee_product_model_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#product_concept_requires_configuration_item"
>product_concept_requires_configuration_item</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5592"
></A
>5.2.3.2.58 product_definition</H4
><P
>The base definition of the product_definition entity is given in ISO 10303-41.</P
><P
>The definition of product_definition is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_definition entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#part_feature_constraint"
>part_feature_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#product_definition_requires_date_or_date_and_time"
>product_definition_requires_date_or_date_and_time</A
></LI
><LI
><A
HREF="ruledefs.htm#product_definition_requires_person_organization"
>product_definition_requires_person_organization</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_product_definition"
>subtype_exclusive_product_definition</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5605"
></A
>5.2.3.2.59 product_definition_formation</H4
><P
>The base definition of the product_definition_formation entity is given in ISO 10303-41.</P
><P
>The definition of product_definition_formation is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_definition_formation entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#bus_structural_definition_unique_constraint"
>bus_structural_definition_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_product_version_constraint"
>ee_product_version_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_product_version_unique_constraint"
>ee_product_version_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#pdf_requires_security_classification"
>pdf_requires_security_classification</A
></LI
><LI
><A
HREF="ruledefs.htm#product_definition_formation_requires_approval"
>product_definition_formation_requires_approval</A
></LI
><LI
><A
HREF="ruledefs.htm#product_definition_formation_requires_person_organization"
>product_definition_formation_requires_person_organization</A
></LI
><LI
><A
HREF="ruledefs.htm#product_requires_product_definition_formation"
>product_requires_product_definition_formation</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5621"
></A
>5.2.3.2.60 product_definition_formation_relationship</H4
><P
>The base definition of the product_definition_formation_relationship entity is given in ISO 10303-41.</P
><P
>The definition of product_definition_formation_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_definition_formation_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#product_association_constraint"
>product_association_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5631"
></A
>5.2.3.2.61 product_definition_relationship</H4
><P
>The base definition of the product_definition_relationship entity is given in ISO 10303-41.</P
><P
>The definition of product_definition_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_definition_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#aggregate_connectivity_requirement_unique_constraint"
>aggregate_connectivity_requirement_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#assembly_requirement_allocation_constraint"
>assembly_requirement_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#bus_element_relationship_constraint"
>bus_element_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#bus_element_relationship_unique_constraint"
>bus_element_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#connectivity_allocation_constraint"
>connectivity_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#connectivity_allocation_unique_constraint"
>connectivity_allocation_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_composition_path_constraint"
>design_composition_path_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_functional_unit_allocation_to_assembly_component_constraint"
>design_functional_unit_allocation_to_assembly_component_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_functional_unit_allocation_to_assembly_component_unique_constraint"
>design_functional_unit_allocation_to_assembly_component_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_functional_unit_allocation_to_assembly_joint_constraint"
>design_functional_unit_allocation_to_assembly_joint_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_functional_unit_allocation_to_assembly_joint_unique_constraint"
>design_functional_unit_allocation_to_assembly_joint_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_functional_unit_allocation_to_fabrication_joint_constraint"
>design_functional_unit_allocation_to_fabrication_joint_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_functional_unit_allocation_to_fabrication_joint_unique_constraint"
>design_functional_unit_allocation_to_fabrication_joint_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_functional_unit_allocation_to_reference_functional_unit_constraint"
>design_functional_unit_allocation_to_reference_functional_unit_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_object_management_relationship_constraint"
>design_object_management_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#equivalent_functional_unit_definition_assignment_constraint"
>equivalent_functional_unit_definition_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_unit_requirement_allocation_constraint"
>functional_unit_requirement_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#interface_component_allocation_constraint"
>interface_component_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#inter_stratum_extent_constraint"
>inter_stratum_extent_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_device_constraint"
>part_device_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_device_unique_constraint"
>part_device_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#physical_node_requirement_to_implementing_component_allocation_constraint"
>physical_node_requirement_to_implementing_component_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#physical_unit_relationship_constraint"
>physical_unit_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#reference_composition_path_constraint"
>reference_composition_path_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#reference_functional_unit_assignment_to_part_constraint"
>reference_functional_unit_assignment_to_part_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shield_allocation_constraint"
>shield_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_product_definition_relationship"
>subtype_exclusive_product_definition_relationship</A
></LI
><LI
><A
HREF="ruledefs.htm#thermal_requirement_allocation_constraint"
>thermal_requirement_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#transmission_line_functional_unit_to_routed_printed_component_allocation_constraint"
>transmission_line_functional_unit_to_routed_printed_component_allocation_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5669"
></A
>5.2.3.2.62 product_definition_usage</H4
><P
>The base definition of the product_definition_usage entity is given in ISO 10303-44.</P
><P
>The definition of product_definition_usage is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_definition_usage entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_product_definition_usage"
>subtype_mandatory_product_definition_usage</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5679"
></A
>5.2.3.2.63 product_definition_with_associated_documents</H4
><P
>The base definition of the product_definition_with_associated_documents entity is given in ISO 10303-41.</P
><P
>The definition of product_definition_with_associated_documents is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_definition_with_associated_documents entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#ee_product_definition_constraint"
>ee_product_definition_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5689"
></A
>5.2.3.2.64 product_material_composition_relationship</H4
><P
>The base definition of the product_material_composition_relationship entity is given in ISO 10303-45.</P
><P
>The definition of product_material_composition_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the product_material_composition_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#material_composition_relationship_constraint"
>material_composition_relationship_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5699"
></A
>5.2.3.2.65 projected_zone_definition</H4
><P
>The base definition of the projected_zone_definition entity is given in ISO 10303-47.</P
><P
>The definition of projected_zone_definition is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the projected_zone_definition entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#projected_tolerance_zone_definition_constraint"
>projected_tolerance_zone_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#projected_zone_and_base_relationship_constraint"
>projected_zone_and_base_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#projected_zone_height_characteristic_constraint"
>projected_zone_height_characteristic_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5711"
></A
>5.2.3.2.66 promissory_usage_occurrence</H4
><P
>The base definition of the promissory_usage_occurrence entity is given in ISO 10303-44.</P
><P
>The definition of promissory_usage_occurrence is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the promissory_usage_occurrence entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#promissory_usage_relationship_constraint"
>promissory_usage_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#promissory_usage_relationship_unique_constraint"
>promissory_usage_relationship_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5722"
></A
>5.2.3.2.67 property_definition</H4
><P
>The base definition of the property_definition entity is given in ISO 10303-41.</P
><P
>The definition of property_definition is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the property_definition entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#boundary_zone_definition_with_specified_size_constraint"
>boundary_zone_definition_with_specified_size_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#conical_tolerance_zone_boundary_definition_constraint"
>conical_tolerance_zone_boundary_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#conical_tolerance_zone_boundary_diametrical_size_characteristic_constraint"
>conical_tolerance_zone_boundary_diametrical_size_characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_axis_related_orientation_constraint"
>datum_axis_related_orientation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_based_direction_vector_constraint"
>datum_based_direction_vector_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_based_vector_orientation_constraint"
>datum_based_vector_orientation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_feature_material_condition_property_constraint"
>datum_feature_material_condition_property_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_precedence_assignment_constraint"
>datum_precedence_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_precedence_assignment_unique_constraint"
>datum_precedence_assignment_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_system_defining_conditions_constraint"
>datum_system_defining_conditions_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_system_defining_conditions_with_material_conditions_constraint"
>datum_system_defining_conditions_with_material_conditions_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_system_defining_conditions_without_material_conditions_constraint"
>datum_system_defining_conditions_without_material_conditions_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#dimension_related_positional_boundary_definition_constraint"
>dimension_related_positional_boundary_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#dimension_set_constraint"
>dimension_set_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#direction_element_constraint"
>direction_element_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#composite_signal_property_constraint"
>composite_signal_property_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#positional_boundary_member_definition_constraint"
>positional_boundary_member_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#positional_boundary_offset_constraint"
>positional_boundary_offset_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#profile_boundary_definition_constraint"
>profile_boundary_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#profile_boundary_definition_with_offsets_constraint"
>profile_boundary_definition_with_offsets_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#profile_related_positional_boundary_definition_constraint"
>profile_related_positional_boundary_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#restraint_condition_constraint"
>restraint_condition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#signal_property_constraint"
>signal_property_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_property_definition"
>subtype_exclusive_property_definition</A
></LI
><LI
><A
HREF="ruledefs.htm#technology_constraint"
>technology_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_specific_restraint_condition_constraint"
>tolerance_specific_restraint_condition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_boundary_definition_constraint"
>tolerance_zone_boundary_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_boundary_member_offset_constraint"
>tolerance_zone_boundary_member_offset_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_definition_with_specified_orientation_constraint"
>tolerance_zone_definition_with_specified_orientation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_per_unit_size_specification_constraint"
>tolerance_zone_per_unit_size_specification_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#true_profile_constraint"
>true_profile_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#viewing_plane_based_orientation_constraint"
>viewing_plane_based_orientation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#viewing_plane_definition_constraint"
>viewing_plane_definition_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5764"
></A
>5.2.3.2.68 property_definition_relationship</H4
><P
>The base definition of the property_definition_relationship entity is given in ISO 10303-45.</P
><P
>The definition of property_definition_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the property_definition_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#composite_signal_property_relationship_constraint"
>composite_signal_property_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_unit_network_terminal_definition_bus_assignment_constraint"
>functional_unit_network_terminal_definition_bus_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_unit_network_terminal_definition_node_assignment_constraint"
>functional_unit_network_terminal_definition_node_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_unit_terminal_bus_assignment_constraint"
>functional_unit_terminal_bus_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_unit_terminal_node_assignment_constraint"
>functional_unit_terminal_node_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#operational_requirement_occurrence_relationship_constraint"
>operational_requirement_occurrence_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#requirement_composition_constraint"
>requirement_composition_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5780"
></A
>5.2.3.2.69 property_definition_representation</H4
><P
>The base definition of the property_definition_representation entity is given in ISO 10303-41.</P
><P
>The definition of property_definition_representation is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the property_definition_representation entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#analytical_model_vector_port_assignment_constraint"
>analytical_model_vector_port_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#assembly_component_2d_shape_constraint"
>assembly_component_2d_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#assembly_component_3d_shape_constraint"
>assembly_component_3d_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_placement_restriction_assignment_constraint"
>component_placement_restriction_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_specification_to_requirement_occurrence_assignment_constraint"
>functional_specification_to_requirement_occurrence_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#located_interconnect_module_thickness_requirement_unique_constraint"
>located_interconnect_module_thickness_requirement_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_property_definition_representation"
>subtype_exclusive_property_definition_representation</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5796"
></A
>5.2.3.2.70 representation</H4
><P
>The base definition of the representation entity is given in ISO 10303-43.</P
><P
>The definition of representation is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the representation entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#boundary_size_characteristic_constraint"
>boundary_size_characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_external_reference_constraint"
>component_external_reference_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_overlap_relationship_constraint"
>component_overlap_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_mounting_clearance_relationship_constraint"
>component_mounting_clearance_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#connection_zone_constraint"
>connection_zone_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#curve_style_unique_constraint"
>curve_style_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_based_length_measure_constraint"
>datum_based_length_measure_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#diametrical_boundary_size_characteristic_constraint"
>diametrical_boundary_size_characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_rule_conclusion_definition_unique_constraint"
>ee_rule_conclusion_definition_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_rule_definition_constraint"
>ee_rule_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_rule_definition_unique_constraint"
>ee_rule_definition_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#ee_rule_premise_definition_unique_constraint"
>ee_rule_premise_definition_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_specification_constraint"
>functional_specification_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#marking_constraint"
>marking_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#opposing_boundary_set_size_characteristic_constraint"
>opposing_boundary_set_size_characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#package_external_reference_constraint"
>package_external_reference_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_terminal_external_reference_unique_constraint"
>part_terminal_external_reference_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#registered_style_constraint"
>registered_style_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#rule_priority_constraint"
>rule_priority_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_unique_constraint"
>shape_element_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#signal_specification_constraint"
>signal_specification_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_technology_line_width_tolerance_assignment_constraint"
>stratum_technology_line_width_tolerance_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_representation"
>subtype_exclusive_representation</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5828"
></A
>5.2.3.2.71 representation_context</H4
><P
>The base definition of the representation_context entity is given in ISO 10303-43.</P
><P
>The definition of representation_context is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the representation_context entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_representation_context"
>subtype_exclusive_representation_context</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5838"
></A
>5.2.3.2.72 representation_item</H4
><P
>The base definition of the representation_item entity is given in ISO 10303-43.</P
><P
>The definition of representation_item is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the representation_item entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#characteristic_constraint"
>characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#characteristic_unique_constraint"
>characteristic_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_representation_item"
>dependent_instantiable_representation_item</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_unique_constraint"
>shape_element_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5851"
></A
>5.2.3.2.73 representation_relationship</H4
><P
>The base definition of the representation_relationship entity is given in ISO 10303-43.</P
><P
>The definition of representation_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the representation_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#evaluated_characteristic_constraint"
>evaluated_characteristic_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_feature_shape_stratum_average_surface_shape_relationship_constraint"
>stratum_feature_shape_stratum_average_surface_shape_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_feature_shape_stratum_surface_shape_relationship_constraint"
>stratum_feature_shape_stratum_surface_shape_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#terminal_pair_port_equivalence_relationship_constraint"
>terminal_pair_port_equivalence_relationship_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5864"
></A
>5.2.3.2.74 runout_zone_definition</H4
><P
>The base definition of the runout_zone_definition entity is given in ISO 10303-47.</P
><P
>The definition of runout_zone_definition is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the runout_zone_definition entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#runout_tolerance_zone_definition_with_specified_angle_constraint"
>runout_tolerance_zone_definition_with_specified_angle_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5874"
></A
>5.2.3.2.75 runout_zone_orientation</H4
><P
>The base definition of the runout_zone_orientation entity is given in ISO 10303-47.</P
><P
>The definition of runout_zone_orientation is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the runout_zone_orientation entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_runout_zone_orientation"
>subtype_mandatory_runout_zone_orientation</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5884"
></A
>5.2.3.2.76 runout_zone_orientation_reference_direction</H4
><P
>The base definition of the runout_zone_orientation_reference_direction entity is given in ISO 10303-47.</P
><P
>The definition of runout_zone_orientation_reference_direction is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the runout_zone_orientation_reference_direction entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#runout_zone_orientation_constraint"
>runout_zone_orientation_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5894"
></A
>5.2.3.2.77 security_classification</H4
><P
>The base definition of the security_classification entity is given in ISO 10303-41.</P
><P
>The definition of security_classification is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the security_classification entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#security_classification_constraint"
>security_classification_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5904"
></A
>5.2.3.2.78 security_classification_level</H4
><P
>The base definition of the security_classification_level entity is given in ISO 10303-41.</P
><P
>The definition of security_classification_level is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the security_classification_level entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_security_classification_level"
>dependent_instantiable_security_classification_level</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5914"
></A
>5.2.3.2.79 shape_aspect</H4
><P
>The base definition of the shape_aspect entity is given in ISO 10303-41.</P
><P
>The definition of shape_aspect is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the shape_aspect entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#component_termination_passage_template_terminal_constraint"
>component_termination_passage_template_terminal_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_termination_passage_template_terminal_unique_constraint"
>component_termination_passage_template_terminal_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#conductive_interconnect_element_with_pre_defined_transitions_constraint"
>conductive_interconnect_element_with_pre_defined_transitions_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#conductive_interconnect_element_with_user_defined_single_transition_constraint"
>conductive_interconnect_element_with_user_defined_single_transition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#connection_zone_constraint"
>connection_zone_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#interconnect_module_surface_feature_constraint"
>interconnect_module_surface_feature_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#mating_connector_termination_constraint"
>mating_connector_termination_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#mating_connector_termination_unique_constraint"
>mating_connector_termination_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#non_feature_shape_element_constraint"
>non_feature_shape_element_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_device_terminal_constraint"
>part_device_terminal_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_device_terminal_unique_constraint"
>part_device_terminal_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_feature_constraint"
>part_feature_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_feature_unique_constraint"
>part_feature_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#polarity_indication_feature_constraint"
>polarity_indication_feature_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_constraint"
>shape_element_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_combination_shape_aspect"
>subtype_combination_shape_aspect</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_boundary_member_constraint"
>tolerance_zone_boundary_member_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#topological_junction_constraint"
>topological_junction_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#topological_junction_unique_constraint"
>topological_junction_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#via_template_terminal_constraint"
>via_template_terminal_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#via_template_terminal_unique_constraint"
>via_template_terminal_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5944"
></A
>5.2.3.2.80 shape_aspect_deriving_relationship</H4
><P
>The base definition of the shape_aspect_deriving_relationship entity is given in ISO 10303-47.</P
><P
>The definition of shape_aspect_deriving_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the shape_aspect_deriving_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#shape_element_deriving_relationship_constraint"
>shape_element_deriving_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_deriving_relationship_unique_constraint"
>shape_element_deriving_relationship_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="5955"
></A
>5.2.3.2.81 shape_aspect_relationship</H4
><P
>The base definition of the shape_aspect_relationship entity is given in ISO 10303-41.</P
><P
>The definition of shape_aspect_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the shape_aspect_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#adjacent_stratum_surface_definition_constraint"
>adjacent_stratum_surface_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#adjacent_stratum_surface_definition_unique_constraint"
>adjacent_stratum_surface_definition_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#assembly_requirement_allocation_constraint"
>assembly_requirement_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#assembly_separation_requirement_allocation_constraint"
>assembly_separation_requirement_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_feature_to_layout_feature_relationship_constraint"
>component_feature_to_layout_feature_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_terminal_to_assembly_module_terminal_assignment_constraint"
>component_terminal_to_assembly_module_terminal_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_terminal_to_interconnect_module_terminal_assignment_constraint"
>component_terminal_to_interconnect_module_terminal_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_terminal_to_interconnect_module_terminal_assignment_unique_constraint"
>component_terminal_to_interconnect_module_terminal_assignment_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_terminal_to_pca_terminal_assignment_constraint"
>component_terminal_to_pca_terminal_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_terminal_to_pca_terminal_assignment_unique_constraint"
>component_terminal_to_pca_terminal_assignment_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#conical_tolerance_zone_boundary_and_surface_relationship_constraint"
>conical_tolerance_zone_boundary_and_surface_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_axis_and_tolerance_zone_orienting_relationship_constraint"
>datum_axis_and_tolerance_zone_orienting_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_feature_usage_in_common_datum_relationship_constraint"
>datum_feature_usage_in_common_datum_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_feature_usage_in_datum_relationship_constraint"
>datum_feature_usage_in_datum_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_feature_usage_in_datum_relationship_unique_constraint"
>datum_feature_usage_in_datum_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_feature_usage_in_datum_system_relationship_constraint"
>datum_feature_usage_in_datum_system_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_feature_usage_in_single_datum_relationship_constraint"
>datum_feature_usage_in_single_datum_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_target_usage_in_datum_target_set_relationship_constraint"
>datum_target_usage_in_datum_target_set_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_target_usage_in_datum_target_set_relationship_unique_constraint"
>datum_target_usage_in_datum_target_set_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_usage_in_datum_system_relationship_constraint"
>datum_usage_in_datum_system_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#datum_usage_in_datum_system_relationship_unique_constraint"
>datum_usage_in_datum_system_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_intent_modification_sequence_constraint"
>design_intent_modification_sequence_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#design_intent_modification_sequence_unique_constraint"
>design_intent_modification_sequence_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#device_terminal_map_relationship_constraint"
>device_terminal_map_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#edge_segment_vertex_constraint"
>edge_segment_vertex_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#equivalent_functional_terminals_assignment_constraint"
>equivalent_functional_terminals_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#feature_group_relationship_constraint"
>feature_group_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_usage_view_to_part_terminal_assignment_constraint"
>functional_usage_view_to_part_terminal_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_usage_view_to_part_terminal_assignment_unique_constraint"
>functional_usage_view_to_part_terminal_assignment_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_usage_view_to_printed_part_template_terminal_assignment_constraint"
>functional_usage_view_to_printed_part_template_terminal_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#functional_usage_view_to_printed_part_template_terminal_assignment_unique_constraint"
>functional_usage_view_to_printed_part_template_terminal_assignment_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#internal_stratum_access_constraint"
>internal_stratum_access_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#internal_stratum_access_unique_constraint"
>internal_stratum_access_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#junction_vertex_allocation_constraint"
>junction_vertex_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#junction_vertex_allocation_unique_constraint"
>junction_vertex_allocation_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#layout_spacing_requirement_non_conforming_design_object_constraint"
>layout_spacing_requirement_non_conforming_design_object_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#parallel_shape_element_relationship_constraint"
>parallel_shape_element_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#perpendicular_shape_element_relationship_constraint"
>perpendicular_shape_element_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#physical_connectivity_abstraction_map_unique_constraint"
>physical_connectivity_abstraction_map_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#physical_connectivity_definition_relationship_constraint"
>physical_connectivity_definition_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#placement_group_area_assignment_constraint"
>placement_group_area_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#positional_boundary_and_profile_boundary_member_relationship_constraint"
>positional_boundary_and_profile_boundary_member_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#printed_part_template_terminal_relationship_constraint"
>printed_part_template_terminal_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#runout_tolerance_zone_orienting_relationship_constraint"
>runout_tolerance_zone_orienting_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_boundary_relationship_constraint"
>shape_element_boundary_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_composing_relationship_constraint"
>shape_element_composing_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_constituent_relationship_constraint"
>shape_element_constituent_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_constituent_relationship_unique_constraint"
>shape_element_constituent_relationship_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_element_relationship_constraint"
>shape_element_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_concept_to_physical_usage_view_assignment_constraint"
>stratum_concept_to_physical_usage_view_assignment_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_exclusive_shape_aspect_relationship"
>subtype_exclusive_shape_aspect_relationship</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_and_viewing_plane_orienting_relationship_constraint"
>tolerance_zone_and_viewing_plane_orienting_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#transmission_line_functional_unit_terminal_allocation_constraint"
>transmission_line_functional_unit_terminal_allocation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#transmission_line_functional_unit_terminal_allocation_unique_constraint"
>transmission_line_functional_unit_terminal_allocation_unique_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6018"
></A
>5.2.3.2.82 shape_dimension_representation</H4
><P
>The base definition of the shape_dimension_representation entity is given in ISO 10303-47.</P
><P
>The definition of shape_dimension_representation is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the shape_dimension_representation entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#limit_dimension_representation_constraint"
>limit_dimension_representation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#plus_minus_tolerance_range_representation_constraint"
>plus_minus_tolerance_range_representation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_dimension_representation_constraint"
>shape_dimension_representation_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#singular_dimension_representation_constraint"
>singular_dimension_representation_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6031"
></A
>5.2.3.2.83 shape_representation</H4
><P
>The base definition of the shape_representation entity is given in ISO 10303-41.</P
><P
>The definition of shape_representation is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the shape_representation entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#bevel_edge_feature_shape_constraint"
>bevel_edge_feature_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#default_assembly_bond_shape_constraint"
>default_assembly_bond_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_shape_representation"
>dependent_instantiable_shape_representation</A
></LI
><LI
><A
HREF="ruledefs.htm#feature_shape_occurrence_constraint"
>feature_shape_occurrence_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#mating_connector_placement_relationship_constraint"
>mating_connector_placement_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_template_3d_shape_constraint"
>part_template_3d_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#part_template_planar_shape_constraint"
>part_template_planar_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#physical_unit_3d_shape_constraint"
>physical_unit_3d_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#physical_unit_planar_shape_constraint"
>physical_unit_planar_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#planar_curve_constraint"
>planar_curve_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#planar_projected_shape_constraint"
>planar_projected_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#radius_edge_feature_shape_constraint"
>radius_edge_feature_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#shape_representation_requires_origin"
>shape_representation_requires_origin</A
></LI
><LI
><A
HREF="ruledefs.htm#step_edge_feature_shape_constraint"
>step_edge_feature_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_3d_shape_constraint"
>stratum_3d_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#stratum_planar_shape_constraint"
>stratum_planar_shape_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_shape_representation"
>subtype_mandatory_shape_representation</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6057"
></A
>5.2.3.2.84 shape_representation_relationship</H4
><P
>The base definition of the shape_representation_relationship entity is given in ISO 10303-41.</P
><P
>The definition of shape_representation_relationship is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the shape_representation_relationship entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#component_part_2d_geometric_representation_relationship_constraint"
>component_part_2d_geometric_representation_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#component_part_3d_geometric_representation_relationship_constraint"
>component_part_3d_geometric_representation_relationship_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#consistent_part_template_shape_projection_constraint"
>consistent_part_template_shape_projection_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#consistent_physical_unit_shape_projection_constraint"
>consistent_physical_unit_shape_projection_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#consistent_stratum_shape_projection_constraint"
>consistent_stratum_shape_projection_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6071"
></A
>5.2.3.2.85 specified_higher_usage_occurrence</H4
><P
>The base definition of the specified_higher_usage_occurrence entity is given in ISO 10303-44.</P
><P
>The definition of specified_higher_usage_occurrence is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the specified_higher_usage_occurrence entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#next_higher_assembly_interface_requirement_constraint"
>next_higher_assembly_interface_requirement_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6081"
></A
>5.2.3.2.86 text_literal</H4
><P
>The base definition of the text_literal entity is given in ISO 10303-46.</P
><P
>The definition of text_literal is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the text_literal entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#subtype_mandatory_text_literal"
>subtype_mandatory_text_literal</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6091"
></A
>5.2.3.2.87 tolerance_value</H4
><P
>The base definition of the tolerance_value entity is given in ISO 10303-47.</P
><P
>The definition of tolerance_value is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the tolerance_value entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#dependent_instantiable_tolerance_value"
>dependent_instantiable_tolerance_value</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6101"
></A
>5.2.3.2.88 tolerance_zone</H4
><P
>The base definition of the tolerance_zone entity is given in ISO 10303-47.</P
><P
>The definition of tolerance_zone is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the tolerance_zone entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#tolerance_zone_constraint"
>tolerance_zone_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6111"
></A
>5.2.3.2.89 tolerance_zone_definition</H4
><P
>The base definition of the tolerance_zone_definition entity is given in ISO 10303-47.</P
><P
>The definition of tolerance_zone_definition is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the tolerance_zone_definition entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#conical_tolerance_zone_definition_constraint"
>conical_tolerance_zone_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_definition_constraint"
>tolerance_zone_definition_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#tolerance_zone_definition_with_per_unit_size_specification_constraint"
>tolerance_zone_definition_with_per_unit_size_specification_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6123"
></A
>5.2.3.2.90 tolerance_zone_form</H4
><P
>The base definition of the tolerance_zone_form entity is given in ISO 10303-47.</P
><P
>The definition of tolerance_zone_form is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the tolerance_zone_form entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#tolerance_zone_form_constraint"
>tolerance_zone_form_constraint</A
></LI
></UL
></DIV
></DIV
><DIV
CLASS="IMPORTENTITYDEF"
><H4
><A
NAME="6133"
></A
>5.2.3.2.91 versioned_action_request</H4
><P
>The base definition of the versioned_action_request entity is given in ISO 10303-41.</P
><P
>The definition of versioned_action_request is modified as follows:</P
><DIV
CLASS="ASSOCGLOBALRULESLIST"
><P
CLASS="ASSOCGLOBALRULESHEAD"
>Associated global rules:</P
><P
>The following global rule(s) defined in this part of ISO 10303 apply to the versioned_action_request entity:</P
><UL
><LI
><A
HREF="ruledefs.htm#change_request_unique_constraint"
>change_request_unique_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#versioned_action_request_requires_approval"
>versioned_action_request_requires_approval</A
></LI
><LI
><A
HREF="ruledefs.htm#versioned_action_request_requires_date_or_date_and_time"
>versioned_action_request_requires_date_or_date_and_time</A
></LI
><LI
><A
HREF="ruledefs.htm#versioned_action_request_requires_person_organization"
>versioned_action_request_requires_person_organization</A
></LI
><LI
><A
HREF="ruledefs.htm#versioned_action_request_requires_status"
>versioned_action_request_requires_status</A
></LI
><LI
><A
HREF="ruledefs.htm#work_request_constraint"
>work_request_constraint</A
></LI
><LI
><A
HREF="ruledefs.htm#work_request_unique_constraint"
>work_request_unique_constraint</A
></LI
></UL
></DIV
></DIV
></DIV
></DIV
></BODY
></HTML
>