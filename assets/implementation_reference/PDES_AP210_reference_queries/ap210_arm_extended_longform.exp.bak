(* ************************************************************************** *)


SCHEMA AP210_ARM_EXTENDED;



(* ***********************************
Constants in the schema AP210_ARM_EXTENDED
*********************************** *)


   CONSTANT
      dummy_gri : geometric_representation_item := representation_item('') || geometric_representation_item();
      dummy_tri : topological_representation_item := representation_item('') || topological_representation_item();
   END_CONSTANT;


(* ***********************************
Entities in the schema AP210_ARM_EXTENDED
*********************************** *)


   ENTITY absorbed_dose_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\absorbed_dose_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = gray;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY across_port_variable
   SUBTYPE OF (port_variable);
   WHERE
      WR1:
         EXISTS(SELF\port_variable.unit_of_measure);
   END_ENTITY;



   ENTITY activity_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\activity_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = becquerel;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY add_design_object_management_relationship
   SUBTYPE OF (design_object_management_relationship);
      current_design_object : managed_design_object;
   UNIQUE
      ur1 : current_design_object, current_design;
   END_ENTITY;



   ENTITY address;
      internal_location : OPTIONAL label;
      street_number : OPTIONAL label;
      street : OPTIONAL label;
      postal_box : OPTIONAL label;
      town : OPTIONAL label;
      region : OPTIONAL label;
      postal_code : OPTIONAL label;
      country : OPTIONAL label;
      facsimile_number : OPTIONAL label;
      telephone_number : OPTIONAL label;
      electronic_mail_address : OPTIONAL label;
      telex_number : OPTIONAL label;
   DERIVE
      name : label := get_name_value(SELF);
      url : identifier := get_id_value(SELF);
   WHERE
      WR1:
         ((((((((((EXISTS(internal_location) OR EXISTS(street_number)) OR EXISTS(street)) OR EXISTS(postal_box)) OR EXISTS(town)) OR EXISTS(region)) OR EXISTS(postal_code)) OR EXISTS(country)) OR EXISTS(facsimile_number)) OR EXISTS(telephone_number)) OR EXISTS(electronic_mail_address)) OR EXISTS(telex_number);
   END_ENTITY;



   ENTITY adjacent_stratum_surface_definition;
      name : STRING;
      precedent_surface : stratum_surface;
      subsequent_surface : stratum_surface;
   UNIQUE
      ur1 : name;
      ur2 : precedent_surface, subsequent_surface;
   WHERE
      WR1:
         precedent_surface.name = stratum_surface_designation.secondary_surface;
      WR2:
         subsequent_surface.name = stratum_surface_designation.primary_surface;
   END_ENTITY;



   ENTITY adjacent_stratum_surface_embedded_component_surface_definition;
      name : STRING;
      precedent_item : component_feature_or_stratum_surface;
      subsequent_item : component_feature_or_stratum_surface;
   UNIQUE
      ur1 : name;
      ur2 : precedent_item, subsequent_item;
   WHERE
      WR1:
         TYPEOF(precedent_item) <> TYPEOF(subsequent_item);
      WR2:
         NOT ('AP210_ARM_EXTENDED.DATUM_FEATURE_USAGE_IN_DATUM_RELATIONSHIP' IN TYPEOF(SELF));
      WR3:
         precedent_item <> subsequent_item;
      WR4:
         NOT ('AP210_ARM_EXTENDED.COMPONENT_FEATURE' IN TYPEOF(precedent_item)) OR (SIZEOF([ 'AP210_ARM_EXTENDED.BARE_DIE_SURFACE', 'AP210_ARM_EXTENDED.PACKAGE_BODY_SURFACE' ] * TYPEOF(precedent_item.definition)) = 1);
      WR5:
         NOT ('AP210_ARM_EXTENDED.COMPONENT_FEATURE' IN TYPEOF(subsequent_item)) OR (SIZEOF([ 'AP210_ARM_EXTENDED.BARE_DIE_SURFACE', 'AP210_ARM_EXTENDED.PACKAGE_BODY_SURFACE' ] * TYPEOF(subsequent_item.definition)) = 1);
   END_ENTITY;



   ENTITY advanced_brep_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.MANIFOLD_SOLID_BREP', 'AP210_ARM_EXTENDED.FACETED_BREP', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' ] * TYPEOF(it)) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.MANIFOLD_SOLID_BREP', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ] * TYPEOF(it)) = 1))) > 0;
      WR3:
         SIZEOF(QUERY (msb <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MANIFOLD_SOLID_BREP' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (csh <* msb_shells(msb, 'AIC_ADVANCED_BREP')| NOT (SIZEOF(QUERY (fcs <* csh\connected_face_set.cfs_faces| NOT ('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fcs)))) = 0))) = 0))) = 0;
      WR4:
         SIZEOF(QUERY (msb <* QUERY (it <* items| ('AP210_ARM_EXTENDED.MANIFOLD_SOLID_BREP' IN TYPEOF(it)))| ('AP210_ARM_EXTENDED.ORIENTED_CLOSED_SHELL' IN TYPEOF(msb\manifold_solid_brep.outer)))) = 0;
      WR5:
         SIZEOF(QUERY (brv <* QUERY (it <* items| ('AP210_ARM_EXTENDED.BREP_WITH_VOIDS' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (csh <* brv\brep_with_voids.voids| csh\oriented_closed_shell.orientation)) = 0))) = 0;
      WR6:
         SIZEOF(QUERY (mi <* QUERY (it <* items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.ADVANCED_BREP_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
   END_ENTITY;



   ENTITY advanced_face
   SUBTYPE OF (face_surface);
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.ELEMENTARY_SURFACE', 'AP210_ARM_EXTENDED.B_SPLINE_SURFACE', 'AP210_ARM_EXTENDED.SWEPT_SURFACE' ] * TYPEOF(face_geometry)) = 1;
      WR2:
         SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* SELF.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| NOT ('AP210_ARM_EXTENDED.EDGE_CURVE' IN TYPEOF(oe.edge_element)))) = 0))) = 0;
      WR3:
         SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* SELF.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.CONIC', 'AP210_ARM_EXTENDED.POLYLINE', 'AP210_ARM_EXTENDED.SURFACE_CURVE', 'AP210_ARM_EXTENDED.B_SPLINE_CURVE' ] * TYPEOF(oe.edge_element\edge_curve.edge_geometry)) = 1))) = 0))) = 0;
      WR4:
         SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* SELF.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| NOT ((('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(oe.edge_start)) AND ('AP210_ARM_EXTENDED.CARTESIAN_POINT' IN TYPEOF(oe.edge_start\vertex_point.vertex_geometry))) AND (('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(oe.edge_end)) AND ('AP210_ARM_EXTENDED.CARTESIAN_POINT' IN TYPEOF(oe.edge_end\vertex_point.vertex_geometry)))))) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* SELF.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| ('AP210_ARM_EXTENDED.ORIENTED_PATH' IN TYPEOF(elp_fbnds.bound)))) = 0;
      WR6:
         NOT ('AP210_ARM_EXTENDED.SWEPT_SURFACE' IN TYPEOF(face_geometry)) OR (SIZEOF([ 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.CONIC', 'AP210_ARM_EXTENDED.POLYLINE', 'AP210_ARM_EXTENDED.B_SPLINE_CURVE' ] * TYPEOF(face_geometry\swept_surface.swept_curve)) = 1);
      WR7:
         SIZEOF(QUERY (vlp_fbnds <* QUERY (bnds <* SELF.bounds| ('AP210_ARM_EXTENDED.VERTEX_LOOP' IN TYPEOF(bnds.bound)))| NOT (('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(vlp_fbnds\face_bound.bound\vertex_loop.loop_vertex)) AND ('AP210_ARM_EXTENDED.CARTESIAN_POINT' IN TYPEOF(vlp_fbnds\face_bound.bound\vertex_loop.loop_vertex\vertex_point.vertex_geometry))))) = 0;
      WR8:
         SIZEOF(QUERY (bnd <* SELF.bounds| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.EDGE_LOOP', 'AP210_ARM_EXTENDED.VERTEX_LOOP' ] * TYPEOF(bnd.bound)) = 1))) = 0;
      WR9:
         SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* SELF.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| ('AP210_ARM_EXTENDED.SURFACE_CURVE' IN TYPEOF(oe.edge_element\edge_curve.edge_geometry)) AND NOT (SIZEOF(QUERY (sc_ag <* oe.edge_element\edge_curve.edge_geometry\surface_curve.associated_geometry| NOT ('AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(sc_ag)))) = 0))) = 0))) = 0;
      WR10:
         (NOT ('AP210_ARM_EXTENDED.SWEPT_SURFACE' IN TYPEOF(face_geometry)) OR (NOT ('AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(face_geometry\swept_surface.swept_curve)) OR (SIZEOF(face_geometry\swept_surface.swept_curve\polyline.points) < 3))) AND (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* SELF.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| ('AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(oe.edge_element\edge_curve.edge_geometry)) AND NOT (SIZEOF(oe.edge_element\edge_curve.edge_geometry\polyline.points) < 3))) = 0))) = 0);
   END_ENTITY;



   ENTITY aggregate_connectivity_requirement;
      connectivity_requirement : functional_unit_network_node_definition;
      design_definition_path : design_composition_path_or_root;
   UNIQUE
      ur1 : design_definition_path, connectivity_requirement;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.FUNCTIONAL_UNIT_NETWORK_DEFINITION' IN TYPEOF(design_definition_path)) OR (connectivity_requirement.associated_functional_unit_definition = design_definition_path);
      WR2:
         NOT ('AP210_ARM_EXTENDED.DESIGN_COMPOSITION_PATH' IN TYPEOF(design_definition_path)) OR (connectivity_requirement.associated_functional_unit_definition = design_definition_path.design_functional_unit.definition);
   END_ENTITY;



   ENTITY alias_identification;
      alias_id : ee_name;
      is_applied_to : alias_select;
      alias_scope : organization;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY altered_package
   SUBTYPE OF (package);
      of_geometric_status : geometric_status;
      modified_terminal_separation : OPTIONAL length_measure_with_unit;
      package_to_be_altered : package;
   END_ENTITY;



   ENTITY altered_package_terminal
   ABSTRACT SUPERTYPE OF ((shape_formed_terminal ANDOR surface_prepped_terminal) ANDOR length_trimmed_terminal)
   SUBTYPE OF (package_terminal);
      terminal_to_be_altered : package_terminal;
      SELF\part_feature.associated_definition : altered_package;
   END_ENTITY;



   ENTITY altered_packaged_part
   SUBTYPE OF (packaged_part);
      SELF\packaged_part.used_package : SET [1:1] OF altered_package;
      base_packaged_part : packaged_part;
   END_ENTITY;



   ENTITY alternate_product
   SUBTYPE OF (alternate_select_product);
      SELF\alternate_select_product.defined_alternate_product : SET [1:1] OF ee_product;
   END_ENTITY;



   ENTITY alternate_select_product
   ABSTRACT SUPERTYPE OF (ONEOF(assembly_alternate_product, test_select_product, alternate_product));
      defined_alternate_product : SET [1:?] OF ee_product;
      defining_base_product : ee_product;
      authorizing_agreement : OPTIONAL contract;
   END_ENTITY;



   ENTITY amount_of_substance_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY amount_of_substance_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY analog_analytical_model_port
   SUBTYPE OF (analytical_model_port);
   INVERSE
      signal_variable : SET [1:?] OF port_variable FOR associated_port;
   END_ENTITY;



   ENTITY analytical_model;
      name : ee_name;
      representation_language : language_reference_manual;
      reference_document : ee_document;
      source_code : ee_specification;
      associated_definition : analytical_model_definition;
   INVERSE
      access_mechanism : SET [1:?] OF analytical_model_port FOR accessed_analytical_model;
      parameter : SET [1:?] OF analytical_model_parameter FOR accessed_analytical_model;
   UNIQUE
      ur1 : associated_definition;
   END_ENTITY;



   ENTITY analytical_model_definition
   SUBTYPE OF (ee_product_definition);
   INVERSE
      associated_model_occurrence : analytical_model FOR associated_definition;
   END_ENTITY;



   ENTITY analytical_model_make_from_relationship;
      reusable_model : analytical_model;
      resultant_model : analytical_model;
   UNIQUE
      ur1 : reusable_model, resultant_model;
   WHERE
      WR1:
         reusable_model :<>: resultant_model;
   END_ENTITY;



   ENTITY analytical_model_parameter
   SUBTYPE OF (model_parameter);
      accessed_analytical_model : analytical_model;
   UNIQUE
      ur1 : SELF\model_parameter.parameter_id, accessed_analytical_model;
   END_ENTITY;



   ENTITY analytical_model_port
   SUPERTYPE OF (analytical_model_vector_port ANDOR ONEOF(analog_analytical_model_port, digital_analytical_model_port));
      accessed_analytical_model : analytical_model;
      port_name : ee_name;
   UNIQUE
      ur1 : port_name, accessed_analytical_model;
   END_ENTITY;



   ENTITY analytical_model_port_assignment;
      assigned_functional_unit_terminal : functional_unit_usage_view_terminal_definition;
      assigned_analytical_model_port : analytical_model_port;
   WHERE
      WR1:
         NOT (('AP210_ARM_EXTENDED.ANALYTICAL_MODEL_SCALAR_PORT' IN TYPEOF(assigned_analytical_model_port)) XOR ('AP210_ARM_EXTENDED.SCALAR_TERMINAL_DEFINITION' IN TYPEOF(assigned_functional_unit_terminal)));
   END_ENTITY;



   ENTITY analytical_model_port_make_from_relationship;
      associated_make_from : analytical_model_make_from_relationship;
      reusable_feature : analytical_model_port;
      resultant_feature : analytical_model_port;
   UNIQUE
      ur1 : reusable_feature, resultant_feature;
   WHERE
      WR1:
         reusable_feature :<>: resultant_feature;
      WR2:
         reusable_feature.accessed_analytical_model :<>: resultant_feature.accessed_analytical_model;
   END_ENTITY;



   ENTITY analytical_model_scalar_port
   SUBTYPE OF (analytical_model_vector_port);
   WHERE
      WR1:
         SELF\analytical_model_vector_port.size = 1;
   END_ENTITY;



   ENTITY analytical_model_vector_port
   SUPERTYPE OF (analytical_model_scalar_port)
   SUBTYPE OF (analytical_model_port);
      size : positive_integer;
   END_ENTITY;



   ENTITY analytical_representation;
      model_parameter_assignment : SET [1:?] OF parameter_assignment;
      model_representation : analytical_model;
      analytical_representation_name : ee_name;
   UNIQUE
      ur1 : analytical_representation_name;
   END_ENTITY;



   ENTITY angular_dimension_with_direction_vector
   SUBTYPE OF (dimensional_location);
      measurement_orientation : axis2_placement_or_datum_based_vector_orientation_select;
   UNIQUE
      ur1 : SELF\dimensional_location.located_elements, measurement_orientation;
   END_ENTITY;



   ENTITY angular_size_dimension
   SUBTYPE OF (dimensional_size);
      half_angle : BOOLEAN;
      major_angle : angle_relator;
   END_ENTITY;



   ENTITY angularity_tolerance
   SUBTYPE OF (geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY annotation_fill_area
   SUBTYPE OF (geometric_representation_item);
      boundaries : SET [1:?] OF curve;
   END_ENTITY;



   ENTITY apex
   SUBTYPE OF (derived_shape_element);
   END_ENTITY;



   ENTITY area_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.AREA_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY area_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 2.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY arm_supertype
   ABSTRACT SUPERTYPE;
   END_ENTITY;



   ENTITY array_placement_group
   ABSTRACT SUPERTYPE OF (ONEOF(laminate_text_string_component, linear_array_placement_group_component, rectangular_array_placement_group_component))
   SUBTYPE OF (assembly_group_component);
   END_ENTITY;



   ENTITY assembled_with_bonding
   SUBTYPE OF (assembly_joint);
      default_bond_definition : assembly_bond_definition;
   INVERSE
      bond_assembly_position : SET [0:1] OF bond_assembly_position FOR bond;
   WHERE
      WR1:
         SELF\assembly_joint.assembly_features_1.definition :=: default_bond_definition.bonded_feature_1;
      WR2:
         SELF\assembly_joint.assembly_features_2.definition :=: default_bond_definition.bonded_feature_2;
   END_ENTITY;



   ENTITY assembled_with_fasteners
   SUBTYPE OF (assembly_joint);
      SELF\assembly_joint.associated_assembly : assembly_group_component;
   END_ENTITY;



   ENTITY assembly_alternate_product
   SUBTYPE OF (alternate_select_product);
      basis_context : physical_unit_design_view;
   END_ENTITY;



   ENTITY assembly_bond_definition;
      analytical_assembly_bond_representation : OPTIONAL SET [1:?] OF analytical_representation;
      associated_definition : externally_defined_ee_product_definition;
      bond_category : external_definition;
      bond_material : ee_material;
      bonded_feature_1 : part_feature;
      bonded_feature_2 : part_feature;
      name : ee_name;
   INVERSE
      default_shape : SET [0:1] OF default_assembly_bond_shape FOR characterized_bond_definition;
   UNIQUE
      ur1 : name;
   WHERE
      WR1:
         bonded_feature_1 <> bonded_feature_2;
   END_ENTITY;



   ENTITY assembly_component
   ABSTRACT SUPERTYPE OF (((ONEOF(physical_component, printed_component, laminate_component) ANDOR shield) ANDOR thermal_component) ANDOR assembly_group_component);
      usage_definition : OPTIONAL physical_unit_or_part_template_or_fp_or_pd;
   INVERSE
      assembly : SET [0:?] OF assembly_composition_relationship FOR component;
      component_2d_shape : SET [0:1] OF assembly_component_2d_shape FOR shape_characterized_component;
      component_3d_shape : SET [0:1] OF assembly_component_3d_shape FOR shape_characterized_component;
      component_non_planar_shape : SET [0:1] OF assembly_component_non_planar_shape FOR shape_characterized_component;
   WHERE
      WR1:
         NOT EXISTS(usage_definition) OR (((('AP210_ARM_EXTENDED.FOOTPRINT_OCCURRENCE' IN TYPEOF(SELF)) AND ('AP210_ARM_EXTENDED.FOOTPRINT_DEFINITION' IN TYPEOF(usage_definition)) OR NOT ('AP210_ARM_EXTENDED.FOOTPRINT_OCCURRENCE' IN TYPEOF(SELF)) AND NOT ('AP210_ARM_EXTENDED.FOOTPRINT_DEFINITION' IN TYPEOF(usage_definition))) OR ('AP210_ARM_EXTENDED.PADSTACK_OCCURRENCE' IN TYPEOF(SELF)) AND ('AP210_ARM_EXTENDED.PADSTACK_DEFINITION' IN TYPEOF(usage_definition))) OR NOT ('AP210_ARM_EXTENDED.PADSTACK_OCCURRENCE' IN TYPEOF(SELF)) AND NOT ('AP210_ARM_EXTENDED.PADSTACK_DEFINITION' IN TYPEOF(usage_definition)));
      WR3:
         NOT (SIZEOF(assembly) = 0) OR ('AP210_ARM_EXTENDED.LAMINATE_COMPONENT' IN TYPEOF(SELF));
      WR4:
         NOT (SIZEOF(assembly) = 0) OR (SIZEOF(SELF\laminate_component.padstack_occurrence_assembly) + SIZEOF(SELF\laminate_component.footprint_occurrence_assembly) = 1);
      WR5:
         (SIZEOF(assembly) > 0) OR ('AP210_ARM_EXTENDED.LAMINATE_COMPONENT' IN TYPEOF(SELF)) AND (SIZEOF(SELF\laminate_component.padstack_occurrence_assembly) + SIZEOF(SELF\laminate_component.footprint_occurrence_assembly) = 1);
   END_ENTITY;



   ENTITY assembly_component_2d_shape
   SUBTYPE OF (planar_projected_shape);
      shape_characterized_component : SET [1:?] OF assembly_component;
   END_ENTITY;



   ENTITY assembly_component_3d_shape
   SUBTYPE OF (feature_shape_definition);
      shape_characterized_component : SET [1:?] OF assembly_component;
   END_ENTITY;



   ENTITY assembly_component_non_planar_shape
   SUBTYPE OF (manifold_subsurface_shape, feature_shape_definition);
      shape_characterized_component : SET [1:?] OF assembly_component;
   END_ENTITY;



   ENTITY assembly_component_placement_link;
      precedent_element : assembly_component;
      subsequent_element : assembly_component;
   INVERSE
      referenced_by : linear_array_placement_group_component FOR element;
   END_ENTITY;



   ENTITY assembly_composition_relationship
   SUPERTYPE OF (ONEOF(assembly_material_composition_relationship, next_higher_assembly_relationship));
      assembly : physical_unit_or_pund;
      component : assembly_component_or_material;
      security_code : OPTIONAL security_classification;
   INVERSE
      item_number : SET [0:1] OF assembly_item_number FOR assembly_usage;
   UNIQUE
      ur1 : assembly, component;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.MATERIAL_DEFINITION' IN TYPEOF(component)) OR ('AP210_ARM_EXTENDED.ASSEMBLY_MATERIAL_COMPOSITION_RELATIONSHIP' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY assembly_group_component
   SUPERTYPE OF ((interfaced_group_component ANDOR array_placement_group) ANDOR ONEOF(footprint_occurrence, padstack_occurrence))
   SUBTYPE OF (assembly_component);
   INVERSE
      components : SET [0:?] OF sub_assembly_relationship FOR relating_component;
   WHERE
      WR1:
         NOT (SIZEOF(components) = 0) OR (SIZEOF([ 'AP210_ARM_EXTENDED.FOOTPRINT_OCCURRENCE', 'AP210_ARM_EXTENDED.PADSTACK_OCCURRENCE' ] * TYPEOF(SELF)) = 1);
      WR2:
         NOT (SIZEOF([ 'AP210_ARM_EXTENDED.FOOTPRINT_OCCURRENCE', 'AP210_ARM_EXTENDED.PADSTACK_OCCURRENCE' ] * TYPEOF(SELF)) = 1) OR (SIZEOF(components) = 0);
   END_ENTITY;



   ENTITY assembly_item_number;
      assembly_usage : SET [1:?] OF assembly_composition_relationship;
      item_number : ee_name;
   DERIVE
      assembly : physical_unit_design_view := assembly_usage[1].assembly;
      part : ee_product := assembly_usage[1].component\assembly_component.usage_definition\ee_product_definition.version.versioned_item;
   UNIQUE
      ur1 : assembly, item_number;
   WHERE
      WR1:
         SIZEOF(QUERY (au <* assembly_usage| NOT (au.component\assembly_component.usage_definition\ee_product_definition.version.versioned_item = part))) = 0;
      WR2:
         SIZEOF(QUERY (au <* assembly_usage| NOT (au.assembly = assembly))) = 0;
   END_ENTITY;



   ENTITY assembly_joint
   SUPERTYPE OF (assembled_with_fasteners ANDOR assembled_with_bonding);
      assembly_features_1 : assembled_feature_select;
      assembly_features_2 : assembled_feature_select;
      associated_assembly : assembly_module_or_assembly_group_component;
      description : OPTIONAL STRING;
      name : STRING;
   UNIQUE
      ur1 : name, associated_assembly;
   WHERE
      WR1:
         assembly_features_1 :<>: assembly_features_2;
      WR2:
         ('AP210_ARM_EXTENDED.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR ('AP210_ARM_EXTENDED.COMPONENT_FEATURE' IN TYPEOF(assembly_features_1)) AND (SIZEOF(QUERY (ay <* assembly_features_1\component_feature.associated_component\assembly_component.assembly| (ay.assembly <> associated_assembly))) = 0);
      WR3:
         ('AP210_ARM_EXTENDED.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR ('AP210_ARM_EXTENDED.COMPONENT_FEATURE' IN TYPEOF(assembly_features_2)) AND (SIZEOF(QUERY (ay <* assembly_features_2\component_feature.associated_component\assembly_component.assembly| (ay.assembly <> associated_assembly))) = 0);
   END_ENTITY;



   ENTITY assembly_material_composition_relationship
   SUBTYPE OF (assembly_composition_relationship);
      quantity : OPTIONAL measure_with_unit;
      SELF\assembly_composition_relationship.assembly : physical_unit_design_view;
      SELF\assembly_composition_relationship.component : material_definition;
      as_required : LOGICAL;
   END_ENTITY;



   ENTITY assembly_module
   SUPERTYPE OF (ONEOF(pca, reference_packaged_part_assembly_implementation))
   SUBTYPE OF (physical_unit_design_view);
   END_ENTITY;



   ENTITY assembly_module_component
   SUPERTYPE OF (assembly_module_macro_component)
   SUBTYPE OF (physical_component);
      SELF\assembly_component.usage_definition : assembly_module_usage_view;
   INVERSE
      access_mechanisms : SET [2:?] OF assembly_module_component_terminal FOR associated_component;
   END_ENTITY;



   ENTITY assembly_module_component_terminal
   SUBTYPE OF (physical_component_terminal);
      SELF\component_feature.definition : assembly_module_terminal;
      SELF\component_feature.associated_component : assembly_module_component;
   END_ENTITY;



   ENTITY assembly_module_interface_terminal
   SUBTYPE OF (assembly_module_terminal);
   END_ENTITY;



   ENTITY assembly_module_join_terminal
   SUBTYPE OF (assembly_module_terminal);
   INVERSE
      defining_terminal : component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_JOIN_TERMINAL' IN TYPEOF(defining_terminal.assigned_terminal);
      WR2:
         'AP210_ARM_EXTENDED.' + 'COMPONENT_TERMINAL_TO_ASSEMBLY_MODULE_JOIN_TERMINAL_ASSIGNMENT' IN TYPEOF(defining_terminal);
      WR3:
         NOT (SIZEOF(USEDIN(SELF, '')) = 0) OR (SIZEOF(QUERY (ct <* USEDIN(SELF, '')| NOT ('AP210_ARM_EXTENDED.ASSEMBLY_MODULE_MACRO_COMPONENT_JOIN_TERMINAL' IN TYPEOF(ct)))) = 0);
   END_ENTITY;



   ENTITY assembly_module_macro_component
   SUBTYPE OF (assembly_module_component);
      design_definition : assembly_module;
   INVERSE
      join_access_mechanisms : SET [1:?] OF assembly_module_macro_component_join_terminal FOR associated_component;
   WHERE
      WR1:
         SIZEOF(QUERY (ammcjt <* join_access_mechanisms| (ammcjt\component_feature.definition\part_feature.associated_definition :<>: design_definition\physical_unit_design_view.usage_view))) = 0;
   END_ENTITY;



   ENTITY assembly_module_macro_component_join_terminal
   SUBTYPE OF (assembly_module_component_terminal);
      SELF\component_feature.definition : assembly_module_join_terminal;
      SELF\component_feature.associated_component : assembly_module_macro_component;
   END_ENTITY;



   ENTITY assembly_module_terminal
   SUPERTYPE OF (ONEOF(assembly_module_interface_terminal, assembly_module_join_terminal) ANDOR pca_terminal)
   SUBTYPE OF (part_terminal);
      SELF\part_feature.associated_definition : assembly_module_usage_view;
      reference_terminal : OPTIONAL packaged_part_interface_terminal;
      related_connector : OPTIONAL next_higher_assembly_relationship;
      terminal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
   INVERSE
      feature_shape : SET [1:?] OF usage_concept_usage_relationship FOR associated_usage;
   WHERE
      WR1:
         NOT EXISTS(related_connector) OR (SELF\part_feature.associated_definition = related_connector\assembly_composition_relationship.assembly);
      WR2:
         EXISTS(related_connector.reference_designation);
   END_ENTITY;



   ENTITY assembly_module_usage_view
   SUPERTYPE OF (pca_usage_view)
   SUBTYPE OF (physical_unit_usage_view);
      implemented_function : functional_unit_usage_view;
      maximum_negative_component_height : OPTIONAL datum_based_length_measure;
      maximum_positive_component_height : OPTIONAL datum_based_length_measure;
   INVERSE
      access_mechanisms : SET [2:?] OF assembly_module_terminal FOR associated_definition;
   END_ENTITY;



   ENTITY assembly_requirement_allocation
   SUPERTYPE OF ((thermal_requirement_allocation ANDOR electromagnetic_compatibility_requirement_allocation) ANDOR assembly_separation_requirement_allocation)
   SUBTYPE OF (requirement_allocation);
      SELF\requirement_allocation.target_product_object : component_or_feature;
   END_ENTITY;



   ENTITY assembly_separation_requirement_allocation
   SUBTYPE OF (assembly_requirement_allocation);
      disjoint_assignment : SET [1:?] OF component_or_feature;
   END_ENTITY;



   ENTITY assembly_technology_specification
   SUBTYPE OF (process_specification);
   END_ENTITY;



   ENTITY axis1_placement
   SUBTYPE OF (placement);
      axis : OPTIONAL direction;
   DERIVE
      z : direction := NVL(normalise(axis), dummy_gri || direction([ 0.00000, 0.00000, 1.00000 ]));
   WHERE
      WR1:
         SELF\geometric_representation_item.dim = 3;
   END_ENTITY;



   ENTITY axis2_placement_2d
   SUBTYPE OF (placement);
      ref_direction : OPTIONAL direction;
   DERIVE
      p : LIST [2:2] OF direction := build_2axes(ref_direction);
   WHERE
      WR1:
         SELF\geometric_representation_item.dim = 2;
   END_ENTITY;



   ENTITY axis2_placement_3d
   SUBTYPE OF (placement);
      axis : OPTIONAL direction;
      ref_direction : OPTIONAL direction;
   DERIVE
      p : LIST [3:3] OF direction := build_axes(axis, ref_direction);
   WHERE
      WR1:
         SELF\placement.location.dim = 3;
      WR2:
         NOT EXISTS(axis) OR (axis.dim = 3);
      WR3:
         NOT EXISTS(ref_direction) OR (ref_direction.dim = 3);
      WR4:
         (NOT EXISTS(axis) OR NOT EXISTS(ref_direction)) OR (cross_product(axis, ref_direction).magnitude > 0.00000);
   END_ENTITY;



   ENTITY b_spline_curve
   SUPERTYPE OF (ONEOF(uniform_curve, b_spline_curve_with_knots, quasi_uniform_curve, bezier_curve) ANDOR rational_b_spline_curve)
   SUBTYPE OF (bounded_curve);
      degree : INTEGER;
      control_points_list : LIST [2:?] OF cartesian_point;
      curve_form : b_spline_curve_form;
      closed_curve : LOGICAL;
      self_intersect : LOGICAL;
   DERIVE
      upper_index_on_control_points : INTEGER := SIZEOF(control_points_list) - 1;
      control_points : ARRAY [0:upper_index_on_control_points] OF cartesian_point := list_to_array(control_points_list, 0, upper_index_on_control_points);
   WHERE
      WR1:
         ((('AP210_ARM_EXTENDED.UNIFORM_CURVE' IN TYPEOF(SELF)) OR ('AP210_ARM_EXTENDED.QUASI_UNIFORM_CURVE' IN TYPEOF(SELF))) OR ('AP210_ARM_EXTENDED.BEZIER_CURVE' IN TYPEOF(SELF))) OR ('AP210_ARM_EXTENDED.B_SPLINE_CURVE_WITH_KNOTS' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY b_spline_curve_with_knots
   SUBTYPE OF (b_spline_curve);
      knot_multiplicities : LIST [2:?] OF INTEGER;
      knots : LIST [2:?] OF parameter_value;
      knot_spec : knot_type;
   DERIVE
      upper_index_on_knots : INTEGER := SIZEOF(knots);
   WHERE
      WR1:
         constraints_param_b_spline(degree, upper_index_on_knots, upper_index_on_control_points, knot_multiplicities, knots);
      WR2:
         SIZEOF(knot_multiplicities) = upper_index_on_knots;
   END_ENTITY;



   ENTITY b_spline_surface
   SUPERTYPE OF (ONEOF(b_spline_surface_with_knots, uniform_surface, quasi_uniform_surface, bezier_surface) ANDOR rational_b_spline_surface)
   SUBTYPE OF (bounded_surface);
      u_degree : INTEGER;
      v_degree : INTEGER;
      control_points_list : LIST [2:?] OF LIST [2:?] OF cartesian_point;
      surface_form : b_spline_surface_form;
      u_closed : LOGICAL;
      v_closed : LOGICAL;
      self_intersect : LOGICAL;
   DERIVE
      u_upper : INTEGER := SIZEOF(control_points_list) - 1;
      v_upper : INTEGER := SIZEOF(control_points_list[1]) - 1;
      control_points : ARRAY [0:u_upper] OF ARRAY [0:v_upper] OF cartesian_point := make_array_of_array(control_points_list, 0, u_upper, 0, v_upper);
   WHERE
      WR1:
         ((('AP210_ARM_EXTENDED.UNIFORM_SURFACE' IN TYPEOF(SELF)) OR ('AP210_ARM_EXTENDED.QUASI_UNIFORM_SURFACE' IN TYPEOF(SELF))) OR ('AP210_ARM_EXTENDED.BEZIER_SURFACE' IN TYPEOF(SELF))) OR ('AP210_ARM_EXTENDED.B_SPLINE_SURFACE_WITH_KNOTS' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY b_spline_surface_with_knots
   SUBTYPE OF (b_spline_surface);
      u_multiplicities : LIST [2:?] OF INTEGER;
      v_multiplicities : LIST [2:?] OF INTEGER;
      u_knots : LIST [2:?] OF parameter_value;
      v_knots : LIST [2:?] OF parameter_value;
      knot_spec : knot_type;
   DERIVE
      knot_u_upper : INTEGER := SIZEOF(u_knots);
      knot_v_upper : INTEGER := SIZEOF(v_knots);
   WHERE
      WR1:
         constraints_param_b_spline(SELF\b_spline_surface.u_degree, knot_u_upper, SELF\b_spline_surface.u_upper, u_multiplicities, u_knots);
      WR2:
         constraints_param_b_spline(SELF\b_spline_surface.v_degree, knot_v_upper, SELF\b_spline_surface.v_upper, v_multiplicities, v_knots);
      WR3:
         SIZEOF(u_multiplicities) = knot_u_upper;
      WR4:
         SIZEOF(v_multiplicities) = knot_v_upper;
   END_ENTITY;



   ENTITY bare_die
   SUBTYPE OF (physical_unit_usage_view);
      least_material_condition_centroid_location : OPTIONAL cartesian_point;
      maximum_height_above_seating_plane : OPTIONAL length_measure_with_unit;
      maximum_material_condition_centroid_location : OPTIONAL cartesian_point;
      SELF\physical_unit.unit_technology : technology;
      implemented_function : functional_unit_usage_view;
   INVERSE
      access_mechanisms : SET [2:?] OF minimally_defined_bare_die_terminal FOR associated_definition;
      die_seating_plane : non_feature_shape_element FOR scope;
   UNIQUE
      ur1 : implemented_function, SELF\physical_unit.unit_technology;
   WHERE
      WR1:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.PART_FEATURE.ASSOCIATED_DEFINITION')| ('AP210_ARM_EXTENDED.' + 'BARE_DIE_TOP_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.PART_FEATURE.ASSOCIATED_DEFINITION')| ('AP210_ARM_EXTENDED.' + 'BARE_DIE_BOTTOM_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.PART_FEATURE.ASSOCIATED_DEFINITION')| ('AP210_ARM_EXTENDED.' + 'BARE_DIE_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR4:
         'AP210_ARM_EXTENDED.SEATING_PLANE' IN TYPEOF(die_seating_plane);
   END_ENTITY;



   ENTITY bare_die_bottom_surface
   SUBTYPE OF (bare_die_surface);
      SELF\part_feature.associated_definition : bare_die;
   END_ENTITY;



   ENTITY bare_die_component
   SUBTYPE OF (physical_component);
      SELF\assembly_component.usage_definition : bare_die;
   END_ENTITY;



   ENTITY bare_die_component_terminal
   SUBTYPE OF (physical_component_terminal);
      SELF\component_feature.definition : bare_die_terminal;
      SELF\component_feature.associated_component : bare_die_component;
   END_ENTITY;



   ENTITY bare_die_edge_segment_surface
   SUBTYPE OF (bare_die_surface);
      composed_surface : bare_die_edge_surface;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
      SELF\part_feature.associated_definition : bare_die;
   WHERE
      WR1:
         start_vertex :<>: end_vertex;
      WR2:
         SELF\part_feature.associated_definition :=: composed_surface\part_feature.associated_definition;
   END_ENTITY;



   ENTITY bare_die_edge_surface
   SUBTYPE OF (bare_die_surface);
      SELF\part_feature.associated_definition : bare_die;
   END_ENTITY;



   ENTITY bare_die_surface
   ABSTRACT SUPERTYPE OF (ONEOF(bare_die_top_surface, bare_die_bottom_surface, bare_die_edge_segment_surface, bare_die_edge_surface))
   SUBTYPE OF (part_mounting_feature);
   END_ENTITY;



   ENTITY bare_die_terminal
   SUBTYPE OF (minimally_defined_bare_die_terminal);
      material : ee_material;
      external_connection_area : OPTIONAL SET [1:?] OF connection_zone;
      seating_plane_zone : OPTIONAL connection_zone_interface_plane_relationship;
   END_ENTITY;



   ENTITY bare_die_terminal_surface_constituent_relationship
   SUBTYPE OF (shape_element_constituent_relationship);
      SELF\shape_element_relationship.relating_shape_element : bare_die_surface;
      SELF\shape_element_relationship.related_shape_element : bare_die_terminal;
   END_ENTITY;



   ENTITY bare_die_top_surface
   SUBTYPE OF (bare_die_surface);
      SELF\part_feature.associated_definition : bare_die;
   END_ENTITY;



   ENTITY bevel_edge_feature_shape
   SUBTYPE OF (edge_shape);
      minimum_bevel_width : length_measure_with_unit;
      minimum_bevel_angle : plane_angle_measure_with_unit;
      maximum_bevel_width : length_measure_with_unit;
      maximum_bevel_angle : plane_angle_measure_with_unit;
   END_ENTITY;



   ENTITY bezier_curve
   SUBTYPE OF (b_spline_curve);
   END_ENTITY;



   ENTITY bezier_surface
   SUBTYPE OF (b_spline_surface);
   END_ENTITY;



   ENTITY blind_passage_template
   SUBTYPE OF (unsupported_passage_template);
      of_measure_orientation : measure_orientation;
      datum_reference : stratum_surface;
      bottom_distance_from_datum_reference : shape_dimension_representation;
   END_ENTITY;



   ENTITY blind_via
   ABSTRACT SUPERTYPE OF (ONEOF(bonded_conductive_base_blind_via, non_conductive_base_blind_via, plated_conductive_base_blind_via))
   SUBTYPE OF (via);
   END_ENTITY;



   ENTITY block
   SUBTYPE OF (geometric_representation_item);
      position : axis2_placement_3d;
      x : positive_length_measure;
      y : positive_length_measure;
      z : positive_length_measure;
   END_ENTITY;



   ENTITY bond_assembly_position;
      bond : assembled_with_bonding;
      assembly_model : physical_unit_3d_shape;
      bond_model : default_assembly_bond_shape;
      bond_definition_placement : axis2_placement_3d;
   END_ENTITY;



   ENTITY bonded_conductive_base_blind_via
   SUBTYPE OF (blind_via);
      features_join : stratum_feature_conductive_join;
   END_ENTITY;



   ENTITY boolean_result
   SUBTYPE OF (geometric_representation_item);
      operator : boolean_operator;
      first_operand : boolean_operand;
      second_operand : boolean_operand;
   END_ENTITY;



   ENTITY boundary_based_position_tolerance
   SUBTYPE OF (position_tolerance_with_referenced_datum_system, geometric_tolerance_with_applied_material_condition_property);
      profile_control : OPTIONAL profile_of_any_surface_tolerance_with_referenced_datum_system;
   END_ENTITY;



   ENTITY boundary_curve
   SUBTYPE OF (composite_curve_on_surface);
   WHERE
      WR1:
         SELF\composite_curve.closed_curve;
   END_ENTITY;



   ENTITY boundary_size_characteristic
   ABSTRACT SUPERTYPE OF (ONEOF(diametrical_boundary_size_characteristic, opposing_boundary_set_size_characteristic));
      tolerance_value : length_measure_with_unit;
      maximum_tolerance_value : OPTIONAL length_measure_with_unit;
   INVERSE
      boundary_definition : boundary_zone_definition_with_specified_size FOR specified_boundary_size;
   END_ENTITY;



   ENTITY boundary_zone_definition_with_specified_size
   SUPERTYPE OF (profile_boundary_definition)
   SUBTYPE OF (tolerance_zone_boundary_definition);
      specified_boundary_size : boundary_size_characteristic;
   END_ENTITY;



   ENTITY bounded_curve
   SUPERTYPE OF (ONEOF(polyline, b_spline_curve, trimmed_curve, bounded_pcurve, bounded_surface_curve, composite_curve))
   SUBTYPE OF (curve);
   END_ENTITY;



   ENTITY bounded_pcurve
   SUBTYPE OF (pcurve, bounded_curve);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.BOUNDED_CURVE' IN TYPEOF(SELF\pcurve.reference_to_curve.items[1]);
   END_ENTITY;



   ENTITY bounded_surface
   SUPERTYPE OF (ONEOF(b_spline_surface, rectangular_trimmed_surface, curve_bounded_surface, rectangular_composite_surface))
   SUBTYPE OF (surface);
   END_ENTITY;



   ENTITY bounded_surface_curve
   SUBTYPE OF (surface_curve, bounded_curve);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.BOUNDED_CURVE' IN TYPEOF(SELF\surface_curve.curve_3d);
   END_ENTITY;



   ENTITY bounding_curve
   SUBTYPE OF (curve);
      mapping_function : external_definition;
      basis_curve : trimmed_curve;
   END_ENTITY;



   ENTITY box_domain
   SUBTYPE OF (founded_item);
      corner : cartesian_point;
      xlength : positive_length_measure;
      ylength : positive_length_measure;
      zlength : positive_length_measure;
   WHERE
      WR1:
         SIZEOF(QUERY (item <* USEDIN(SELF, '')| NOT ('AP210_ARM_EXTENDED.BOXED_HALF_SPACE' IN TYPEOF(item)))) = 0;
   END_ENTITY;



   ENTITY boxed_half_space
   SUBTYPE OF (half_space_solid);
      enclosure : box_domain;
   END_ENTITY;



   ENTITY brep_with_voids
   SUBTYPE OF (manifold_solid_brep);
      voids : SET [1:?] OF oriented_closed_shell;
   END_ENTITY;



   ENTITY buried_via
   SUBTYPE OF (via);
   END_ENTITY;



   ENTITY bus_element_link;
      precedent_element : bus_structural_definition_or_node;
      subsequent_element : bus_structural_definition_or_node;
   UNIQUE
      ur1 : precedent_element, subsequent_element;
   WHERE
      WR1:
         precedent_element <> subsequent_element;
   END_ENTITY;



   ENTITY bus_structural_definition;
      bus_name : ee_name;
      composition : SET [1:?] OF bus_element_link;
   INVERSE
      external_bus_access : SET [0:1] OF functional_unit_network_terminal_definition_bus_assignment FOR connected_bus;
   UNIQUE
      ur1 : bus_name;
   WHERE
      WR1:
         consistent_bus_structural_definition(composition);
   END_ENTITY;



   ENTITY cable_component
   SUBTYPE OF (physical_component);
      SELF\assembly_component.usage_definition : cable_usage_view;
   END_ENTITY;



   ENTITY cable_terminal
   SUBTYPE OF (part_terminal);
      SELF\part_feature.associated_definition : cable_usage_view;
      mapped_terminal : packaged_connector_component_interface_terminal;
      terminal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
   WHERE
      WR1:
         SIZEOF(mapped_terminal\component_feature.associated_component\assembly_component.assembly) <> 0;
      WR2:
         SELF\part_feature.associated_definition :=: mapped_terminal\component_feature.associated_component\assembly_component.assembly[1].assembly;
   END_ENTITY;



   ENTITY cable_usage_view
   SUBTYPE OF (physical_unit_usage_view);
   INVERSE
      access_mechanisms : SET [1:?] OF cable_terminal FOR associated_definition;
   END_ENTITY;



   ENTITY calendar_date
   SUBTYPE OF (date);
      day_component : day_in_month_number;
      month_component : month_in_year_number;
   WHERE
      WR1:
         valid_calendar_date(SELF);
   END_ENTITY;



   ENTITY capacitance_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\capacitance_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = farad;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY cartesian_coordinate_system
   SUBTYPE OF (geometric_representation_context, global_unit_assigned_context, global_uncertainty_assigned_context);
   END_ENTITY;



   ENTITY cartesian_point
   SUBTYPE OF (point);
      coordinates : LIST [1:3] OF length_measure;
   END_ENTITY;



   ENTITY cartesian_transformation_operator
   SUPERTYPE OF (ONEOF(cartesian_transformation_operator_2d, cartesian_transformation_operator_3d))
   SUBTYPE OF (geometric_representation_item, functionally_defined_transformation);
      axis1 : OPTIONAL direction;
      axis2 : OPTIONAL direction;
      local_origin : cartesian_point;
      scale : OPTIONAL REAL;
   DERIVE
      scl : REAL := NVL(scale, 1.00000);
   WHERE
      WR1:
         scl > 0.00000;
   END_ENTITY;



   ENTITY cartesian_transformation_operator_2d
   SUBTYPE OF (cartesian_transformation_operator);
   DERIVE
      u : LIST [2:2] OF direction := base_axis(2, SELF\cartesian_transformation_operator.axis1, SELF\cartesian_transformation_operator.axis2, ?);
   WHERE
      WR1:
         SELF\geometric_representation_item.dim = 2;
   END_ENTITY;



   ENTITY cartesian_transformation_operator_3d
   SUBTYPE OF (cartesian_transformation_operator);
      axis3 : OPTIONAL direction;
   DERIVE
      u : LIST [3:3] OF direction := base_axis(3, SELF\cartesian_transformation_operator.axis1, SELF\cartesian_transformation_operator.axis2, axis3);
   WHERE
      WR1:
         SELF\geometric_representation_item.dim = 3;
   END_ENTITY;



   ENTITY category_model_parameter
   SUBTYPE OF (model_parameter);
   DERIVE
      accessed_ee_product_category : BAG OF ee_product_category := USEDIN(SELF\model_parameter, 'AP210_ARM_EXTENDED.' + 'EE_PRODUCT_CATEGORY.CATEGORY_PARAMETERS');
   WHERE
      WR1:
         SIZEOF(accessed_ee_product_category) > 0;
   END_ENTITY;



   ENTITY celsius_temperature_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY centre_axis
   SUBTYPE OF (centre_of_symmetry);
   END_ENTITY;



   ENTITY centre_of_symmetry
   ABSTRACT SUPERTYPE OF (ONEOF(centre_axis, centre_plane, centre_point))
   SUBTYPE OF (derived_shape_element);
   END_ENTITY;



   ENTITY centre_plane
   SUBTYPE OF (centre_of_symmetry);
   END_ENTITY;



   ENTITY centre_point
   SUBTYPE OF (centre_of_symmetry);
   END_ENTITY;



   ENTITY certification;
      certification_approval : ee_approval;
      certification_number : ee_text;
      certified_product_version : supplied_product_version;
      certification_date : date_or_date_and_time;
   UNIQUE
      ur1 : certification_number;
   END_ENTITY;



   ENTITY change_design_object_management_relationship
   SUPERTYPE OF (ONEOF(terminal_swap_specification, gate_path_swap_specification, component_swap_specification))
   SUBTYPE OF (design_object_management_relationship);
      current_design_object : managed_design_object;
      previous_design_object : managed_design_object;
   UNIQUE
      ur1 : current_design_object, current_design;
      ur2 : previous_design_object, previous_design;
   END_ENTITY;



   ENTITY change_order
   SUBTYPE OF (work_order);
      adopted_solution : design_object_management_relationship_or_description;
   END_ENTITY;



   ENTITY change_request
   SUBTYPE OF (work_request);
      recommended_solution : OPTIONAL SET [1:?] OF design_object_management_relationship_or_description;
      consequence : SET [1:?] OF ee_text;
      version : ee_name;
   UNIQUE
      ur1 : version, SELF\work_request.work_request_id;
   END_ENTITY;



   ENTITY characteristic
   SUPERTYPE OF (ONEOF(compound_characteristic, numeric_parameter));
      type_name : OPTIONAL STRING;
      reference_document : OPTIONAL ee_document;
      property_value : numeric_or_non_numeric_select;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.SCATTERING_PARAMETER_DATA_ELEMENT' IN TYPEOF(property_value)) OR (type_name = 'polar complex number literal');
      WR2:
         NOT EXISTS(type_name) AND NOT EXISTS(reference_document) OR EXISTS(type_name) AND EXISTS(reference_document);
   END_ENTITY;



   ENTITY characteristic_data_set
   SUBTYPE OF (compound_characteristic);
      SELF\characteristic.property_value : set_characteristic;
   END_ENTITY;



   ENTITY characteristic_data_table
   SUBTYPE OF (compound_characteristic);
      SELF\characteristic.property_value : list_characteristic;
   END_ENTITY;



   ENTITY circle
   SUBTYPE OF (conic);
      radius : positive_length_measure;
   END_ENTITY;



   ENTITY circular_area
   SUBTYPE OF (primitive_2d);
      centre : cartesian_point;
      radius : positive_length_measure;
   END_ENTITY;



   ENTITY circular_runout_tolerance
   SUBTYPE OF (geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY circularity_tolerance
   SUBTYPE OF (geometric_tolerance_without_referenced_datum_system);
   END_ENTITY;



   ENTITY closed_shell
   SUBTYPE OF (connected_face_set);
   END_ENTITY;



   ENTITY common_datum
   SUBTYPE OF (datum);
   END_ENTITY;



   ENTITY component_2d_edge_location
   SUBTYPE OF (component_2d_location);
      reference_terminal_assembly_joint : assembly_joint;
      mounting_surface_assembly_joint : assembly_joint;
   WHERE
      WR1:
         reference_terminal_assembly_joint <> mounting_surface_assembly_joint;
      WR2:
         SELF\component_2d_location.substrate_location = FALSE;
      WR3:
         SIZEOF([ 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] * TYPEOF(mounting_surface_assembly_joint.assembly_features_1)) >= 0;
   END_ENTITY;



   ENTITY component_2d_embedded_location
   SUBTYPE OF (component_2d_location);
      precedent_surface : adjacent_stratum_surface_embedded_component_surface_definition;
      subsequent_surface : adjacent_stratum_surface_embedded_component_surface_definition;
      reference_terminal : fabrication_joint;
   UNIQUE
      ur1 : precedent_surface, reference_terminal, subsequent_surface;
   WHERE
      WR1:
         precedent_surface <> subsequent_surface;
      WR2:
         SELF\component_2d_location.substrate_location = FALSE;
   END_ENTITY;



   ENTITY component_2d_location
   SUPERTYPE OF (ONEOF(component_2d_edge_location, component_2d_embedded_location, component_2d_stacked_location, component_2d_surface_location));
      placement_fixed : BOOLEAN;
      transformation : cartesian_transformation_operator_2d;
   DERIVE
      substrate_location : BOOLEAN := substrate_in_assembly(SELF);
      the_context : cartesian_coordinate_system := referencing_position.assembly_model\shape_definition.geometric_context;
   INVERSE
      referencing_position : component_assembly_2d_position FOR transformation;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.LAMINATE_COMPONENT' IN TYPEOF(referencing_position.component.component)) OR (transformation.mirror = FALSE);
      WR2:
         NOT substrate_location OR (transformation.mirror = FALSE);
      WR3:
         transformation.scale - 1.00000 < 0.00100000;
   END_ENTITY;



   ENTITY component_2d_stacked_location
   SUBTYPE OF (component_2d_location);
      mounting_joint : assembly_joint;
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] * TYPEOF(mounting_joint.assembly_features_1)) = 0;
      WR2:
         SIZEOF([ 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] * TYPEOF(mounting_joint.assembly_features_2)) = 0;
      WR3:
         SELF\component_2d_location.substrate_location = FALSE;
   END_ENTITY;



   ENTITY component_2d_surface_location
   SUBTYPE OF (component_2d_location);
      mounting_surface_assembly_joint : assembly_joint;
   WHERE
      WR1:
         SELF\component_2d_location.substrate_location = FALSE;
      WR2:
         SIZEOF([ 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] * TYPEOF(mounting_surface_assembly_joint.assembly_features_1)) >= 0;
   END_ENTITY;



   ENTITY component_3d_location;
      transformation : axis2_placement_3d;
      placement_fixed : BOOLEAN;
   END_ENTITY;



   ENTITY component_assembly_2d_position;
      component_model : assembly_component_2d_shape;
      component_model_origin : origin;
      transformation : component_2d_location;
      assembly_model : physical_unit_planar_shape;
      component : next_higher_assembly_relationship;
   WHERE
      WR1:
         component_model\shape_definition.shape_origin = component_model_origin;
   END_ENTITY;



   ENTITY component_assembly_3d_position;
      component_model : assembly_component_3d_shape;
      component_model_origin : origin;
      transformation : component_3d_location;
      assembly_model : physical_unit_3d_shape;
      component : next_higher_assembly_relationship;
   WHERE
      WR1:
         component_model\shape_definition.shape_origin = component_model_origin;
   END_ENTITY;



   ENTITY component_assembly_non_planar_position;
      component_model : assembly_component_non_planar_shape;
      transformation : component_non_planar_location;
      assembly_model : physical_unit_3d_shape;
      component : next_higher_assembly_relationship;
   END_ENTITY;



   ENTITY component_based_annotation_symbol_placement_relationship
   SUBTYPE OF (component_feature_to_layout_feature_relationship);
      SELF\component_feature_to_layout_feature_relationship.related_stratum_concept : special_symbol_laminate_component;
   END_ENTITY;



   ENTITY component_based_annotation_text_relationship
   SUBTYPE OF (component_feature_to_layout_feature_relationship);
      SELF\component_feature_to_layout_feature_relationship.related_stratum_concept : laminate_text_string_component;
      message_type : component_based_message_type;
   END_ENTITY;



   ENTITY component_external_reference;
      design_owner : STRING;
      part_number : STRING;
      revision_code : STRING;
      product_definition_id : STRING;
      reference_designation : STRING;
   END_ENTITY;



   ENTITY component_feature
   ABSTRACT SUPERTYPE OF (ONEOF(physical_component_feature, laminate_component_feature));
      definition : OPTIONAL part_feature_or_template_feature;
      associated_component : assembly_component;
   INVERSE
      defined_product_feature : SET [0:1] OF component_feature_to_physical_usage_view_assignment FOR assigned_design_object;
   UNIQUE
      ur1 : definition, associated_component;
   END_ENTITY;



   ENTITY component_feature_external_reference;
      associated_component : component_external_reference;
      name : STRING;
   UNIQUE
      ur1 : associated_component, name;
   END_ENTITY;



   ENTITY component_feature_make_from_relationship;
      reusable_feature : component_feature;
      resultant_feature : component_feature;
   END_ENTITY;



   ENTITY component_feature_relationship;
      related_component_feature : component_feature;
      relating_component_feature : component_feature;
   END_ENTITY;



   ENTITY component_feature_to_layout_feature_relationship
   SUPERTYPE OF (ONEOF(component_based_annotation_text_relationship, component_based_annotation_symbol_placement_relationship));
      related_stratum_concept : stratum_concept;
      relating_feature : component_or_component_feature;
      requirement : OPTIONAL ee_requirement_occurrence;
   END_ENTITY;



   ENTITY component_feature_to_physical_usage_view_assignment
   SUPERTYPE OF (ONEOF(component_terminal_to_assembly_module_join_terminal_assignment, component_terminal_to_assembly_module_interface_terminal_assignment, component_terminal_to_interconnect_module_join_terminal_assignment, component_terminal_to_interconnect_module_interface_terminal_assignment, component_terminal_to_pca_terminal_assignment));
      defined_part_feature : part_feature;
      assigned_design_object : component_feature;
   END_ENTITY;



   ENTITY component_group_assignment;
      associated_group : placement_group;
      assigned_component : assembly_component;
   END_ENTITY;



   ENTITY component_interface_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(packaged_connector_component_interface_terminal, interconnect_component_interface_terminal))
   SUBTYPE OF (physical_component_feature);
      SELF\component_feature.associated_component : interface_component;
   END_ENTITY;



   ENTITY component_make_from_relationship
   SUPERTYPE OF (laminate_group_component_make_from_relationship);
      reusable_component : assembly_component;
      resultant_component : assembly_component;
   WHERE
      WR1:
         resultant_component <> reusable_component;
   END_ENTITY;



   ENTITY component_mating_constraint_condition;
      constraining_joint : SET [1:3] OF assembly_joint;
      constrained_degree_of_freedom : SET [1:5] OF degree_of_freedom;
      of_context : physical_unit_design_view;
      name : ee_name;
   UNIQUE
      ur1 : name, of_context;
   END_ENTITY;



   ENTITY component_mounting_clearance_relationship;
      feature_relationship : component_feature_relationship;
      minimum_mounting_clearance : length_measure_with_unit;
      maximum_mounting_clearance : OPTIONAL length_measure_with_unit;
   END_ENTITY;



   ENTITY component_mounting_feature
   SUBTYPE OF (physical_component_feature);
      SELF\component_feature.definition : part_mounting_feature;
   END_ENTITY;



   ENTITY component_non_planar_location;
      transformation : axis2_placement_3d;
      placement_fixed : BOOLEAN;
   END_ENTITY;



   ENTITY component_overlap_relationship;
      previously_placed_component : next_higher_assembly_relationship;
      current_component : next_higher_assembly_relationship;
      minimum_added_clearance : length_measure_with_unit;
      maximum_added_clearance : OPTIONAL length_measure_with_unit;
   END_ENTITY;



   ENTITY component_part_2d_geometric_representation_relationship
   SUBTYPE OF (geometric_representation_relationship);
   DERIVE
      part_shape : part_template_or_physical_unit_2d_shape_select := SELF\geometric_representation_relationship.shape_1;
      component_shape : assembly_component_2d_shape := SELF\geometric_representation_relationship.shape_2;
   END_ENTITY;



   ENTITY component_part_2d_non_planar_geometric_representation_relationship
   SUBTYPE OF (geometric_representation_relationship);
   DERIVE
      part_shape : part_template_planar_shape := SELF\geometric_representation_relationship.shape_1;
      component_shape : assembly_component_non_planar_shape := SELF\geometric_representation_relationship.shape_2;
   END_ENTITY;



   ENTITY component_part_3d_geometric_representation_relationship
   SUBTYPE OF (geometric_representation_relationship);
   DERIVE
      part_shape : part_template_or_physical_unit_3d_shape_select := SELF\geometric_representation_relationship.shape_1;
      component_shape : assembly_component_3d_shape := SELF\geometric_representation_relationship.shape_2;
   END_ENTITY;



   ENTITY component_placement_restriction_assignment;
      maximum_negative_component_height : OPTIONAL datum_based_length_measure;
      maximum_positive_component_height : OPTIONAL datum_based_length_measure;
      area : OPTIONAL mounting_restriction_area;
      volume : OPTIONAL mounting_restriction_volume;
      requirement : item_restricted_requirement_occurrence;
      components_permitted : BOOLEAN;
      maximum_mounting_clearance : OPTIONAL datum_based_length_measure;
      minimum_mounting_clearance : OPTIONAL datum_based_length_measure;
   WHERE
      WR1:
         EXISTS(area) OR EXISTS(volume);
   END_ENTITY;



   ENTITY component_swap_specification
   SUBTYPE OF (change_design_object_management_relationship);
      SELF\change_design_object_management_relationship.current_design_object : design_functional_unit_allocation_to_assembly_component;
      SELF\change_design_object_management_relationship.previous_design_object : design_functional_unit_allocation_to_assembly_component;
   END_ENTITY;



   ENTITY component_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(physical_component_terminal, laminate_component_join_terminal))
   SUBTYPE OF (component_feature);
      local_swappable : OPTIONAL BOOLEAN;
      global_swappable : OPTIONAL BOOLEAN;
      swap_code : OPTIONAL STRING;
   END_ENTITY;



   ENTITY component_terminal_to_assembly_module_interface_terminal_assignment
   SUBTYPE OF (component_feature_to_physical_usage_view_assignment);
   DERIVE
      usage_view_terminal : assembly_module_interface_terminal := SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature;
      assigned_terminal : pca_interface_select := SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object;
   UNIQUE
      ur1 : usage_view_terminal;
   END_ENTITY;



   ENTITY component_terminal_to_assembly_module_join_terminal_assignment
   SUBTYPE OF (component_feature_to_physical_usage_view_assignment);
   DERIVE
      usage_view_terminal : assembly_module_join_terminal := SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature;
      assigned_terminal : interconnect_module_macro_component_join_terminal := SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object;
   UNIQUE
      ur1 : usage_view_terminal;
   END_ENTITY;



   ENTITY component_terminal_to_interconnect_module_interface_terminal_assignment
   SUBTYPE OF (component_feature_to_physical_usage_view_assignment);
   DERIVE
      usage_view_terminal : interconnect_module_interface_terminal := SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature;
      assigned_terminal : interconnect_or_assembly_module_select := SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object;
   UNIQUE
      ur1 : usage_view_terminal;
   END_ENTITY;



   ENTITY component_terminal_to_interconnect_module_join_terminal_assignment
   SUBTYPE OF (component_feature_to_physical_usage_view_assignment);
   DERIVE
      usage_view_terminal : interconnect_module_join_terminal := SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature;
      assigned_terminal : fabricated_feature_select := SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object;
   UNIQUE
      ur1 : usage_view_terminal;
   END_ENTITY;



   ENTITY component_terminal_to_pca_terminal_assignment
   SUBTYPE OF (component_feature_to_physical_usage_view_assignment);
   DERIVE
      usage_view_terminal : pca_terminal := SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature;
      assigned_terminal : pca_interface_select := SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object;
   UNIQUE
      ur1 : usage_view_terminal;
   END_ENTITY;



   ENTITY component_termination_passage
   SUBTYPE OF (plated_passage);
      SELF\assembly_component.usage_definition : component_termination_passage_template;
   INVERSE
      access_mechanism : SET [1:?] OF component_termination_passage_join_terminal FOR associated_component;
      interface_access_mechanism : component_termination_passage_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY component_termination_passage_and_contact_size_dependent_land
   SUBTYPE OF (land);
      SELF\assembly_component.usage_definition : default_attachment_size_and_component_termination_passage_based_land_physical_template;
      reference_passage : component_termination_passage;
   INVERSE
      interface_access_mechanism : land_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY component_termination_passage_and_contact_size_dependent_non_functional_land
   SUBTYPE OF (non_functional_land);
      SELF\assembly_component.usage_definition : default_attachment_size_and_component_termination_passage_based_land_physical_template;
      reference_passage : component_termination_passage;
   INVERSE
      interface_access_mechanism : non_functional_land_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY component_termination_passage_dependent_land
   SUBTYPE OF (land);
      reference_passage : component_termination_passage;
      SELF\assembly_component.usage_definition : default_component_termination_passage_based_land_physical_template;
   END_ENTITY;



   ENTITY component_termination_passage_dependent_non_functional_land
   SUBTYPE OF (non_functional_land);
      reference_passage : component_termination_passage;
      SELF\assembly_component.usage_definition : default_component_termination_passage_based_land_physical_template;
   END_ENTITY;



   ENTITY component_termination_passage_interface_terminal
   SUBTYPE OF (laminate_component_interface_terminal);
      SELF\component_feature.definition : component_termination_passage_template_interface_terminal;
      SELF\component_feature.associated_component : component_termination_passage;
   END_ENTITY;



   ENTITY component_termination_passage_join_terminal
   SUBTYPE OF (laminate_component_join_terminal);
      SELF\component_feature.definition : component_termination_passage_template_join_terminal;
      SELF\component_feature.associated_component : component_termination_passage;
   END_ENTITY;



   ENTITY component_termination_passage_template
   SUBTYPE OF (inter_stratum_feature_template);
      SELF\inter_stratum_feature_template.of_passage_technology : default_component_termination_passage_definition;
   INVERSE
      access_mechanisms : SET [2:?] OF component_termination_passage_template_terminal FOR associated_definition;
   END_ENTITY;



   ENTITY component_termination_passage_template_interface_terminal
   SUBTYPE OF (component_termination_passage_template_terminal);
   END_ENTITY;



   ENTITY component_termination_passage_template_join_terminal
   SUBTYPE OF (component_termination_passage_template_terminal);
      disallowed_inter_stratum_extent : OPTIONAL SET [1:?] OF inter_stratum_extent;
   END_ENTITY;



   ENTITY component_termination_passage_template_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(component_termination_passage_template_interface_terminal, component_termination_passage_template_join_terminal))
   SUBTYPE OF (shape_element);
      associated_definition : component_termination_passage_template;
      terminal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
      SELF\shape_element.name : ee_name;
   INVERSE
      terminal_shape : SET [0:1] OF usage_concept_usage_relationship FOR associated_usage;
   UNIQUE
      ur1 : SELF\shape_element.name, associated_definition;
   END_ENTITY;



   ENTITY component_to_physical_usage_view_assignment;
      usage_view_component : assembly_component;
      design_view_component : assembly_component;
   WHERE
      WR1:
         design_view_component <> usage_view_component;
   END_ENTITY;



   ENTITY composite_curve
   SUBTYPE OF (bounded_curve);
      segments : LIST [1:?] OF composite_curve_segment;
      self_intersect : LOGICAL;
   DERIVE
      n_segments : INTEGER := SIZEOF(segments);
      closed_curve : LOGICAL := segments[n_segments].transition <> discontinuous;
   WHERE
      WR1:
         NOT closed_curve AND (SIZEOF(QUERY (temp <* segments| (temp.transition = discontinuous))) = 1) OR closed_curve AND (SIZEOF(QUERY (temp <* segments| (temp.transition = discontinuous))) = 0);
   END_ENTITY;



   ENTITY composite_curve_on_surface
   SUPERTYPE OF (boundary_curve)
   SUBTYPE OF (composite_curve);
   DERIVE
      basis_surface : SET [0:2] OF surface := get_basis_surface(SELF);
   WHERE
      WR1:
         SIZEOF(basis_surface) > 0;
      WR2:
         constraints_composite_curve_on_surface(SELF);
   END_ENTITY;



   ENTITY composite_curve_segment
   SUBTYPE OF (founded_item);
      transition : transition_code;
      same_sense : BOOLEAN;
      parent_curve : curve;
   INVERSE
      using_curves : BAG [1:?] OF composite_curve FOR segments;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.BOUNDED_CURVE' IN TYPEOF(parent_curve);
   END_ENTITY;



   ENTITY composite_feature_locating_position_tolerance
   SUBTYPE OF (position_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY composite_feature_relating_position_tolerance
   SUBTYPE OF (position_tolerance);
      refined_control : locating_or_relating_position_tolerance;
   END_ENTITY;



   ENTITY composite_group_shape_element
   SUBTYPE OF (composite_shape_element);
   END_ENTITY;



   ENTITY composite_linear_profile_locating_tolerance
   SUBTYPE OF (profile_of_any_line_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY composite_linear_profile_refinement_tolerance
   SUBTYPE OF (profile_of_any_line_tolerance);
      refined_control : locating_or_refinement_linear_profile_tolerance;
   END_ENTITY;



   ENTITY composite_shape_element
   ABSTRACT SUPERTYPE OF (ONEOF(composite_group_shape_element, composite_unit_shape_element))
   SUBTYPE OF (shape_element);
   INVERSE
      composing_relationships : SET [2:?] OF shape_element_composing_relationship FOR relating_shape_element;
   END_ENTITY;



   ENTITY composite_signal_property
   SUBTYPE OF (signal_property);
   INVERSE
      signal_property_structure : SET [1:?] OF composite_signal_property_relationship FOR composition;
   END_ENTITY;



   ENTITY composite_signal_property_relationship;
      composition : composite_signal_property;
      signal_property_structural_element : signal_property;
      aggregation_operation : external_definition;
   END_ENTITY;



   ENTITY composite_surface_profile_locating_tolerance
   SUBTYPE OF (profile_of_any_surface_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY composite_surface_profile_refinement_tolerance
   SUBTYPE OF (profile_of_any_surface_tolerance);
      refined_control : locating_or_refinement_surface_profile_tolerance;
   END_ENTITY;



   ENTITY composite_unit_shape_element
   SUBTYPE OF (composite_shape_element);
   END_ENTITY;



   ENTITY compound_characteristic
   ABSTRACT SUPERTYPE OF (ONEOF(characteristic_data_set, characteristic_data_table))
   SUBTYPE OF (characteristic);
      SELF\characteristic.property_value : compound_characteristic_definition;
   END_ENTITY;



   ENTITY concentricity_and_coaxiality_tolerance
   SUBTYPE OF (geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY conductance_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\conductance_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = siemens;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY conductive_filled_area
   SUPERTYPE OF (connected_filled_area)
   SUBTYPE OF (stratum_feature);
   END_ENTITY;



   ENTITY conductive_interconnect_element
   ABSTRACT SUPERTYPE OF (ONEOF(unrouted_conductive_interconnect_element, conductive_interconnect_element_with_pre_defined_transitions, conductive_interconnect_element_with_user_defined_single_transition))
   SUBTYPE OF (laminate_component);
      composed_conductor : OPTIONAL stratum_feature;
   INVERSE
      access_mechanisms : SET [2:?] OF conductive_interconnect_element_terminal FOR associated_component;
   END_ENTITY;



   ENTITY conductive_interconnect_element_terminal
   SUBTYPE OF (laminate_component_feature);
      SELF\component_feature.associated_component : conductive_interconnect_element;
      connection : OPTIONAL connection_zone;
      name : STRING;
      location : layer_connection_point;
   UNIQUE
      ur1 : name, SELF\component_feature.associated_component;
   WHERE
      WR1:
         NOT EXISTS(SELF\component_feature.associated_component\conductive_interconnect_element.composed_conductor) OR (location.resident_design_layer_stratum = SELF\component_feature.associated_component\conductive_interconnect_element.composed_conductor.resident_stratum);
   END_ENTITY;



   ENTITY conductive_interconnect_element_terminal_link;
      associated_element : conductive_interconnect_element;
      precedent_point : conductive_interconnect_element_terminal;
      subsequent_point : conductive_interconnect_element_terminal;
   UNIQUE
      ur1 : precedent_point, subsequent_point;
   WHERE
      WR1:
         precedent_point <> subsequent_point;
      WR2:
         precedent_point.associated_component = associated_element;
      WR3:
         subsequent_point.associated_component = associated_element;
   END_ENTITY;



   ENTITY conductive_interconnect_element_with_pre_defined_transitions
   SUPERTYPE OF (join_two_physical_connectivity_definition_supporting_printed_component)
   SUBTYPE OF (conductive_interconnect_element);
      SELF\assembly_component.usage_definition : trace_template;
      centreline_shape : curve;
      SELF\conductive_interconnect_element.composed_conductor : stratum_feature;
   INVERSE
      connected_points : SET [1:?] OF conductive_interconnect_element_terminal_link FOR associated_element;
   WHERE
      WR1:
         SIZEOF(connected_points) = SIZEOF(SELF\conductive_interconnect_element.access_mechanisms) - 1;
      WR2:
         correlated_terminals(SELF\conductive_interconnect_element.access_mechanisms, connected_points);
   END_ENTITY;



   ENTITY conductive_interconnect_element_with_user_defined_single_transition
   SUBTYPE OF (conductive_interconnect_element);
      SELF\conductive_interconnect_element.composed_conductor : stratum_feature;
      start_definition : trace_template;
      end_definition : trace_template;
      left_curve_shape_representation : trimmed_curve;
      right_curve_shape_representation : trimmed_curve;
   DERIVE
      start_terminus : layer_connection_point := terminal_link.precedent_point.location;
      end_terminus : layer_connection_point := terminal_link.subsequent_point.location;
   INVERSE
      terminal_link : conductive_interconnect_element_terminal_link FOR associated_element;
   END_ENTITY;



   ENTITY conductor
   SUBTYPE OF (stratum_feature);
      SELF\stratum_feature.resident_stratum : design_layer_stratum;
      implementation_requirement : intra_stratum_join_relationship;
   END_ENTITY;



   ENTITY configuration_controlled_message;
      message_source : message_source_select;
      message_content : STRING;
      message_type_specification : message_type;
   END_ENTITY;



   ENTITY conic
   SUPERTYPE OF (ONEOF(circle, ellipse, hyperbola, parabola))
   SUBTYPE OF (curve);
      position : axis2_placement;
   END_ENTITY;



   ENTITY conical_surface
   SUBTYPE OF (elementary_surface);
      radius : length_measure;
      semi_angle : plane_angle_measure;
   WHERE
      WR1:
         radius >= 0.00000;
   END_ENTITY;



   ENTITY conical_tolerance_zone_boundary
   SUBTYPE OF (tolerance_zone_boundary);
   INVERSE
      boundary_and_surface_relationships : SET [2:2] OF conical_tolerance_zone_boundary_and_surface_relationship FOR sized_tolerance_zone_boundary;
   END_ENTITY;



   ENTITY conical_tolerance_zone_boundary_and_surface_relationship;
      sized_tolerance_zone_boundary : conical_tolerance_zone_boundary;
      terminating_surface : physical_feature_or_part_template;
   INVERSE
      size_characteristic : conical_tolerance_zone_boundary_diametrical_size_characteristic FOR sized_boundary_at_surface;
   END_ENTITY;



   ENTITY conical_tolerance_zone_boundary_definition
   SUBTYPE OF (tolerance_zone_boundary_definition);
      boundary_sizes : SET [2:2] OF conical_tolerance_zone_boundary_diametrical_size_characteristic;
      SELF\tolerance_zone_boundary_definition.defined_zone_boundary : conical_tolerance_zone_boundary;
   END_ENTITY;



   ENTITY conical_tolerance_zone_boundary_diametrical_size_characteristic;
      sized_boundary_at_surface : conical_tolerance_zone_boundary_and_surface_relationship;
      tolerance_value : length_measure_with_unit;
   INVERSE
      boundary_definition : conical_tolerance_zone_boundary_definition FOR boundary_sizes;
   END_ENTITY;



   ENTITY conical_tolerance_zone_definition
   SUBTYPE OF (tolerance_zone_definition);
      SELF\tolerance_zone_definition.boundary_definition : conical_tolerance_zone_boundary_definition;
   END_ENTITY;



   ENTITY connected_area_component
   SUBTYPE OF (stratum_feature_template_component);
      associated_layer_connection_point : SET [1:?] OF layer_connection_point;
   WHERE
      WR1:
         NOT EXISTS(SELF\assembly_component.usage_definition);
   END_ENTITY;



   ENTITY connected_edge_set
   SUBTYPE OF (topological_representation_item);
      ces_edges : SET [1:?] OF edge;
   END_ENTITY;



   ENTITY connected_face_set
   SUPERTYPE OF (ONEOF(closed_shell, open_shell))
   SUBTYPE OF (topological_representation_item);
      cfs_faces : SET [1:?] OF face;
   END_ENTITY;



   ENTITY connected_face_sub_set
   SUBTYPE OF (connected_face_set);
      parent_face_set : connected_face_set;
   END_ENTITY;



   ENTITY connected_filled_area
   SUBTYPE OF (conductive_filled_area);
      SELF\stratum_feature.resident_stratum : design_layer_stratum;
      implementation_requirement : intra_stratum_join_relationship;
   END_ENTITY;



   ENTITY connection_zone;
      representation_colour : OPTIONAL ee_colour;
   INVERSE
      zone_shape_1 : SET [0:1] OF design_view_connection_zone_position_relationship FOR associated_usage;
      zone_shape_2 : SET [0:1] OF usage_view_connection_zone_terminal_shape_relationship FOR associated_usage;
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.ASSEMBLY_MODULE_TERMINAL.' + 'TERMINAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.BARE_DIE_TERMINAL.' + 'EXTERNAL_CONNECTION_AREA')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'COMPONENT_TERMINATION_PASSAGE_TEMPLATE_TERMINAL.' + 'TERMINAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL.' + 'CONNECTION')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'INTERCONNECT_COMPONENT_INTERFACE_TERMINAL.' + 'CONNECTION')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'INTERCONNECT_COMPONENT_JOIN_TERMINAL.' + 'CONNECTION')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_TERMINAL.' + 'TERMINAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'LAND_TEMPLATE_TERMINAL.' + 'TERMINAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'PACKAGE_TERMINAL.EXTERNAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'PACKAGE_TERMINAL.INTERNAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'PRINTED_PART_TEMPLATE_TERMINAL.' + 'TERMINAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'VIA_TEMPLATE_TERMINAL.TERMINAL_CONNECTION_ZONE')) + SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'PART_MOUNTING_FEATURE.MOUNTING_AREA')) >= 0;
      WR2:
         SIZEOF(zone_shape_1) + SIZEOF(zone_shape_2) = 1;
   END_ENTITY;



   ENTITY connection_zone_based_assembly_joint
   SUBTYPE OF (assembly_joint);
      zone_1 : connection_zone;
      zone_2 : connection_zone;
   WHERE
      WR1:
         zone_1 :<>: zone_2;
   END_ENTITY;



   ENTITY connection_zone_based_fabrication_joint
   SUBTYPE OF (fabrication_joint);
      zone_1 : connection_zone;
      zone_2 : connection_zone;
   WHERE
      WR1:
         zone_1 :<>: zone_2;
   END_ENTITY;



   ENTITY connection_zone_interface_plane_relationship;
      interface_plane : seating_plane;
      mating_zone : connection_zone;
      derived_zone : connection_zone;
      derived_zone_shape_class : STRING;
   INVERSE
      associated_package_terminal : SET [0:1] OF package_terminal FOR seating_plane_zone;
      associated_bare_die_terminal : SET [0:1] OF bare_die_terminal FOR seating_plane_zone;
   UNIQUE
      ur1 : interface_plane, mating_zone;
   WHERE
      WR1:
         derived_zone_shape_class IN [ 'area', 'edge' ];
      WR2:
         NOT ((SIZEOF(associated_package_terminal) = 1) AND (SIZEOF(associated_bare_die_terminal) = 1));
   END_ENTITY;



   ENTITY connection_zone_map_identification;
      reference_connection_zone_shape : usage_view_connection_zone_terminal_shape_relationship;
      mapped_connection_zone_shape : usage_view_connection_zone_terminal_shape_relationship;
   UNIQUE
      ur1 : reference_connection_zone_shape, mapped_connection_zone_shape;
   WHERE
      WR1:
         reference_connection_zone_shape <> mapped_connection_zone_shape;
      WR2:
         reference_connection_zone_shape.associated_connection_zone_shape_definition <> mapped_connection_zone_shape.associated_connection_zone_shape_definition;
   END_ENTITY;



   ENTITY connection_zone_model_port_assignment;
      source : connection_zone;
      target : analytical_model_port;
   END_ENTITY;



   ENTITY connectivity_allocation;
      implementation : physical_connectivity_definition;
      connectivity_requirement : aggregate_connectivity_requirement;
   UNIQUE
      ur1 : implementation;
   END_ENTITY;



   ENTITY connectivity_allocation_to_physical_network;
      implementation : physical_network;
      connectivity_requirement : aggregate_connectivity_requirement;
   UNIQUE
      ur1 : implementation;
   END_ENTITY;



   ENTITY constraint_occurrence
   SUPERTYPE OF (ee_product_definition_based_constraint_occurrence)
   SUBTYPE OF (ee_requirement_occurrence);
      logical_relation : OPTIONAL rule_complex_clause;
   WHERE
      WR1:
         ('AP210_ARM_EXTENDED.' + 'EE_PRODUCT_DEFINITION_BASED_CONSTRAINT_OCCURRENCE' IN TYPEOF(SELF)) OR EXISTS(logical_relation);
   END_ENTITY;



   ENTITY contact_size_dependent_land
   SUBTYPE OF (land);
      SELF\assembly_component.usage_definition : default_attachment_size_based_land_physical_template;
   END_ENTITY;



   ENTITY contact_size_dependent_non_functional_land
   SUBTYPE OF (non_functional_land);
      SELF\assembly_component.usage_definition : default_attachment_size_based_land_physical_template;
   END_ENTITY;



   ENTITY context_dependent_unit
   SUBTYPE OF (named_unit);
      name : label;
   END_ENTITY;



   ENTITY contract;
      contractor : OPTIONAL person_organization;
      contract_number : ee_text;
      contract_approval : OPTIONAL ee_approval;
      contract_date : OPTIONAL date_or_date_and_time;
   UNIQUE
      ur1 : contract_number;
   END_ENTITY;



   ENTITY conversion_based_unit
   SUBTYPE OF (named_unit);
      name : label;
      conversion_factor : measure_with_unit;
   END_ENTITY;



   ENTITY coordinated_characteristic
   SUPERTYPE OF (ONEOF(range_characteristic, tolerance_characteristic));
      type_name : OPTIONAL STRING;
      component_characteristic : SET [1:?] OF characteristic;
      dependent_environment : OPTIONAL STRING;
      reference_document : OPTIONAL ee_document;
   WHERE
      WR2:
         NOT EXISTS(type_name) AND NOT EXISTS(reference_document) OR EXISTS(type_name) AND EXISTS(reference_document);
   END_ENTITY;



   ENTITY coordinated_universal_time_offset;
      hour_offset : INTEGER;
      minute_offset : OPTIONAL INTEGER;
      sense : ahead_or_behind;
   DERIVE
      actual_minute_offset : INTEGER := NVL(minute_offset, 0);
   WHERE
      WR1:
         (0 <= hour_offset) AND (hour_offset < 24);
      WR2:
         (0 <= actual_minute_offset) AND (actual_minute_offset <= 59);
      WR3:
         NOT (((hour_offset <> 0) OR (actual_minute_offset <> 0)) AND (sense = exact));
   END_ENTITY;



   ENTITY counterbore_passage_template
   SUBTYPE OF (unsupported_passage_template);
      smaller_passage : unsupported_passage_template;
      larger_passage : blind_passage_template;
   END_ENTITY;



   ENTITY countersunk_passage_template
   SUBTYPE OF (unsupported_passage_template);
      constant_diameter_passage : unsupported_passage_template;
      tapered_passage : blind_passage_template;
   END_ENTITY;



   ENTITY csg_2d_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 2;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.CSG_SOLID', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_2D' ] * TYPEOF(it)) = 1))) = 0;
      WR3:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.CSG_SOLID' ] * TYPEOF(it)) = 1) OR ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)) AND ('AP210_ARM_EXTENDED.' + 'CSG_2D_SHAPE_REPRESENTATION' IN TYPEOF(it\mapped_item.mapping_source.mapped_representation)))) >= 1;
      WR4:
         SIZEOF(QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)) AND NOT ('AP210_ARM_EXTENDED.' + 'CSG_2D_SHAPE_REPRESENTATION' IN TYPEOF(it\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR5:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_representation || SELF\csg_2d_shape_representation || SELF\representation)) = 0;
   END_ENTITY;



   ENTITY csg_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 3;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.CSG_SOLID', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D', 'AP210_ARM_EXTENDED.SOLID_REPLICA', 'AP210_ARM_EXTENDED.REVOLVED_FACE_SOLID', 'AP210_ARM_EXTENDED.EXTRUDED_FACE_SOLID' ] * TYPEOF(it)) <> 1))) = 0;
      WR3:
         SIZEOF(QUERY (mi <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.CSG_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR4:
         SIZEOF(QUERY (sr <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SOLID_REPLICA' IN TYPEOF(it)))| (SIZEOF([ 'AP210_ARM_EXTENDED.CSG_SOLID', 'AP210_ARM_EXTENDED.REVOLVED_FACE_SOLID', 'AP210_ARM_EXTENDED.EXTRUDED_FACE_SOLID' ] * TYPEOF(sr\solid_replica.parent_solid)) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (it <* SELF.items| NOT ('AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' IN TYPEOF(it)))) > 0;
   END_ENTITY;



   ENTITY csg_solid
   SUBTYPE OF (solid_model);
      tree_root_expression : csg_select;
   END_ENTITY;



   ENTITY curve
   SUPERTYPE OF (ONEOF(line, conic, pcurve, surface_curve, offset_curve_2d, offset_curve_3d, curve_replica))
   SUBTYPE OF (geometric_representation_item);
   END_ENTITY;



   ENTITY curve_bounded_surface
   SUBTYPE OF (bounded_surface);
      basis_surface : surface;
      boundaries : SET [1:?] OF boundary_curve;
      implicit_outer : BOOLEAN;
   WHERE
      WR1:
         NOT implicit_outer OR (SIZEOF(QUERY (temp <* boundaries| ('AP210_ARM_EXTENDED.OUTER_BOUNDARY_CURVE' IN TYPEOF(temp)))) = 0);
      WR2:
         NOT implicit_outer OR ('AP210_ARM_EXTENDED.BOUNDED_SURFACE' IN TYPEOF(basis_surface));
      WR3:
         SIZEOF(QUERY (temp <* boundaries| ('AP210_ARM_EXTENDED.OUTER_BOUNDARY_CURVE' IN TYPEOF(temp)))) <= 1;
      WR4:
         SIZEOF(QUERY (temp <* boundaries| (temp\composite_curve_on_surface.basis_surface[1] <> SELF.basis_surface))) = 0;
   END_ENTITY;



   ENTITY curve_dimension
   SUBTYPE OF (single_boundary_dimension);
   END_ENTITY;



   ENTITY curve_replica
   SUBTYPE OF (curve);
      parent_curve : curve;
      transformation : cartesian_transformation_operator;
   WHERE
      WR1:
         transformation.dim = parent_curve.dim;
      WR2:
         acyclic_curve_replica(SELF, parent_curve);
   END_ENTITY;



   ENTITY curve_style;
      name : STRING;
      corner_style : extend_or_chord_2_extend_or_truncate_or_round;
      curve_width : length_measure_with_unit;
      curve_font : OPTIONAL curve_font_or_scaled_curve_font_select;
      end_extension : extend_or_truncate;
      end_style : square_or_round;
      width_uncertainty : length_measure_with_unit;
   UNIQUE
      ur1 : name;
   END_ENTITY;



   ENTITY curve_style_font;
   END_ENTITY;



   ENTITY curve_style_font_and_scaling;
      curve_font : curve_style_font_select;
      name : STRING;
      curve_font_scaling : positive_ratio_measure;
   UNIQUE
      ur1 : name;
   END_ENTITY;



   ENTITY curve_swept_solid
   SUBTYPE OF (shape_definition);
   END_ENTITY;



   ENTITY cutout
   SUPERTYPE OF (ONEOF(physical_connectivity_interrupting_cutout, plated_cutout, partially_plated_cutout))
   SUBTYPE OF (inter_stratum_feature);
   END_ENTITY;



   ENTITY cutout_edge_segment
   SUPERTYPE OF (plated_cutout_edge_segment)
   SUBTYPE OF (inter_stratum_feature);
      composed_cutout : cutout;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
      SELF\inter_stratum_feature.usage_definition : inter_stratum_feature_edge_segment_template;
   WHERE
      WR1:
         start_vertex :<>: end_vertex;
   END_ENTITY;



   ENTITY cyclide_segment_solid
   SUBTYPE OF (geometric_representation_item);
      position : axis2_placement_3d;
      radius1 : positive_length_measure;
      radius2 : positive_length_measure;
      cone_angle1 : plane_angle_measure;
      cone_angle2 : plane_angle_measure;
      turn_angle : plane_angle_measure;
   END_ENTITY;



   ENTITY cylindrical_surface
   SUBTYPE OF (elementary_surface);
      radius : positive_length_measure;
   END_ENTITY;



   ENTITY cylindricity_tolerance
   SUBTYPE OF (geometric_tolerance_without_referenced_datum_system);
   END_ENTITY;



   ENTITY date
   SUPERTYPE OF (ONEOF(calendar_date, ordinal_date, week_of_year_and_day_date));
      year_component : year_number;
   END_ENTITY;



   ENTITY date_and_time;
      date_component : date;
      time_component : local_time;
   END_ENTITY;



   ENTITY date_role;
      name : label;
   DERIVE
      description : text := get_description_value(SELF);
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
   END_ENTITY;



   ENTITY date_time_role;
      name : label;
   DERIVE
      description : text := get_description_value(SELF);
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
   END_ENTITY;



   ENTITY datum
   ABSTRACT SUPERTYPE OF (ONEOF(datum_point, datum_axis, datum_plane) ANDOR ONEOF(single_datum, common_datum))
   SUBTYPE OF (non_feature_shape_element);
   INVERSE
      datum_feature_usages : SET [0:?] OF datum_feature_usage_in_datum_relationship FOR relating_shape_element;
   END_ENTITY;



   ENTITY datum_axis
   SUBTYPE OF (datum);
   END_ENTITY;



   ENTITY datum_axis_and_tolerance_zone_orienting_relationship;
      oriented_tolerance_zone : tolerance_zone;
      orienting_datum_axis : datum_axis;
   INVERSE
      zone_orientation : datum_axis_related_orientation FOR orienting_relationship;
   END_ENTITY;



   ENTITY datum_axis_related_orientation;
      orienting_relationship : datum_axis_and_tolerance_zone_orienting_relationship;
      orientation_type : centre_type;
   END_ENTITY;



   ENTITY datum_based_direction_vector;
      direction_vector_representation : axis2_placement;
      vector_of : datum_plane;
      positive_direction_vector : BOOLEAN;
   END_ENTITY;



   ENTITY datum_based_length_measure;
      measure : length_measure_with_unit;
      measure_orientation : descriptive_or_geometric_orientation;
      of_datum : datum_plane;
   END_ENTITY;



   ENTITY datum_based_vector_orientation;
      direction_components : SET [2:2] OF direction_element;
   END_ENTITY;



   ENTITY datum_difference
   SUBTYPE OF (shape_element_relationship);
      SELF\shape_element_relationship.name : label;
   DERIVE
      precedent_datum : datum := SELF\shape_element_relationship.relating_shape_element;
      subsequent_datum : datum := SELF\shape_element_relationship.related_shape_element;
   END_ENTITY;



   ENTITY datum_difference_analytical_model_port_assignment;
      assigned_analytical_model_port : analytical_model_port;
      of_datum_difference : datum_difference;
   END_ENTITY;



   ENTITY datum_difference_based_characteristic
   SUBTYPE OF (characteristic);
      of_datum_difference : datum_difference;
   END_ENTITY;



   ENTITY datum_difference_based_model_parameter
   SUBTYPE OF (model_parameter);
      of_datum_difference : datum_difference;
   END_ENTITY;



   ENTITY datum_difference_functional_unit_usage_view_terminal_assignment;
      assigned_functional_terminal_definition : functional_unit_usage_view_terminal_definition;
      assigned_datum_difference : datum_difference;
   END_ENTITY;



   ENTITY datum_feature
   SUPERTYPE OF (datum_target_set)
   SUBTYPE OF (physical_feature_or_part_template);
      identification : label;
   INVERSE
      datum_feature_usages : SET [1:?] OF datum_feature_usage_in_datum_relationship FOR related_shape_element;
   END_ENTITY;



   ENTITY datum_feature_material_condition_property;
      applied_to : datum_feature_usage_in_datum_system_relationship;
      name : material_condition_property_names;
   INVERSE
      datum_system_conditions_definition : datum_system_defining_conditions_with_material_conditions FOR applied_material_condition_properties;
   END_ENTITY;



   ENTITY datum_feature_usage_in_common_datum_relationship
   SUBTYPE OF (datum_feature_usage_in_datum_relationship);
      SELF\shape_element_relationship.relating_shape_element : common_datum;
   END_ENTITY;



   ENTITY datum_feature_usage_in_datum_relationship
   ABSTRACT SUPERTYPE OF (ONEOF(datum_feature_usage_in_single_datum_relationship, datum_feature_usage_in_common_datum_relationship))
   SUBTYPE OF (shape_element_relationship);
      SELF\shape_element_relationship.relating_shape_element : datum;
      SELF\shape_element_relationship.related_shape_element : datum_feature;
   UNIQUE
      ur1 : SELF\shape_element_relationship.related_shape_element, SELF\shape_element_relationship.relating_shape_element;
   END_ENTITY;



   ENTITY datum_feature_usage_in_datum_system_relationship;
      established_datum_system : datum_system;
      used_datum_feature : datum_feature;
   INVERSE
      applied_material_condition_property : datum_feature_material_condition_property FOR applied_to;
   END_ENTITY;



   ENTITY datum_feature_usage_in_single_datum_relationship
   SUBTYPE OF (datum_feature_usage_in_datum_relationship);
      SELF\shape_element_relationship.relating_shape_element : single_datum;
   END_ENTITY;



   ENTITY datum_plane
   SUBTYPE OF (datum);
   END_ENTITY;



   ENTITY datum_point
   SUPERTYPE OF (edge_segment_vertex)
   SUBTYPE OF (datum);
      location_in_2d : OPTIONAL cartesian_point;
      location_in_3d : OPTIONAL cartesian_point;
      associated_3d_shape_intersection : OPTIONAL shape_definition_3d_intersection;
   WHERE
      WR1:
         NOT (EXISTS(location_in_2d) AND EXISTS(location_in_3d)) OR EXISTS(associated_3d_shape_intersection);
      WR2:
         NOT EXISTS(location_in_2d) OR (location_in_2d.geometric_context[1].dimensionality = two_dimensional);
      WR3:
         NOT EXISTS(location_in_3d) OR (location_in_3d.geometric_context[1].dimensionality = three_dimensional);
   END_ENTITY;



   ENTITY datum_precedence_assignment;
      assigned_to : datum_usage_in_datum_system_relationship;
      name : precedence_type;
   INVERSE
      datum_system_conditions_definition : datum_system_defining_conditions FOR assigned_datum_precedences;
   UNIQUE
      ur1 : datum_system_conditions_definition, name;
   END_ENTITY;



   ENTITY datum_reference_frame
   SUBTYPE OF (non_feature_shape_element);
      reference_planes : SET [3:3] OF datum_plane;
      reference_plane_pairs : SET [3:3] OF perpendicular_shape_element_relationship;
      reference_axes : SET [3:3] OF datum_axis;
      reference_axis_pairs : SET [3:3] OF perpendicular_shape_element_relationship;
      reference_origin : datum_point;
   INVERSE
      shape_definition : SET [0:1] OF non_feature_shape_definition FOR associated_element;
      used_datum_systems : SET [1:?] OF datum_system FOR established_datum_reference_frame;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.DERIVED_SHAPE_ELEMENT' IN TYPEOF(reference_origin);
      WR6:
         SIZEOF(QUERY (ra <* reference_axes| NOT ('AP210_ARM_EXTENDED.DERIVED_SHAPE_ELEMENT' IN TYPEOF(ra)))) = 0;
      WR7:
         NOT (SIZEOF(shape_definition) > 0) OR (SIZEOF(QUERY (sd <* shape_definition| NOT ('AP210_ARM_EXTENDED.DATUM_REFERENCE_FRAME_SHAPE_DEFINITION' IN TYPEOF(sd)))) = 0);
   END_ENTITY;



   ENTITY datum_reference_frame_shape_definition
   SUBTYPE OF (non_feature_shape_definition);
      SELF\non_feature_shape_definition.associated_element : datum_reference_frame;
   WHERE
      WR1:
         NOT EXISTS(SELF\non_feature_shape_definition.model_shape);
      WR2:
         SELF\shape_definition.geometric_context.dimensionality = three_dimensional;
      WR3:
         SIZEOF(SELF\shape_definition.element) = 1;
      WR4:
         'AP210_ARM_EXTENDED.axis2_placement_3d' IN TYPEOF(SELF\shape_definition.shape_origin);
   END_ENTITY;



   ENTITY datum_system
   SUBTYPE OF (non_feature_shape_element);
      established_datum_reference_frame : datum_reference_frame;
   INVERSE
      datum_usages : SET [1:3] OF datum_usage_in_datum_system_relationship FOR established_datum_system;
      defining_conditions : datum_system_defining_conditions FOR conditions_of;
   END_ENTITY;



   ENTITY datum_system_defining_conditions
   ABSTRACT SUPERTYPE OF (ONEOF(datum_system_defining_conditions_with_material_conditions, datum_system_defining_conditions_without_material_conditions));
      conditions_of : datum_system;
      assigned_datum_precedences : SET [1:3] OF datum_precedence_assignment;
   END_ENTITY;



   ENTITY datum_system_defining_conditions_with_material_conditions
   SUBTYPE OF (datum_system_defining_conditions);
      applied_material_condition_properties : SET [1:?] OF datum_feature_material_condition_property;
   END_ENTITY;



   ENTITY datum_system_defining_conditions_without_material_conditions
   SUBTYPE OF (datum_system_defining_conditions);
   END_ENTITY;



   ENTITY datum_target
   SUBTYPE OF (physical_feature_or_part_template);
   INVERSE
      datum_target_usages : SET [1:?] OF datum_target_usage_in_datum_target_set_relationship FOR used_datum_target;
   END_ENTITY;



   ENTITY datum_target_set
   SUBTYPE OF (datum_feature);
   INVERSE
      included_datum_targets : SET [1:?] OF datum_target_usage_in_datum_target_set_relationship FOR defined_datum_target_set;
   END_ENTITY;



   ENTITY datum_target_usage_in_datum_target_set_relationship;
      defined_datum_target_set : datum_target_set;
      used_datum_target : datum_target;
      datum_target_number : positive_integer;
   UNIQUE
      ur1 : used_datum_target, defined_datum_target_set;
      ur2 : datum_target_number, defined_datum_target_set;
   END_ENTITY;



   ENTITY datum_usage_in_datum_system_relationship;
      established_datum_system : datum_system;
      used_datum : datum;
   INVERSE
      precedence_assignment : datum_precedence_assignment FOR assigned_to;
   UNIQUE
      ur1 : used_datum, established_datum_system;
   END_ENTITY;



   ENTITY default_assembly_bond_shape
   SUBTYPE OF (feature_shape_definition);
      characterized_bond_definition : assembly_bond_definition;
   END_ENTITY;



   ENTITY default_attachment_size_and_component_termination_passage_based_land_physical_template
   SUBTYPE OF (default_component_termination_passage_based_land_physical_template, default_attachment_size_based_land_physical_template);
   END_ENTITY;



   ENTITY default_attachment_size_and_via_based_land_physical_template
   SUBTYPE OF (default_via_based_land_physical_template, default_attachment_size_based_land_physical_template);
   END_ENTITY;



   ENTITY default_attachment_size_based_land_physical_template
   SUPERTYPE OF (ONEOF(default_attachment_size_and_component_termination_passage_based_land_physical_template, default_attachment_size_and_via_based_land_physical_template))
   SUBTYPE OF (default_land_physical_template);
      minimum_attachment_region_size : OPTIONAL connection_zone;
      maximum_attachment_region_size : OPTIONAL connection_zone;
   INVERSE
      interface_access_mechanisms : SET [1:?] OF land_template_interface_terminal FOR associated_definition;
   WHERE
      WR1:
         NOT (EXISTS(minimum_attachment_region_size) AND EXISTS(maximum_attachment_region_size)) OR (minimum_attachment_region_size :<>: maximum_attachment_region_size);
   END_ENTITY;



   ENTITY default_component_termination_passage_based_land_physical_template
   SUPERTYPE OF (default_attachment_size_and_component_termination_passage_based_land_physical_template)
   SUBTYPE OF (default_passage_based_land_physical_template);
      SELF\default_passage_based_land_physical_template.of_passage_technology : default_component_termination_passage_definition;
   END_ENTITY;



   ENTITY default_component_termination_passage_definition
   SUBTYPE OF (passage_technology);
      minimum_allowed_component_terminal_extent : length_measure_with_unit;
      maximum_allowed_component_terminal_extent : length_measure_with_unit;
      SELF\passage_technology.deposition_material : ee_material;
      SELF\passage_technology.minimum_as_finished_deposition_thickness : length_measure_with_unit;
      SELF\passage_technology.minimum_as_finished_passage_extent : length_measure_with_unit;
   END_ENTITY;



   ENTITY default_land_physical_template
   ABSTRACT SUPERTYPE OF (ONEOF(default_passage_based_land_physical_template, default_attachment_size_based_land_physical_template))
   SUBTYPE OF (land_physical_template);
      SELF\stratum_feature_template.of_stratum_technology : OPTIONAL SET [1:?] OF design_layer_technology;
   END_ENTITY;



   ENTITY default_passage_based_land_physical_template
   ABSTRACT SUPERTYPE OF (ONEOF(default_via_based_land_physical_template, default_component_termination_passage_based_land_physical_template, default_unsupported_passage_based_land_physical_template))
   SUBTYPE OF (default_land_physical_template);
      minimum_fabrication_allowance : length_measure_with_unit;
      of_passage_technology : passage_technology;
      of_stratum_extent : inter_stratum_extent;
      minimum_annular_ring : length_measure_with_unit;
   UNIQUE
      ur1 : of_passage_technology, SELF\stratum_feature_template.of_stratum_technology;
   END_ENTITY;



   ENTITY default_trace_template
   SUBTYPE OF (trace_template);
      of_stratum_technology : stratum_technology;
   END_ENTITY;



   ENTITY default_unsupported_passage_based_land_physical_template
   SUBTYPE OF (default_passage_based_land_physical_template);
      SELF\default_passage_based_land_physical_template.of_passage_technology : default_unsupported_passage_definition;
   END_ENTITY;



   ENTITY default_unsupported_passage_definition
   SUBTYPE OF (passage_technology);
      SELF\passage_technology.minimum_as_finished_passage_extent : length_measure_with_unit;
   END_ENTITY;



   ENTITY default_via_based_land_physical_template
   SUPERTYPE OF (default_attachment_size_and_via_based_land_physical_template)
   SUBTYPE OF (default_passage_based_land_physical_template);
      SELF\default_passage_based_land_physical_template.of_passage_technology : default_via_definition;
   END_ENTITY;



   ENTITY default_via_definition
   SUBTYPE OF (passage_technology);
      SELF\passage_technology.deposition_material : ee_material;
      SELF\passage_technology.minimum_as_finished_deposition_thickness : length_measure_with_unit;
      SELF\passage_technology.minimum_as_finished_passage_extent : length_measure_with_unit;
   END_ENTITY;



   ENTITY definitional_representation
   SUBTYPE OF (representation);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.PARAMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF\representation.context_of_items);
   END_ENTITY;



   ENTITY degenerate_pcurve
   SUBTYPE OF (point);
      basis_surface : surface;
      reference_to_curve : definitional_representation;
   WHERE
      WR1:
         SIZEOF(reference_to_curve\representation.items) = 1;
      WR2:
         'AP210_ARM_EXTENDED.CURVE' IN TYPEOF(reference_to_curve\representation.items[1]);
      WR3:
         reference_to_curve\representation.items[1]\geometric_representation_item.dim = 2;
   END_ENTITY;



   ENTITY degenerate_toroidal_surface
   SUBTYPE OF (toroidal_surface);
      select_outer : BOOLEAN;
   WHERE
      WR1:
         major_radius < minor_radius;
   END_ENTITY;



   ENTITY delete_design_object_management_relationship
   SUBTYPE OF (design_object_management_relationship);
      previous_design_object : managed_design_object;
   UNIQUE
      ur1 : previous_design_object, previous_design;
   END_ENTITY;



   ENTITY dependent_material_removal_feature_template
   SUBTYPE OF (material_removal_feature_template);
      associated_template : default_land_physical_template;
   END_ENTITY;



   ENTITY dependently_located_layer_connection_point
   SUBTYPE OF (layer_connection_point);
      associated_design_object : terminal_or_inter_stratum_feature;
      reference_zone : OPTIONAL connection_zone;
   END_ENTITY;



   ENTITY derived_shape_element
   ABSTRACT SUPERTYPE OF (ONEOF(apex, centre_of_symmetry, linear_extension, geometric_intersection, geometric_alignment, tangent_shape_element))
   SUBTYPE OF (non_feature_shape_element);
   INVERSE
      deriving_relationships : SET [1:?] OF shape_element_deriving_relationship FOR relating_shape_element;
   END_ENTITY;



   ENTITY derived_unit;
      elements : SET [1:?] OF derived_unit_element;
   DERIVE
      name : label := get_name_value(SELF);
   WHERE
      WR1:
         (SIZEOF(elements) > 1) OR (SIZEOF(elements) = 1) AND (elements[1].exponent <> 1.00000);
      WR2:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
   END_ENTITY;



   ENTITY derived_unit_element;
      unit : named_unit;
      exponent : REAL;
   END_ENTITY;



   ENTITY description_attribute;
      attribute_value : text;
      described_item : description_attribute_select;
   END_ENTITY;



   ENTITY design_characteristic_occurrence
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY design_composition_path;
      path_element : SET [1:?] OF functional_unit;
      design_functional_unit : functional_unit;
   END_ENTITY;



   ENTITY design_functional_unit_allocation_to_assembly_component
   SUPERTYPE OF (transmission_line_functional_unit_to_routed_printed_component_allocation);
      functional_design_definition_path : design_composition_path;
      implementation : assembly_component;
      global_swappable : BOOLEAN;
      local_swappable : BOOLEAN;
      of_property : OPTIONAL SET [1:?] OF coordinated_characteristic;
      path_alias : ee_name;
      swap_code : STRING;
   UNIQUE
      ur1 : implementation, path_alias;
   END_ENTITY;



   ENTITY design_functional_unit_allocation_to_assembly_joint;
      functional_design_definition_path : design_composition_path;
      implementation : assembly_joint;
   UNIQUE
      ur1 : functional_design_definition_path;
   END_ENTITY;



   ENTITY design_functional_unit_allocation_to_fabrication_joint;
      functional_design_definition_path : design_composition_path;
      implementation : fabrication_joint;
   UNIQUE
      ur1 : functional_design_definition_path;
   END_ENTITY;



   ENTITY design_functional_unit_allocation_to_reference_functional_unit;
      reference_definition_path : reference_composition_path;
      design_definition_path : design_composition_path;
   END_ENTITY;



   ENTITY design_intent_modification
   SUPERTYPE OF (ONEOF(material_removal_feature, material_addition_feature, material_shape_modification));
      design_intent : stratum_feature_or_stratum_feature_template_component;
      modification_causal_item : restriction_basis_item;
   END_ENTITY;



   ENTITY design_intent_modification_3d_position;
      design_shape : physical_unit_3d_shape;
      transformation : axis2_placement_3d;
      feature_shape : design_intent_modification_3d_shape_select;
   END_ENTITY;



   ENTITY design_intent_modification_3d_shape
   SUBTYPE OF (feature_shape_definition);
      represented_design_intent_modification : design_intent_modification;
   END_ENTITY;



   ENTITY design_intent_modification_non_planar_2d_shape
   SUBTYPE OF (open_shell_based_surface);
      represented_design_intent_modification : design_intent_modification;
   END_ENTITY;



   ENTITY design_intent_modification_planar_position;
      design_shape : physical_unit_planar_shape;
      transformation : axis2_placement_2d;
      feature_shape : design_intent_modification_planar_shape_select;
   END_ENTITY;



   ENTITY design_intent_modification_planar_shape
   SUBTYPE OF (planar_projected_shape);
      represented_design_intent_modification : design_intent_modification;
   END_ENTITY;



   ENTITY design_intent_modification_sequence;
      precedent_modification : design_intent_modification_or_material_removal_component;
      subsequent_modification : design_intent_modification_or_material_removal_component;
   UNIQUE
      ur1 : precedent_modification, subsequent_modification;
   END_ENTITY;



   ENTITY design_intent_modification_styled_area_representation;
      derived_planar_shape : OPTIONAL SET [1:?] OF design_intent_modification_planar_shape;
      represented_design_intent_modification : design_intent_modification;
      shape_styled_area_representation : styled_area_representation;
   END_ENTITY;



   ENTITY design_layer_stratum
   SUBTYPE OF (stratum);
      primary_design_layer_stratum : BOOLEAN;
      SELF\stratum.of_technology : design_layer_technology;
   INVERSE
      existence_dependence : SET [1:?] OF layer_connection_point FOR resident_design_layer_stratum;
      libary_definition : SET [0:1] OF engineering_make_from FOR resultant_design;
   WHERE
      WR1:
         NOT primary_design_layer_stratum AND (SIZEOF(QUERY (imps <* USEDIN(SELF, 'AP210_ARM_EXTENDED.STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.' + 'ASSIGNED_DESIGN_OBJECT')| ('AP210_ARM_EXTENDED.INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(imps.defined_part_feature)))) = 0) OR primary_design_layer_stratum AND (SIZEOF(QUERY (imps <* USEDIN(SELF, 'AP210_ARM_EXTENDED.STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.' + 'ASSIGNED_DESIGN_OBJECT')| ('AP210_ARM_EXTENDED.INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(imps.defined_part_feature)))) = 1);
   END_ENTITY;



   ENTITY design_layer_technology
   SUBTYPE OF (stratum_technology);
      design_layer_purpose : layer_purpose;
      SELF\stratum_technology.minimum_finished_feature_size : length_measure_with_unit;
      SELF\stratum_technology.minimum_finished_feature_spacing : length_measure_with_unit;
   END_ENTITY;



   ENTITY design_layer_type_specific_padstack_definition
   SUBTYPE OF (padstack_definition);
      design_layer_type_reference : design_layer_technology;
   END_ENTITY;



   ENTITY design_object_management_relationship
   ABSTRACT SUPERTYPE OF (ONEOF(change_design_object_management_relationship, delete_design_object_management_relationship, add_design_object_management_relationship));
      previous_design : ee_product_definition;
      current_design : ee_product_definition;
   END_ENTITY;



   ENTITY design_requirement_occurrence
   SUPERTYPE OF (interface_requirement_occurrence)
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY design_specification
   SUPERTYPE OF (interface_specification)
   SUBTYPE OF (ee_specification);
   END_ENTITY;



   ENTITY design_view_connection_zone_position_relationship;
      associating_design_view_shape : feature_shape_definition;
      associated_usage : connection_zone;
      associated_usage_origin : origin;
      associated_connection_zone_shape_definition : feature_shape_definition;
      associated_usage_placement : axis2_placement;
      associating_design_view : physical_unit_design_view;
   WHERE
      WR1:
         associated_connection_zone_shape_definition.shape_origin = associated_usage_origin;
   END_ENTITY;



   ENTITY design_view_terminal_component_shape_relationship;
      associating_component_shape : feature_shape_definition;
      associated_usage_origin : origin;
      associated_usage : conductive_interconnect_terminal_or_interconnect_component_join_terminal;
      associated_terminal_shape_definition : feature_shape_definition;
      associated_usage_placement : axis2_placement;
   WHERE
      WR1:
         associated_terminal_shape_definition.shape_origin = associated_usage_origin;
   END_ENTITY;



   ENTITY device_2d_position;
      placed_device : part_device;
      transformation : axis2_placement_2d;
      part_shape : physical_unit_planar_shape;
      device_shape : physical_unit_planar_shape;
   END_ENTITY;



   ENTITY device_3d_position;
      placed_device : part_device;
      transformation : axis2_placement_3d;
      part_shape : physical_unit_3d_shape;
      device_shape : physical_unit_3d_shape;
   END_ENTITY;



   ENTITY device_terminal_map;
      target_terminal : packaged_part_terminal;
      mapped_device_terminal : part_device_terminal;
   UNIQUE
      ur1 : mapped_device_terminal, target_terminal;
   END_ENTITY;



   ENTITY device_terminal_map_relationship;
      related_device_terminal_map : device_terminal_map;
      relating_device_terminal_map : device_terminal_map;
   END_ENTITY;



   ENTITY diametrical_boundary_size_characteristic
   SUBTYPE OF (boundary_size_characteristic);
      sized_boundary : tolerance_zone_circular_or_cylindrical_or_spherical_boundary;
   END_ENTITY;



   ENTITY dielectric_crossover_area
   SUBTYPE OF (stratum_concept_relationship);
      related_concept : stratum_feature;
      relating_concept : stratum_feature;
      resulting_dielectric_crossover : stratum_feature;
   END_ENTITY;



   ENTITY dielectric_material_passage
   SUBTYPE OF (inter_stratum_feature);
      feature_material : OPTIONAL material_or_specification;
      precedent_passage : cutout;
   END_ENTITY;



   ENTITY digital_analytical_model_port
   SUBTYPE OF (analytical_model_port);
      nominal_signal_flow_direction : signal_flow_direction;
      port_type : model_parameter_type;
   WHERE
      WR1:
         not_applicable <> nominal_signal_flow_direction;
      WR2:
         numeric_property_type <> port_type;
      WR3:
         physical_property_type <> port_type;
   END_ENTITY;



   ENTITY dimension_along_curve
   SUBTYPE OF (dimensional_location);
      path : shape_element;
   UNIQUE
      ur1 : located_elements, path;
   END_ENTITY;



   ENTITY dimension_location_with_direction_vector
   SUBTYPE OF (dimensional_location);
      measurement_direction : axis2_placement_or_datum_based_vector_orientation_select;
   UNIQUE
      ur1 : located_elements, measurement_direction;
   END_ENTITY;



   ENTITY dimension_location_with_specified_datum_system
   SUBTYPE OF (dimensional_location);
      referenced_datum_system_defining_conditions : datum_system_defining_conditions_without_material_conditions;
   END_ENTITY;



   ENTITY dimension_qualifier
   ABSTRACT SUPERTYPE OF (ONEOF(pre_defined_dimension_qualifier, user_defined_dimension_qualifier));
      qualified_dimensions : SET [1:?] OF dimensional_characteristic;
   END_ENTITY;



   ENTITY dimension_related_positional_boundary
   SUBTYPE OF (positional_boundary);
      boundary_members : SET [1:?] OF positional_boundary_member;
      constrained_physical_feature : physical_feature_or_part_template;
   END_ENTITY;



   ENTITY dimension_related_positional_boundary_definition
   SUBTYPE OF (positional_boundary_definition);
      SELF\positional_boundary_definition.defined_positional_boundary : dimension_related_positional_boundary;
      characterized_boundary_member_definitions : SET [1:?] OF positional_boundary_member_definition;
   END_ENTITY;



   ENTITY dimension_set;
      associated_dimensions : SET [1:?] OF dimensional_characteristic;
   END_ENTITY;



   ENTITY dimensional_characteristic
   ABSTRACT SUPERTYPE OF (ONEOF(dimensional_location, dimensional_size) ANDOR statistical_dimensional_tolerance);
      dimension_type : dimensional_types;
   END_ENTITY;



   ENTITY dimensional_characteristic_representation;
      representation : shape_dimension_representation;
      dimension : dimensional_location_or_dimensional_size;
      auxiliary_dimension_representation : BOOLEAN;
   END_ENTITY;



   ENTITY dimensional_exponents;
      length_exponent : REAL;
      mass_exponent : REAL;
      time_exponent : REAL;
      electric_current_exponent : REAL;
      thermodynamic_temperature_exponent : REAL;
      amount_of_substance_exponent : REAL;
      luminous_intensity_exponent : REAL;
   END_ENTITY;



   ENTITY dimensional_location
   SUPERTYPE OF (dimension_location_with_specified_datum_system ANDOR ONEOF(dimension_along_curve, angular_dimension_with_direction_vector, dimension_location_with_direction_vector))
   SUBTYPE OF (dimensional_characteristic);
      located_elements : shape_element_locating_relationship;
      directed : BOOLEAN;
   END_ENTITY;



   ENTITY dimensional_size
   ABSTRACT SUPERTYPE OF (ONEOF(dimensional_size_based_on_opposing_boundaries, single_boundary_dimension) ANDOR angular_size_dimension)
   SUBTYPE OF (dimensional_characteristic);
      size_of : shape_element;
      envelope : BOOLEAN;
   END_ENTITY;



   ENTITY dimensional_size_based_on_opposing_boundaries
   SUBTYPE OF (dimensional_size);
      boundary_separation : shape_element_locating_relationship;
      SELF\dimensional_size.size_of : composite_unit_shape_element;
   END_ENTITY;



   ENTITY direct_stratum_component_join_implementation;
      implementing_joint : fabrication_joint;
      topological_requirement : stratum_embedded_component_join_relationship;
   END_ENTITY;



   ENTITY directed_axis
   SUBTYPE OF (non_feature_shape_element);
      axis_to_be_oriented : centre_axis;
      start_shape_element : shape_element;
      end_shape_element : shape_element;
   UNIQUE
      ur1 : axis_to_be_oriented, start_shape_element;
   END_ENTITY;



   ENTITY direction
   SUBTYPE OF (geometric_representation_item);
      direction_ratios : LIST [2:3] OF REAL;
   WHERE
      WR1:
         SIZEOF(QUERY (tmp <* direction_ratios| (tmp <> 0.00000))) > 0;
   END_ENTITY;



   ENTITY direction_element;
      direction : datum_based_direction_vector;
      angle_value : plane_angle_measure_with_unit;
      base_datum_plane : datum_plane;
      direction_of_half_datum_plane : datum_based_direction_vector;
   INVERSE
      elements_of : SET [1:?] OF datum_based_vector_orientation FOR direction_components;
   END_ENTITY;



   ENTITY documentation_layer_stratum
   SUBTYPE OF (stratum);
      SELF\stratum.of_technology : documentation_layer_technology;
   INVERSE
      libary_definition : SET [0:1] OF engineering_make_from FOR resultant_design;
   END_ENTITY;



   ENTITY documentation_layer_technology
   SUBTYPE OF (stratum_technology);
      documentation_layer_purpose : documentation_layer_purpose;
   END_ENTITY;



   ENTITY dose_equivalent_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\dose_equivalent_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = sievert;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY eccentric_cone
   SUBTYPE OF (geometric_representation_item);
      position : axis2_placement_3d;
      semi_axis_1 : positive_length_measure;
      semi_axis_2 : positive_length_measure;
      height : positive_length_measure;
      x_offset : length_measure;
      y_offset : length_measure;
      ratio : REAL;
   WHERE
      WR1:
         ratio >= 0.00000;
   END_ENTITY;



   ENTITY edge
   SUPERTYPE OF (ONEOF(edge_curve, oriented_edge, subedge))
   SUBTYPE OF (topological_representation_item);
      edge_start : vertex;
      edge_end : vertex;
   END_ENTITY;



   ENTITY edge_based_wireframe_model
   SUBTYPE OF (geometric_representation_item);
      ebwm_boundary : SET [1:?] OF connected_edge_set;
   END_ENTITY;



   ENTITY edge_based_wireframe_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.EDGE_BASED_WIREFRAME_MODEL', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' ] * TYPEOF(it)) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.EDGE_BASED_WIREFRAME_MODEL', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ] * TYPEOF(it)) = 1))) >= 1;
      WR3:
         SIZEOF(QUERY (ebwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (eb <* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT (SIZEOF(QUERY (edges <* eb.ces_edges| NOT ('AP210_ARM_EXTENDED.EDGE_CURVE' IN TYPEOF(edges)))) = 0))) = 0))) = 0;
      WR4:
         SIZEOF(QUERY (ebwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (eb <* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT (SIZEOF(QUERY (pline_edges <* QUERY (edges <* eb.ces_edges| ('AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(edges\edge_curve.edge_geometry)))| NOT (SIZEOF(pline_edges\edge_curve.edge_geometry\polyline.points) > 2))) = 0))) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (ebwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (eb <* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT (SIZEOF(QUERY (edges <* eb.ces_edges| NOT (('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(edges.edge_start)) AND ('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(edges.edge_end))))) = 0))) = 0))) = 0;
      WR6:
         SIZEOF(QUERY (ebwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (eb <* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT (SIZEOF(QUERY (edges <* eb.ces_edges| NOT valid_wireframe_edge_curve(edges\edge_curve.edge_geometry))) = 0))) = 0))) = 0;
      WR7:
         SIZEOF(QUERY (ebwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (eb <* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT (SIZEOF(QUERY (edges <* eb.ces_edges| NOT (valid_wireframe_vertex_point(edges.edge_start\vertex_point.vertex_geometry) AND valid_wireframe_vertex_point(edges.edge_end\vertex_point.vertex_geometry)))) = 0))) = 0))) = 0;
      WR8:
         SIZEOF(QUERY (mi <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.' + 'EDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR9:
         SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 3;
   END_ENTITY;



   ENTITY edge_curve
   SUBTYPE OF (edge, geometric_representation_item);
      edge_geometry : curve;
      same_sense : BOOLEAN;
   END_ENTITY;



   ENTITY edge_loop
   SUBTYPE OF (loop, path);
   DERIVE
      ne : INTEGER := SIZEOF(SELF\path.edge_list);
   WHERE
      WR1:
         SELF\path.edge_list[1].edge_start :=: SELF\path.edge_list[ne].edge_end;
   END_ENTITY;



   ENTITY edge_segment_cross_section
   SUBTYPE OF (shape_definition_3d_intersection);
   DERIVE
      SELF\shape_definition_3d_intersection.surface_intersection_result : edge_shape := SELF\shape_definition_3d_intersection.surface_intersection_result;
      SELF\shape_definition_3d_intersection.projected_volume : part_template_3d_shape := SELF\shape_definition_3d_intersection.projected_volume;
      cross_section_reference : edge_segment_vertex := SELF\shape_definition_3d_intersection.projected_volume\part_template_3d_shape.shape_characterized_part_template\inter_stratum_feature_edge_segment_template.start_vertex;
      associated_template : inter_stratum_feature_edge_segment_template := SELF\shape_definition_3d_intersection.projected_volume\part_template_3d_shape.shape_characterized_part_template;
   INVERSE
      referencing_template : inter_stratum_feature_edge_segment_template FOR cross_section;
   WHERE
      WR1:
         associated_template :=: referencing_template;
   END_ENTITY;



   ENTITY edge_segment_vertex
   SUBTYPE OF (single_datum, datum_point);
   UNIQUE
      ur1 : SELF\shape_element.name;
   END_ENTITY;



   ENTITY edge_shape
   ABSTRACT SUPERTYPE OF (ONEOF(bevel_edge_feature_shape, step_edge_feature_shape, radius_edge_feature_shape))
   SUBTYPE OF (planar_shape, feature_shape_definition);
   WHERE
      WR1:
         SIZEOF(QUERY (escss <* USEDIN(SELF, 'AP210_ARM_EXTENDED.SHAPE_DEFINITION_3D_INTERSECTION.SURFACE_INTERSECTION_RESULT')| NOT ('AP210_ARM_EXTENDED.EDGE_SEGMENT_CROSS_SECTION' IN TYPEOF(escss)))) = 0;
   END_ENTITY;



   ENTITY ee_approval;
      purpose : text;
      authorizer : SET [1:?] OF person_organization;
      approval_status : status;
      signoff_date : date_or_date_and_time;
   END_ENTITY;



   ENTITY ee_colour;
      name : ee_name;
   UNIQUE
      ur1 : name;
   END_ENTITY;



   ENTITY ee_document
   SUPERTYPE OF (ee_specification);
      publisher : person_organization;
      key_phrase : OPTIONAL SET [1:?] OF structured_text;
      document_approval : OPTIONAL ee_approval;
      base_identifier : ee_document_identifier;
      change_date : OPTIONAL SET [1:?] OF date_and_time;
      creation_date : date_or_date_and_time;
      security_code : OPTIONAL security_classification;
      text_usage : OPTIONAL structured_text;
      author : OPTIONAL SET [1:?] OF person;
      revision : ee_name;
      document_name : ee_name;
   UNIQUE
      ur1 : base_identifier, revision;
   END_ENTITY;



   ENTITY ee_document_identifier;
      identifier_name : ee_name;
      assigned_value : ee_name;
   DERIVE
      publishing_organization : organization := assigned_document[1].publisher;
   INVERSE
      assigned_document : SET [1:?] OF ee_document FOR base_identifier;
   UNIQUE
      ur1 : identifier_name, assigned_value;
   WHERE
      WR1:
         SIZEOF(QUERY (ad <* assigned_document| (ad.publisher <> publishing_organization))) = 0;
   END_ENTITY;



   ENTITY ee_material;
      material_name : STRING;
      electrical_conductivity_classification : material_conductivity_classification;
      magnetic_conductivity_classification : OPTIONAL material_conductivity_classification;
      optical_conductivity_classification : OPTIONAL material_conductivity_classification;
      registration_document : ee_document;
      thermal_conductivity_classification : OPTIONAL material_conductivity_classification;
   INVERSE
      associated_definition : SET [0:1] OF material_definition FOR material;
   UNIQUE
      ur1 : material_name, registration_document;
   END_ENTITY;



   ENTITY ee_product;
      description : OPTIONAL text;
      product_nomenclature : ee_name;
      part_number : ee_name;
      id_owner : organization;
      standard_product_indicator : OPTIONAL BOOLEAN;
      of_context : OPTIONAL ee_name;
   INVERSE
      product_version : SET [0:?] OF ee_product_version FOR versioned_item;
      product_classification : SET [1:?] OF ee_product_related_product_category FOR of_product;
   UNIQUE
      ur1 : id_owner, part_number;
   WHERE
      WR1:
         LENGTH(product_nomenclature) >= 0;
      WR2:
         (of_context = 'catalog') OR (SIZEOF(product_version) > 0);
   END_ENTITY;



   ENTITY ee_product_category
   SUPERTYPE OF (ee_product_related_product_category);
      category_specific_values : OPTIONAL SET [1:?] OF parameter_assignment;
      description : OPTIONAL ee_name;
      name : ee_name;
      reference_document : ee_document;
      category_parameters : OPTIONAL SET [1:?] OF category_model_parameter;
   UNIQUE
      ur1 : name, reference_document;
   END_ENTITY;



   ENTITY ee_product_category_relationship;
      sub_category : ee_product_category;
      category : ee_product_category;
   END_ENTITY;



   ENTITY ee_product_configuration;
      satisfying_product : OPTIONAL SET [1:?] OF ee_product_version;
      configuration_manager : person_organization;
      item_id : STRING;
      product_configuration_approval : ee_approval;
      model_of_product : ee_product_model;
      phase_of_product : STRING;
   UNIQUE
      ur1 : item_id, satisfying_product;
   END_ENTITY;



   ENTITY ee_product_definition
   ABSTRACT SUPERTYPE OF (ONEOF(analytical_model_definition, evaluation_ee_product_definition, footprint_definition, functional_unit_definition, material_definition, padstack_definition, (physical_unit ANDOR physical_unit_network_definition), physical_unit_interconnect_definition, requirement_definition, rule_definition, rule_set, rule_set_group, stratum, part_feature_template_definition, template_definition) ANDOR externally_defined_ee_product_definition);
      creator : SET [1:?] OF person_organization;
      product_definition_id : ee_name;
      security_code : OPTIONAL security_classification;
      context_description : OPTIONAL ee_text;
      version : ee_product_version;
      product_definition_approval : OPTIONAL ee_approval;
      creation_date : date_and_time;
      documentation : OPTIONAL SET [1:?] OF ee_document;
      cad_filename : OPTIONAL ee_name;
      discipline_id : OPTIONAL ee_text;
      life_cycle_status : text;
   UNIQUE
      ur1 : product_definition_id, version;
   END_ENTITY;



   ENTITY ee_product_definition_based_constraint_occurrence
   SUPERTYPE OF (shape_and_ee_product_definition_based_constraint_occurrence)
   SUBTYPE OF (constraint_occurrence);
      constraining_part : ee_product_definition;
   END_ENTITY;



   ENTITY ee_product_model;
      model_name : STRING;
   UNIQUE
      ur1 : model_name;
   END_ENTITY;



   ENTITY ee_product_related_product_category
   SUBTYPE OF (ee_product_category);
      of_product : SET [1:?] OF ee_product;
   END_ENTITY;



   ENTITY ee_product_specific_parameter_value_assignment;
      of_product : ee_product;
      assigned_parameter : parameter_assignment;
   DERIVE
      the_model_parameter : model_parameter := assigned_parameter.assigned_parameter;
   UNIQUE
      ur1 : the_model_parameter, of_product;
   END_ENTITY;



   ENTITY ee_product_version
   SUPERTYPE OF (rule_version);
      creator : person_organization;
      authorizing_agreement : OPTIONAL contract;
      revision_code : ee_name;
      versioned_item : ee_product;
      security_code : OPTIONAL security_classification;
      product_version_approval : SET [1:?] OF ee_approval;
   INVERSE
      product_definition : SET [1:?] OF ee_product_definition FOR version;
   UNIQUE
      ur1 : versioned_item, revision_code;
   END_ENTITY;



   ENTITY ee_product_version_supersedence;
      superseded_product_version : ee_product_version;
      superseding_product_version : ee_product_version;
   UNIQUE
      ur1 : superseded_product_version, superseding_product_version;
   END_ENTITY;



   ENTITY ee_requirement_occurrence
   SUPERTYPE OF ((ONEOF(thermal_requirement_occurrence, electromagnetic_requirement_occurrence, electrical_requirement_occurrence, mechanical_requirement_occurrence) ANDOR ONEOF(design_requirement_occurrence, inspection_requirement_occurrence, test_requirement_occurrence, purpose_occurrence, constraint_occurrence, design_characteristic_occurrence)) ANDOR ONEOF(layout_spacing_requirement_occurrence, item_restricted_requirement_occurrence));
      associated_definition : requirement_definition;
      required_analytical_representation : OPTIONAL SET [1:?] OF analytical_representation;
      required_functional_specification : OPTIONAL SET [1:?] OF functional_specification;
      required_part : OPTIONAL SET [1:?] OF ee_product;
      required_coordinated_characteristic : OPTIONAL SET [1:?] OF coordinated_characteristic;
      requirement_specification : SET [1:?] OF ee_specification;
      required_characteristic : OPTIONAL SET [1:?] OF characteristic;
      required_material : OPTIONAL ee_material;
      reference_clause : OPTIONAL structured_text_id_in_document;
   UNIQUE
      ur1 : associated_definition;
   END_ENTITY;



   ENTITY ee_specification
   SUPERTYPE OF (ONEOF(design_specification, process_specification, material_specification, test_specification, language_reference_manual))
   SUBTYPE OF (ee_document);
      source : person_organization;
   END_ENTITY;



   ENTITY ee_text;
      content : STRING;
   END_ENTITY;



   ENTITY electric_charge_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\electric_charge_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = coulomb;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY electric_current_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY electric_current_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 1.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY electrical_isolation_laminate_component
   SUBTYPE OF (filled_area_material_removal_laminate_component);
      SELF\assembly_component.usage_definition : electrical_isolation_removal_template;
   END_ENTITY;



   ENTITY electrical_isolation_removal_structure
   SUBTYPE OF (filled_area_material_removal_structure);
      electrical_isolation_spacing_requirement : ee_requirement_occurrence;
   END_ENTITY;



   ENTITY electrical_isolation_removal_template
   SUBTYPE OF (material_removal_feature_template);
      electrical_isolation_spacing_requirement : layout_spacing_requirement_occurrence;
   END_ENTITY;



   ENTITY electrical_network_definition
   SUBTYPE OF (functional_unit_network_definition);
   END_ENTITY;



   ENTITY electrical_requirement_occurrence
   SUPERTYPE OF (material_electrical_conductivity_requirement_occurrence)
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY electromagnetic_compatibility_requirement_allocation
   SUPERTYPE OF (shield_allocation)
   SUBTYPE OF (assembly_requirement_allocation);
   END_ENTITY;



   ENTITY electromagnetic_requirement_occurrence
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY electromotive_force_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\electromotive_force_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = volt;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY elementary_surface
   SUPERTYPE OF (ONEOF(plane, cylindrical_surface, conical_surface, spherical_surface, toroidal_surface))
   SUBTYPE OF (surface);
      position : axis2_placement_3d;
   END_ENTITY;



   ENTITY ellipse
   SUBTYPE OF (conic);
      semi_axis_1 : positive_length_measure;
      semi_axis_2 : positive_length_measure;
   END_ENTITY;



   ENTITY ellipsoid
   SUBTYPE OF (geometric_representation_item);
      position : axis2_placement_3d;
      semi_axis_1 : positive_length_measure;
      semi_axis_2 : positive_length_measure;
      semi_axis_3 : positive_length_measure;
   END_ENTITY;



   ENTITY embedded_component_terminal
   SUBTYPE OF (laminate_component_join_terminal);
      SELF\component_feature.definition : bare_die_terminal_or_packaged_part_terminal;
      SELF\component_feature.associated_component : bare_die_component_or_packaged_component;
   END_ENTITY;



   ENTITY energy_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\energy_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = joule;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY engineering_make_from;
      base_design : ee_product_definition;
      resultant_design : ee_product_definition;
   END_ENTITY;



   ENTITY equivalent_functional_terminals_assignment;
      equivalent_terminals : SET [2:?] OF functional_unit_usage_view_terminal_definition;
      name : ee_name;
   END_ENTITY;



   ENTITY equivalent_functional_unit_definition_assignment;
      equivalent_functional_unit_definitions : SET [2:?] OF functional_unit_definition;
      name : ee_name;
   END_ENTITY;



   ENTITY evaluated_characteristic
   SUPERTYPE OF (rule_based_evaluated_characteristic);
      planned_product_data : planned_characteristic;
      product_data_status : evaluation_type;
      product_characterization_data : OPTIONAL SET [1:?] OF coordinated_characteristic;
      evaluation_result : evaluation_result_value;
   END_ENTITY;



   ENTITY evaluated_degenerate_pcurve
   SUBTYPE OF (degenerate_pcurve);
      equivalent_point : cartesian_point;
   END_ENTITY;



   ENTITY evaluation_ee_product_definition
   SUBTYPE OF (ee_product_definition);
      evaluated_product_definition : ee_product_definition;
      evaluation_data : SET [1:?] OF evaluated_characteristic;
   WHERE
      WR1:
         TYPEOF(SELF) <> TYPEOF(evaluated_product_definition);
   END_ENTITY;



   ENTITY event_occurrence;
      id : identifier;
      name : label;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY event_occurrence_context_role;
      name : label;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY event_occurrence_relationship;
      name : label;
      description : OPTIONAL text;
      relating_event : event_occurrence;
      related_event : event_occurrence;
   END_ENTITY;



   ENTITY event_occurrence_role;
      name : label;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY expanded_uncertainty
   SUBTYPE OF (standard_uncertainty);
      coverage_factor : REAL;
   END_ENTITY;



   ENTITY explicitly_located_layer_connection_point
   SUBTYPE OF (layer_connection_point);
   END_ENTITY;



   ENTITY external_definition;
      code : STRING;
      code_value : STRING;
      reference_document : standard_or_reference_document;
   END_ENTITY;



   ENTITY externally_defined_curve_font;
   END_ENTITY;



   ENTITY externally_defined_dimension_representation
   SUBTYPE OF (shape_dimension_representation);
      definitions : SET [1:?] OF external_definition;
      dimension_value : OPTIONAL measure_with_unit;
   END_ENTITY;



   ENTITY externally_defined_ee_product_definition
   SUBTYPE OF (ee_product_definition);
      source : ee_name;
   END_ENTITY;



   ENTITY externally_defined_hatch_style;
   END_ENTITY;



   ENTITY externally_defined_tile;
   END_ENTITY;



   ENTITY externally_defined_tile_style;
   END_ENTITY;



   ENTITY extruded_area_solid
   SUBTYPE OF (swept_area_solid);
      extruded_direction : direction;
      depth : positive_length_measure;
   WHERE
      WR1:
         dot_product(SELF\swept_area_solid.swept_area.basis_surface\elementary_surface.position.p[3], extruded_direction) <> 0.00000;
   END_ENTITY;



   ENTITY extruded_face_solid
   SUBTYPE OF (swept_face_solid);
      extruded_direction : direction;
      depth : positive_length_measure;
   WHERE
      WR1:
         dot_product(SELF\swept_face_solid.swept_face.face_geometry\elementary_surface.position.p[3], extruded_direction) <> 0.00000;
   END_ENTITY;



   ENTITY fabrication_joint;
      fabrication_features_1 : fabricated_feature_select;
      fabrication_features_2 : fabricated_feature_select;
      auxiliary_joint_material : OPTIONAL stratum_feature_template_component;
      associated_interconnect_module : interconnect_module;
   END_ENTITY;



   ENTITY fabrication_technology_specification
   SUBTYPE OF (process_specification);
   END_ENTITY;



   ENTITY fabrication_thickness_requirement_occurrence
   SUBTYPE OF (inspection_requirement_occurrence);
      characterized_class : metal_or_dielectric;
      characterized_class_range : range_characteristic;
      tolerance : tolerance_characteristic;
   END_ENTITY;



   ENTITY face
   SUPERTYPE OF (ONEOF(face_surface, subface, oriented_face))
   SUBTYPE OF (topological_representation_item);
      bounds : SET [1:?] OF face_bound;
   WHERE
      WR1:
         NOT mixed_loop_type_set(list_to_set(list_face_loops(SELF)));
      WR2:
         SIZEOF(QUERY (temp <* bounds| ('AP210_ARM_EXTENDED.FACE_OUTER_BOUND' IN TYPEOF(temp)))) <= 1;
   END_ENTITY;



   ENTITY face_bound
   SUBTYPE OF (topological_representation_item);
      bound : loop;
      orientation : BOOLEAN;
   END_ENTITY;



   ENTITY face_outer_bound
   SUBTYPE OF (face_bound);
   END_ENTITY;



   ENTITY face_surface
   SUBTYPE OF (face, geometric_representation_item);
      face_geometry : surface;
      same_sense : BOOLEAN;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.ORIENTED_SURFACE' IN TYPEOF(face_geometry));
   END_ENTITY;



   ENTITY faceted_brep
   SUBTYPE OF (manifold_solid_brep);
   END_ENTITY;



   ENTITY faceted_brep_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.FACETED_BREP', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' ] * TYPEOF(it)) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.FACETED_BREP', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ] * TYPEOF(it)) = 1))) > 0;
      WR3:
         SIZEOF(QUERY (fbrep <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.FACETED_BREP' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (csh <* msb_shells(fbrep, 'AIC_FACETED_BREP')| NOT (SIZEOF(QUERY (fcs <* csh.cfs_faces| NOT (('AP210_ARM_EXTENDED.FACE_SURFACE' IN TYPEOF(fcs)) AND (('AP210_ARM_EXTENDED.PLANE' IN TYPEOF(fcs\face_surface.face_geometry)) AND ('AP210_ARM_EXTENDED.CARTESIAN_POINT' IN TYPEOF(fcs\face_surface.face_geometry\elementary_surface.position.location)))))) = 0))) = 0))) = 0;
      WR4:
         SIZEOF(QUERY (fbrep <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.FACETED_BREP' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (csh <* msb_shells(fbrep, 'AIC_FACETED_BREP')| NOT (SIZEOF(QUERY (fcs <* csh.cfs_faces| NOT (SIZEOF(QUERY (bnds <* fcs.bounds| ('AP210_ARM_EXTENDED.FACE_OUTER_BOUND' IN TYPEOF(bnds)))) = 1))) = 0))) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (msb <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MANIFOLD_SOLID_BREP' IN TYPEOF(it)))| ('AP210_ARM_EXTENDED.ORIENTED_CLOSED_SHELL' IN TYPEOF(msb\manifold_solid_brep.outer)))) = 0;
      WR6:
         SIZEOF(QUERY (brv <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.BREP_WITH_VOIDS' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (csh <* brv\brep_with_voids.voids| csh\oriented_closed_shell.orientation)) = 0))) = 0;
      WR7:
         SIZEOF(QUERY (mi <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.FACETED_BREP_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
   END_ENTITY;



   ENTITY faceted_primitive
   SUBTYPE OF (geometric_representation_item);
      points : LIST [4:?] OF UNIQUE cartesian_point;
   WHERE
      WR1:
         points[1].dim = 3;
   END_ENTITY;



   ENTITY feature_shape_definition
   SUBTYPE OF (shape_definition);
   END_ENTITY;



   ENTITY fiducial
   SUBTYPE OF (laminate_component);
   END_ENTITY;



   ENTITY fiducial_part_feature
   SUBTYPE OF (part_tooling_feature);
   END_ENTITY;



   ENTITY fiducial_stratum_feature
   SUBTYPE OF (stratum_feature);
   END_ENTITY;



   ENTITY fill_area
   SUBTYPE OF (annotation_fill_area);
   END_ENTITY;



   ENTITY fill_area_occurrence;
      style : SET [1:?] OF fill_area_style;
      filled_area : fill_area;
      fill_style_target : cartesian_point;
      boundary_style : curve_style;
   END_ENTITY;



   ENTITY fill_area_style;
      name : STRING;
      fill_style : fill_style_select;
   UNIQUE
      ur1 : name;
   END_ENTITY;



   ENTITY fill_area_style_hatching;
      hatch_line_appearance : curve_style;
      start_of_next_hatch_line : vector;
      point_of_reference_hatch_line : cartesian_point;
      pattern_start : cartesian_point;
      hatch_line_angle : plane_angle_measure_with_unit;
   END_ENTITY;



   ENTITY fill_area_style_tile;
      first_direction_repeat_factor : vector;
      second_direction_repeat_factor : vector;
      tile : fill_area_style_tile_shape_select;
      tiling_scale : positive_ratio_measure;
   END_ENTITY;



   ENTITY fill_area_style_tile_curve_with_style;
   END_ENTITY;



   ENTITY fill_area_style_tile_solid_region;
   END_ENTITY;



   ENTITY fill_area_style_tile_symbol_with_style;
   END_ENTITY;



   ENTITY filled_area_material_removal_laminate_component
   SUPERTYPE OF (ONEOF(electrical_isolation_laminate_component, thermal_isolation_laminate_component))
   SUBTYPE OF (material_removal_laminate_component);
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.CONDUCTOR' IN TYPEOF(SELF\material_removal_laminate_component.design_intent));
   END_ENTITY;



   ENTITY filled_area_material_removal_structure
   ABSTRACT SUPERTYPE OF (ONEOF(electrical_isolation_removal_structure, thermal_isolation_removal_structure))
   SUBTYPE OF (material_removal_feature);
      SELF\design_intent_modification.design_intent : conductive_filled_area;
   END_ENTITY;



   ENTITY flatness_tolerance
   SUBTYPE OF (geometric_tolerance_without_referenced_datum_system);
   END_ENTITY;



   ENTITY font_definition;
   END_ENTITY;



   ENTITY footprint_definition
   SUBTYPE OF (ee_product_definition);
      reference_breakout : OPTIONAL SET [1:?] OF assembly_group_component;
      reference_package : package_or_printed_part_template;
   DERIVE
      footprint_location : padstack_arrangement := get_padstack_arrangement(padstack);
      padstack_reference_implementation : reference_packaged_part_interconnect_implementation := padstack[1].padstack.reference_implementation;
   INVERSE
      padstack : SET [1:?] OF padstack_location_in_footprint_definition FOR footprint;
      shape : footprint_definition_shape FOR shape_characterized_footprint_definition;
   WHERE
      WR2:
         SIZEOF(QUERY (ps <* padstack| (ps.padstack.padstack_location <> footprint_location))) = 0;
      WR3:
         SIZEOF(QUERY (ps <* padstack| (ps.padstack.reference_implementation <> padstack_reference_implementation))) = 0;
      WR4:
         (footprint_location = padstack_arrangement.top) AND (SELF\ee_product_definition.context_description.content = 'top') OR NOT (footprint_location = padstack_arrangement.top) AND NOT (SELF\ee_product_definition.context_description.content = 'top');
      WR5:
         (footprint_location = padstack_arrangement.bottom) AND (SELF\ee_product_definition.context_description.content = 'bottom') OR NOT (footprint_location = padstack_arrangement.bottom) AND NOT (SELF\ee_product_definition.context_description.content = 'bottom');
      WR6:
         (footprint_location = padstack_arrangement.symmetrical) AND (SELF\ee_product_definition.context_description.content = 'symmetrical') OR NOT (footprint_location = padstack_arrangement.symmetrical) AND NOT (SELF\ee_product_definition.context_description.content = 'symmetrical');
   END_ENTITY;



   ENTITY footprint_definition_shape
   SUBTYPE OF (planar_projected_shape);
      shape_characterized_footprint_definition : footprint_definition;
      shape_environment : OPTIONAL application_environment;
      shape_material_condition : material_condition;
      reference_shape : physical_unit_shape_select;
   WHERE
      WR1:
         NOT (SIZEOF([ 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_3D_SHAPE', 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_PLANAR_SHAPE' ] * TYPEOF(reference_shape)) = 1) OR (shape_characterized_footprint_definition.reference_package :=: reference_shape.shape_characterized_physical_unit);
      WR2:
         NOT (SIZEOF([ 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_3D_SHAPE', 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_PLANAR_SHAPE' ] * TYPEOF(reference_shape)) = 1) OR ('AP210_ARM_EXTENDED.PACKAGE' IN TYPEOF(reference_shape.shape_characterized_physical_unit));
      WR3:
         NOT (SIZEOF([ 'AP210_ARM_EXTENDED.PART_TEMPLATE_3D_SHAPE', 'AP210_ARM_EXTENDED.PART_TEMPLATE_PLANAR_SHAPE' ] * TYPEOF(reference_shape)) = 1) OR (shape_characterized_footprint_definition.reference_package :=: reference_shape.shape_characterized_part_template);
      WR4:
         NOT (SIZEOF([ 'AP210_ARM_EXTENDED.PART_TEMPLATE_3D_SHAPE', 'AP210_ARM_EXTENDED.PART_TEMPLATE_PLANAR_SHAPE' ] * TYPEOF(reference_shape)) = 1) OR ('AP210_ARM_EXTENDED.PRINTED_PART_TEMPLATE' IN TYPEOF(reference_shape.shape_characterized_part_template));
   END_ENTITY;



   ENTITY footprint_occurrence
   SUBTYPE OF (assembly_group_component);
      SELF\assembly_component.usage_definition : footprint_definition;
   INVERSE
      component : SET [1:?] OF footprint_occurrence_sub_assembly_relationship FOR relating_component;
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.COMPONENT_MAKE_FROM_RELATIONSHIP.RESULTANT_COMPONENT')) <= 1;
      WR2:
         NOT (SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.COMPONENT_MAKE_FROM_RELATIONSHIP.RESULTANT_COMPONENT')) = 1) OR (SIZEOF(QUERY (cmfr <* USEDIN(SELF, 'AP210_ARM_EXTENDED.COMPONENT_MAKE_FROM_RELATIONSHIP.RESULTANT_COMPONENT')| ('AP210_ARM_EXTENDED.ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(cmfr.reusable_component)))) = 1);
      WR3:
         SIZEOF(TYPEOF(SELF) * [ 'AP210_ARM_EXTENDED.PRINTED_COMPONENT', 'AP210_ARM_EXTENDED.LAMINATE_COMPONENT', 'AP210_ARM_EXTENDED.PHYSICAL_COMPONENT' ]) = 0;
   END_ENTITY;



   ENTITY footprint_occurrence_sub_assembly_relationship;
      related_component : laminate_component;
      relating_component : footprint_occurrence;
      sub_assembly_reference_designation : part_template_location_in_padstack_definition;
      terminal_location : padstack_location_in_footprint_definition;
   UNIQUE
      ur1 : sub_assembly_reference_designation, relating_component, terminal_location;
   WHERE
      WR1:
         terminal_location.footprint :=: relating_component.usage_definition;
      WR2:
         sub_assembly_reference_designation.padstack :=: terminal_location.padstack;
      WR3:
         related_component\assembly_component.usage_definition :=: sub_assembly_reference_designation.template.associated_template_occurrence;
   END_ENTITY;



   ENTITY force_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\force_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = newton;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY founded_item;
   END_ENTITY;



   ENTITY frequency_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\frequency_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = hertz;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY frozen_assignment;
      frozen_item : SET [1:?] OF frozen_design_object;
      assigned_approval : ee_approval;
   END_ENTITY;



   ENTITY functional_orientation_feature
   SUBTYPE OF (part_feature);
      associated_body_vertical_extent : OPTIONAL SET [1:2] OF package_body_surface;
      associated_terminal : primary_reference_terminal;
   END_ENTITY;



   ENTITY functional_specification;
      associated_definition : functional_specification_definition;
      reference_signal : signal_specification;
      characterizing_functional_unit : functional_unit;
      characterizing_signal : signal_specification;
      characteristic_category : external_definition;
   WHERE
      WR1:
         characterizing_functional_unit.composed_network = associated_definition;
   END_ENTITY;



   ENTITY functional_specification_definition
   SUBTYPE OF (functional_unit_network_definition);
   INVERSE
      composing_specification : SET [1:?] OF functional_specification FOR associated_definition;
   END_ENTITY;



   ENTITY functional_terminal_group;
      name : ee_name;
      group_description : STRING;
      group_type : STRING;
   UNIQUE
      ur1 : name;
   END_ENTITY;



   ENTITY functional_terminal_group_assignment;
      composed_group : functional_terminal_group;
      functional_usage_view_terminal : scalar_terminal_definition;
   END_ENTITY;



   ENTITY functional_unit;
      definition : functional_unit_definition;
      reference_designation : ee_name;
      composed_network : functional_unit_network_definition;
      functional_model : OPTIONAL analytical_representation;
      functional_property : OPTIONAL SET [1:?] OF parameter_assignment_override;
   INVERSE
      access_mechanisms : SET [1:?] OF functional_unit_terminal FOR accessed_functional_unit;
   UNIQUE
      ur1 : reference_designation, composed_network;
   WHERE
      WR1:
         NOT EXISTS(functional_property) OR EXISTS(functional_model);
   END_ENTITY;



   ENTITY functional_unit_definition
   ABSTRACT SUPERTYPE OF (ONEOF(functional_unit_network_definition, functional_unit_usage_view))
   SUBTYPE OF (ee_product_definition);
      analytical_functional_unit_representation : OPTIONAL SET [1:?] OF analytical_representation;
   END_ENTITY;



   ENTITY functional_unit_network_definition
   SUPERTYPE OF ((thermal_network_definition ANDOR electrical_network_definition) ANDOR functional_specification_definition)
   SUBTYPE OF (functional_unit_definition);
      usage_view : functional_unit_usage_view;
   END_ENTITY;



   ENTITY functional_unit_network_node_definition;
      associated_functional_unit_definition : functional_unit_network_definition;
      functional_unit_network_node_name : ee_name;
   DERIVE
      valid_conservative_node : BOOLEAN := SIZEOF(QUERY (vc <* USEDIN(SELF, 'AP210_ARM_EXTENDED.BUS_ELEMENT_LINK.PRECEDENT_ELEMENT')| TRUE)) + SIZEOF(QUERY (vc <* USEDIN(SELF, 'AP210_ARM_EXTENDED.BUS_ELEMENT_LINK.SUBSEQUENT_ELEMENT')| TRUE)) + SIZEOF(QUERY (vc <* USEDIN(SELF, 'AP210_ARM_EXTENDED.FUNCTIONAL_UNIT_TERMINAL_NODE_ASSIGNMENT.COMPOSED_NODE')| TRUE)) + SIZEOF(external_node_access) > 1;
   INVERSE
      external_node_access : SET [0:1] OF functional_unit_network_terminal_definition_node_assignment FOR composed_node;
   UNIQUE
      ur1 : functional_unit_network_node_name, associated_functional_unit_definition;
   END_ENTITY;



   ENTITY functional_unit_network_terminal_definition_bus_assignment;
      connected_bus : bus_structural_definition;
      connected_terminal : functional_unit_usage_view_terminal_definition;
   END_ENTITY;



   ENTITY functional_unit_network_terminal_definition_node_assignment;
      composed_node : functional_unit_network_node_definition;
      connected_terminal : functional_unit_usage_view_terminal_definition;
   END_ENTITY;



   ENTITY functional_unit_requirement_allocation
   SUBTYPE OF (requirement_allocation);
      SELF\requirement_allocation.target_product_object : functional_unit;
   END_ENTITY;



   ENTITY functional_unit_terminal;
      accessed_functional_unit : functional_unit;
      definition : functional_unit_usage_view_terminal_definition;
   INVERSE
      bus_assignment : SET [0:1] OF functional_unit_terminal_bus_assignment FOR connected_terminal;
      node_assignment : SET [0:1] OF functional_unit_terminal_node_assignment FOR connected_terminal;
   END_ENTITY;



   ENTITY functional_unit_terminal_bus_assignment;
      connected_bus : bus_structural_definition;
      connected_terminal : functional_unit_terminal;
   END_ENTITY;



   ENTITY functional_unit_terminal_node_assignment;
      composed_node : functional_unit_network_node_definition;
      connected_terminal : functional_unit_terminal;
   END_ENTITY;



   ENTITY functional_unit_usage_view
   SUBTYPE OF (functional_unit_definition);
   INVERSE
      access_mechanism : SET [1:?] OF functional_unit_usage_view_terminal_definition FOR associated_functional_unit_definition;
   END_ENTITY;



   ENTITY functional_unit_usage_view_terminal_definition
   SUPERTYPE OF (scalar_terminal_definition);
      associated_functional_unit_definition : functional_unit_usage_view;
      signal_name : ee_name;
   INVERSE
      node_assignment : SET [0:?] OF functional_unit_network_terminal_definition_node_assignment FOR connected_terminal;
      bus_assignment : SET [0:?] OF functional_unit_network_terminal_definition_bus_assignment FOR connected_terminal;
   UNIQUE
      ur1 : signal_name, associated_functional_unit_definition;
   WHERE
      WR1:
         (EXISTS(node_assignment) AND NOT EXISTS(bus_assignment) OR NOT EXISTS(node_assignment) AND EXISTS(bus_assignment)) OR NOT EXISTS(node_assignment) AND NOT EXISTS(bus_assignment);
   END_ENTITY;



   ENTITY functional_unit_usage_view_terminal_definition_make_from_relationship;
      associated_make_from : engineering_make_from;
      reusable_feature : functional_unit_usage_view_terminal_definition;
      resultant_feature : functional_unit_usage_view_terminal_definition;
   UNIQUE
      ur1 : reusable_feature, resultant_feature;
   WHERE
      WR1:
         reusable_feature :<>: resultant_feature;
      WR2:
         reusable_feature.associated_functional_unit_definition :<>: resultant_feature.associated_functional_unit_definition;
   END_ENTITY;



   ENTITY functional_usage_view_to_part_terminal_assignment;
      physical_usage_view_terminal : part_terminal;
      functional_usage_view_terminal : scalar_terminal_definition;
   UNIQUE
      ur1 : functional_usage_view_terminal, physical_usage_view_terminal;
   END_ENTITY;



   ENTITY functional_usage_view_to_printed_part_template_terminal_assignment;
      physical_usage_view_terminal : printed_part_template_terminal;
      functional_usage_view_terminal : scalar_terminal_definition;
   UNIQUE
      ur1 : functional_usage_view_terminal, physical_usage_view_terminal;
   END_ENTITY;



   ENTITY functionally_defined_transformation;
      name : label;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY gate_path_swap_specification
   SUBTYPE OF (change_design_object_management_relationship);
      SELF\change_design_object_management_relationship.current_design_object : design_functional_unit_allocation_to_reference_functional_unit;
      SELF\change_design_object_management_relationship.previous_design_object : design_functional_unit_allocation_to_reference_functional_unit;
   END_ENTITY;



   ENTITY geometric_alignment
   SUBTYPE OF (derived_shape_element);
   END_ENTITY;



   ENTITY geometric_curve_set
   SUBTYPE OF (geometric_set);
   WHERE
      WR1:
         SIZEOF(QUERY (temp <* SELF\geometric_set.elements| ('AP210_ARM_EXTENDED.SURFACE' IN TYPEOF(temp)))) = 0;
   END_ENTITY;



   ENTITY geometric_intersection
   SUBTYPE OF (derived_shape_element);
   END_ENTITY;



   ENTITY geometric_representation_context
   SUBTYPE OF (representation_context);
      coordinate_space_dimension : dimension_count;
   END_ENTITY;



   ENTITY geometric_representation_item
   SUPERTYPE OF (ONEOF(point, direction, vector, placement, cartesian_transformation_operator, curve, surface, edge_curve, face_surface, poly_loop, vertex_point, solid_model, boolean_result, sphere, right_circular_cone, right_circular_cylinder, torus, block, primitive_2d, right_angular_wedge, ellipsoid, faceted_primitive, rectangular_pyramid, cyclide_segment_solid, half_space_solid, half_space_2d, shell_based_surface_model, shell_based_wireframe_model, edge_based_wireframe_model, geometric_set))
   SUBTYPE OF (representation_item);
   DERIVE
      dim : dimension_count := dimension_of(SELF);
   WHERE
      WR1:
         SIZEOF(QUERY (using_rep <* using_representations(SELF)| NOT ('AP210_ARM_EXTENDED.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(using_rep.context_of_items)))) = 0;
   END_ENTITY;



   ENTITY geometric_representation_relationship
   ABSTRACT SUPERTYPE OF (ONEOF(non_feature_shape_composition_relationship, reference_geometric_representation_relationship, component_part_2d_geometric_representation_relationship, component_part_2d_non_planar_geometric_representation_relationship, component_part_3d_geometric_representation_relationship, shape_definition_3d_intersection, shape_definition_3d_plane_projection));
      shape_1 : shape_definition;
      shape_2 : shape_definition;
   WHERE
      WR1:
         shape_1 <> shape_2;
   END_ENTITY;



   ENTITY geometric_set
   SUPERTYPE OF (geometric_curve_set)
   SUBTYPE OF (geometric_representation_item);
      elements : SET [1:?] OF geometric_set_select;
   END_ENTITY;



   ENTITY geometric_tolerance
   ABSTRACT SUPERTYPE OF (((ONEOF(geometric_tolerance_with_referenced_datum_system, geometric_tolerance_without_referenced_datum_system) ANDOR ONEOF(profile_of_any_line_tolerance, position_tolerance, profile_of_any_surface_tolerance)) ANDOR geometric_tolerance_with_applied_material_condition_property) ANDOR statistical_geometric_tolerance);
      tolerance_zone_or_boundary_definition : constraining_element_definitions;
      toleranced_shape_element : toleranceable_shape_element;
   END_ENTITY;



   ENTITY geometric_tolerance_qualifier
   ABSTRACT SUPERTYPE OF (ONEOF(pre_defined_geometric_tolerance_qualifier, user_defined_geometric_tolerance_qualifier));
      qualified_geometric_tolerances : SET [1:?] OF geometric_tolerance;
   END_ENTITY;



   ENTITY geometric_tolerance_with_applied_material_condition_property
   SUPERTYPE OF (boundary_based_position_tolerance)
   SUBTYPE OF (geometric_tolerance);
      applied_material_condition_property_name : material_condition_property_names;
   END_ENTITY;



   ENTITY geometric_tolerance_with_referenced_datum_system
   ABSTRACT SUPERTYPE OF (ONEOF(angularity_tolerance, parallelism_tolerance, perpendicularity_tolerance, circular_runout_tolerance, symmetry_tolerance, concentricity_and_coaxiality_tolerance, profile_of_any_line_tolerance_with_referenced_datum_system, profile_of_any_surface_tolerance_with_referenced_datum_system, position_tolerance_with_referenced_datum_system, total_runout_tolerance))
   SUBTYPE OF (geometric_tolerance);
      datum_system_definition : datum_system_defining_conditions;
   END_ENTITY;



   ENTITY geometric_tolerance_without_referenced_datum_system
   ABSTRACT SUPERTYPE OF (ONEOF(circularity_tolerance, cylindricity_tolerance, flatness_tolerance, straightness_tolerance, position_tolerance_without_referenced_datum_system, profile_of_any_surface_tolerance_without_referenced_datum_system, profile_of_any_line_tolerance_without_referenced_datum_system))
   SUBTYPE OF (geometric_tolerance);
   END_ENTITY;



   ENTITY geometrically_bounded_2d_wireframe_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 2;
      WR2:
         SIZEOF(QUERY (item <* SELF.items| NOT (SIZEOF(TYPEOF(item) * [ 'AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_2D', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ]) = 1))) = 0;
      WR3:
         SIZEOF(QUERY (item <* SELF.items| (SIZEOF(TYPEOF(item) * [ 'AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ]) = 1))) >= 1;
      WR4:
         SIZEOF(QUERY (mi <* QUERY (item <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(item)))| NOT ('AP210_ARM_EXTENDED.' + 'GEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR5:
         SIZEOF(QUERY (gcs <* QUERY (item <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(item)))| NOT (SIZEOF(QUERY (elem <* gcs\geometric_set.elements| NOT (SIZEOF(TYPEOF(elem) * [ 'AP210_ARM_EXTENDED.B_SPLINE_CURVE', 'AP210_ARM_EXTENDED.CIRCLE', 'AP210_ARM_EXTENDED.COMPOSITE_CURVE', 'AP210_ARM_EXTENDED.ELLIPSE', 'AP210_ARM_EXTENDED.OFFSET_CURVE_2D', 'AP210_ARM_EXTENDED.POINT', 'AP210_ARM_EXTENDED.POLYLINE', 'AP210_ARM_EXTENDED.TRIMMED_CURVE' ]) = 1))) = 0))) = 0;
      WR6:
         SIZEOF(QUERY (gcs <* QUERY (item <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(item)))| NOT (SIZEOF(QUERY (crv <* QUERY (elem <* gcs\geometric_set.elements| ('AP210_ARM_EXTENDED.CURVE' IN TYPEOF(elem)))| NOT valid_basis_curve_in_2d_wireframe(crv))) = 0))) = 0;
      WR7:
         SIZEOF(QUERY (gcs <* QUERY (item <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(item)))| NOT (SIZEOF(QUERY (pnt <* QUERY (elem <* gcs\geometric_set.elements| ('AP210_ARM_EXTENDED.POINT' IN TYPEOF(elem)))| NOT (SIZEOF(TYPEOF(pnt) * [ 'AP210_ARM_EXTENDED.CARTESIAN_POINT', 'AP210_ARM_EXTENDED.POINT_ON_CURVE' ]) = 1))) = 0))) = 0;
      WR8:
         SIZEOF(QUERY (gcs <* QUERY (item <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(item)))| NOT (SIZEOF(QUERY (pl <* QUERY (elem <* gcs\geometric_set.elements| ('AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(elem)))| NOT (SIZEOF(pl\polyline.points) > 2))) = 0))) = 0;
   END_ENTITY;



   ENTITY geometrically_bounded_surface_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.GEOMETRIC_SET', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' ] * TYPEOF(it)) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.GEOMETRIC_SET', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ] * TYPEOF(it)) = 1))) > 0;
      WR3:
         SIZEOF(QUERY (mi <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.' + 'GEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR4:
         SIZEOF(QUERY (gs <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (pnt <* QUERY (gsel <* gs\geometric_set.elements| ('AP210_ARM_EXTENDED.POINT' IN TYPEOF(gsel)))| NOT gbsf_check_point(pnt))) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (gs <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cv <* QUERY (gsel <* gs\geometric_set.elements| ('AP210_ARM_EXTENDED.CURVE' IN TYPEOF(gsel)))| NOT gbsf_check_curve(cv))) = 0))) = 0;
      WR6:
         SIZEOF(QUERY (gs <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (sf <* QUERY (gsel <* gs\geometric_set.elements| ('AP210_ARM_EXTENDED.SURFACE' IN TYPEOF(gsel)))| NOT gbsf_check_surface(sf))) = 0))) = 0;
   END_ENTITY;



   ENTITY geometrically_bounded_wireframe_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF(TYPEOF(it) * [ 'AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ]) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF(TYPEOF(it) * [ 'AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ]) = 1))) >= 1;
      WR3:
         SIZEOF(QUERY (gcs <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (crv <* QUERY (elem <* gcs\geometric_set.elements| ('AP210_ARM_EXTENDED.CURVE' IN TYPEOF(elem)))| NOT valid_geometrically_bounded_wf_curve(crv, 'AIC_GEOMETRICALLY_BOUNDED_WIREFRAME'))) = 0))) = 0;
      WR4:
         SIZEOF(QUERY (gcs <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (pnts <* QUERY (elem <* gcs\geometric_set.elements| ('AP210_ARM_EXTENDED.POINT' IN TYPEOF(elem)))| NOT valid_geometrically_bounded_wf_point(pnts, 'AIC_GEOMETRICALLY_BOUNDED_WIREFRAME'))) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (gcs <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cnc <* QUERY (elem <* gcs\geometric_set.elements| ('AP210_ARM_EXTENDED.CONIC' IN TYPEOF(elem)))| NOT ('AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' IN TYPEOF(cnc\conic.position)))) = 0))) = 0;
      WR6:
         SIZEOF(QUERY (gcs <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.GEOMETRIC_CURVE_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (pline <* QUERY (elem <* gcs\geometric_set.elements| ('AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(elem)))| NOT (SIZEOF(pline\polyline.points) > 2))) = 0))) = 0;
      WR7:
         SIZEOF(QUERY (mi <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.' + 'GEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR8:
         SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 3;
   END_ENTITY;



   ENTITY global_uncertainty_assigned_context
   SUBTYPE OF (representation_context);
      uncertainty : SET [1:?] OF uncertainty_measure_with_unit;
   END_ENTITY;



   ENTITY global_unit_assigned_context
   SUBTYPE OF (representation_context);
      units : SET [1:?] OF unit;
   END_ENTITY;



   ENTITY guided_wave_bare_die_terminal
   SUBTYPE OF (minimally_defined_bare_die_terminal);
   END_ENTITY;



   ENTITY guided_wave_terminal
   SUBTYPE OF (package_terminal);
   END_ENTITY;



   ENTITY half_space_2d
   SUBTYPE OF (geometric_representation_item);
      base_curve : curve;
      agreement_flag : BOOLEAN;
   END_ENTITY;



   ENTITY half_space_solid
   SUBTYPE OF (geometric_representation_item);
      base_surface : surface;
      agreement_flag : BOOLEAN;
   END_ENTITY;



   ENTITY hyperbola
   SUBTYPE OF (conic);
      semi_axis : positive_length_measure;
      semi_imag_axis : positive_length_measure;
   END_ENTITY;



   ENTITY id_attribute;
      attribute_value : identifier;
      identified_item : id_attribute_select;
   END_ENTITY;



   ENTITY illuminance_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\illuminance_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = lux;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY indirect_stratum_component_join_implementation
   SUBTYPE OF (plated_inter_stratum_feature);
      indirect_topological_requirement : stratum_embedded_component_join_relationship;
      implementing_joint : fabrication_joint;
   UNIQUE
      ur1 : indirect_topological_requirement, implementing_joint;
   END_ENTITY;



   ENTITY inductance_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\inductance_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = henry;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY inspection_requirement_occurrence
   SUPERTYPE OF (ONEOF(layout_line_width_tolerance_requirement_occurrence, layout_land_width_tolerance_requirement_occurrence, fabrication_thickness_requirement_occurrence))
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY inter_stratum_extent;
      from_stratum : stratum;
      to_stratum : stratum;
   END_ENTITY;



   ENTITY inter_stratum_feature
   ABSTRACT SUPERTYPE OF (ONEOF(unsupported_passage, plated_inter_stratum_feature, cutout, interconnect_module_edge, interconnect_module_edge_segment, cutout_edge_segment, dielectric_material_passage))
   SUBTYPE OF (laminate_component);
      feature_of_size : BOOLEAN;
      SELF\assembly_component.usage_definition : inter_stratum_feature_template;
   END_ENTITY;



   ENTITY inter_stratum_feature_edge_segment_template
   SUBTYPE OF (inter_stratum_feature_template);
      composed_edge : inter_stratum_feature_edge_template;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
      reference_path : trimmed_curve;
      cross_section : OPTIONAL edge_segment_cross_section;
   WHERE
      WR1:
         EXISTS(cross_section) XOR (SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.PART_TEMPLATE_3D_SHAPE.' + 'SHAPE_CHARACTERIZED_PART_TEMPLATE')) >= 0);
      WR2:
         EXISTS(reference_path.start_point) AND EXISTS(reference_path.end_point);
      WR3:
         NOT EXISTS(start_vertex\datum_point.location_in_2d) OR (reference_path.start_point :=: start_vertex\datum_point.location_in_2d);
      WR4:
         NOT EXISTS(start_vertex\datum_point.location_in_3d) OR (reference_path.start_point :=: start_vertex\datum_point.location_in_3d);
      WR5:
         NOT EXISTS(end_vertex\datum_point.location_in_2d) OR (reference_path.end_point :=: start_vertex\datum_point.location_in_2d);
      WR6:
         NOT EXISTS(end_vertex\datum_point.location_in_3d) OR (reference_path.end_point :=: start_vertex\datum_point.location_in_3d);
      WR7:
         start_vertex :<>: end_vertex;
   END_ENTITY;



   ENTITY inter_stratum_feature_edge_template
   SUBTYPE OF (inter_stratum_feature_template);
   INVERSE
      edges : SET [2:?] OF inter_stratum_feature_edge_segment_template FOR composed_edge;
   END_ENTITY;



   ENTITY inter_stratum_feature_template
   SUPERTYPE OF (ONEOF(component_termination_passage_template, via_template, unsupported_passage_template, inter_stratum_feature_edge_segment_template, inter_stratum_feature_edge_template))
   SUBTYPE OF (part_template);
      of_passage_technology : passage_technology;
   END_ENTITY;



   ENTITY inter_stratum_join_implementation
   ABSTRACT SUPERTYPE OF (ONEOF(physical_network_supporting_stratum_feature_conductive_join, physical_network_supporting_inter_stratum_feature));
      topological_requirement : inter_stratum_join_relationship;
   END_ENTITY;



   ENTITY inter_stratum_join_relationship
   SUBTYPE OF (join_relationship);
      points_to_be_connected : SET [2:?] OF layer_connection_point;
   END_ENTITY;



   ENTITY interconnect_component_interface_terminal
   SUBTYPE OF (component_interface_terminal);
      connection : OPTIONAL connection_zone;
   UNIQUE
      ur1 : SELF\shape_element.name, SELF\component_feature.associated_component;
   END_ENTITY;



   ENTITY interconnect_component_join_terminal
   SUBTYPE OF (physical_component_terminal);
      connection : OPTIONAL connection_zone;
      SELF\component_feature.associated_component : physical_component;
   UNIQUE
      ur1 : SELF\shape_element.name, SELF\component_feature.associated_component;
   END_ENTITY;



   ENTITY interconnect_module
   SUPERTYPE OF (ONEOF(pcb, reference_packaged_part_interconnect_implementation))
   SUBTYPE OF (physical_unit_design_view);
      assembly_design_requirement : OPTIONAL SET [1:?] OF assembly_module;
   INVERSE
      of_fabrication_thickness_requirement : SET [0:?] OF requirement_allocation FOR target_product_object;
   WHERE
      WR1:
         SIZEOF(QUERY (ftr <* of_fabrication_thickness_requirement| NOT ('AP210_ARM_EXTENDED.FABRICATION_THICKNESS_REQUIREMENT_OCCURRENCE' IN TYPEOF(ftr\requirement_allocation.allocated_requirement)))) = 0;
      WR2:
         SIZEOF(QUERY (imsar <* USEDIN(SELF, 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.' + 'ASSEMBLY')| ('AP210_ARM_EXTENDED.DESIGN_LAYER_STRATUM' IN TYPEOF(imsar.component)) AND (imsar.component\design_layer_stratum.primary_design_layer_stratum = TRUE))) = 1;
   END_ENTITY;



   ENTITY interconnect_module_cavity_surface
   SUBTYPE OF (interconnect_module_surface_feature);
      reference_surface : interconnect_module_surface_feature;
   WHERE
      WR1:
         SELF :<>: reference_surface;
   END_ENTITY;



   ENTITY interconnect_module_component
   SUPERTYPE OF (interconnect_module_macro_component)
   SUBTYPE OF (physical_component);
      SELF\assembly_component.usage_definition : interconnect_module_usage_view;
   END_ENTITY;



   ENTITY interconnect_module_component_stratum_based_terminal
   SUBTYPE OF (interconnect_module_component_terminal);
      SELF\component_feature.definition : interconnect_module_stratum_based_terminal;
   END_ENTITY;



   ENTITY interconnect_module_component_surface_feature
   SUBTYPE OF (physical_component_feature);
      SELF\component_feature.definition : interconnect_module_surface_feature;
   END_ENTITY;



   ENTITY interconnect_module_component_terminal
   SUPERTYPE OF (interconnect_module_component_stratum_based_terminal ANDOR interconnect_module_macro_component_join_terminal)
   SUBTYPE OF (physical_component_terminal);
      SELF\component_feature.definition : interconnect_module_terminal;
      SELF\component_feature.associated_component : interconnect_module_component;
   END_ENTITY;



   ENTITY interconnect_module_constraint_region
   SUBTYPE OF (non_feature_shape_element);
      keepout : BOOLEAN;
      non_conformant_interconnect_module_design_object : OPTIONAL SET [1:?] OF interconnect_module_design_object_select;
      SELF\non_feature_shape_element.scope : interconnect_module;
      design_specific_purpose : ee_name;
      requirement : ee_requirement_occurrence;
      associated_stratum_extent : SET [1:?] OF inter_stratum_extent;
      constrained_design_object_category : interconnect_module_design_object_category;
   INVERSE
      precedent_version_constraint_region : SET [0:1] OF non_feature_shape_element_relationship FOR related_shape_element;
   WHERE
      WR1:
         ('AP210_ARM_EXTENDED.CSG_2D_SHAPE' IN TYPEOF(SELF\non_feature_shape_element.element_shape)) OR ('AP210_ARM_EXTENDED.BOUND_VOLUME_SHAPE' IN TYPEOF(SELF\non_feature_shape_element.element_shape));
      WR2:
         NOT (SIZEOF(precedent_version_constraint_region) = 1) OR ('AP210_ARM_EXTENDED.INTERCONNECT_MODULE_CONSTRAINT_REGION' IN TYPEOF(precedent_version_constraint_region[1]\non_feature_shape_element_relationship.relating_shape_element));
   END_ENTITY;



   ENTITY interconnect_module_cutout_segment_surface
   SUBTYPE OF (interconnect_module_surface_feature);
      composed_surface : interconnect_module_cutout_surface;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
   WHERE
      WR1:
         start_vertex :<>: end_vertex;
   END_ENTITY;



   ENTITY interconnect_module_cutout_surface
   SUBTYPE OF (interconnect_module_surface_feature);
   END_ENTITY;



   ENTITY interconnect_module_edge
   SUPERTYPE OF (ONEOF(partially_plated_interconnect_module_edge, plated_interconnect_module_edge))
   SUBTYPE OF (inter_stratum_feature);
   END_ENTITY;



   ENTITY interconnect_module_edge_segment
   SUPERTYPE OF (plated_interconnect_module_edge_segment)
   SUBTYPE OF (inter_stratum_feature);
      composed_edge : interconnect_module_edge;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
      SELF\inter_stratum_feature.usage_definition : inter_stratum_feature_edge_segment_template;
   WHERE
      WR1:
         start_vertex :<>: end_vertex;
   END_ENTITY;



   ENTITY interconnect_module_edge_segment_surface
   SUBTYPE OF (interconnect_module_surface_feature);
      composed_surface : interconnect_module_edge_surface;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
   WHERE
      WR1:
         start_vertex :<>: end_vertex;
   END_ENTITY;



   ENTITY interconnect_module_edge_surface
   SUBTYPE OF (interconnect_module_surface_feature);
   END_ENTITY;



   ENTITY interconnect_module_interface_terminal
   SUBTYPE OF (interconnect_module_terminal);
   END_ENTITY;



   ENTITY interconnect_module_join_terminal
   SUBTYPE OF (interconnect_module_terminal);
   INVERSE
      defining_terminal : component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.COMPONENT_TERMINATION_PASSAGE_JOIN_TERMINAL', 'AP210_ARM_EXTENDED.VIA_TERMINAL', 'AP210_ARM_EXTENDED.PRINTED_COMPONENT_JOIN_TERMINAL', 'AP210_ARM_EXTENDED.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL', 'AP210_ARM_EXTENDED.LAND_JOIN_TERMINAL', 'AP210_ARM_EXTENDED.NON_FUNCTIONAL_LAND_JOIN_TERMINAL' ] * TYPEOF(defining_terminal.assigned_terminal)) = 1;
   END_ENTITY;



   ENTITY interconnect_module_macro_component
   SUBTYPE OF (interconnect_module_component);
      design_definition : interconnect_module;
   INVERSE
      join_access_mechanisms : SET [1:?] OF interconnect_module_macro_component_join_terminal FOR associated_component;
   WHERE
      WR1:
         SIZEOF(QUERY (immcjt <* join_access_mechanisms| (immcjt\component_feature.definition\part_feature.associated_definition :<>: design_definition\physical_unit_design_view.usage_view))) = 0;
   END_ENTITY;



   ENTITY interconnect_module_macro_component_join_terminal
   SUBTYPE OF (interconnect_module_component_terminal);
      SELF\component_feature.definition : interconnect_module_join_terminal;
      SELF\component_feature.associated_component : interconnect_module_macro_component;
   END_ENTITY;



   ENTITY interconnect_module_primary_surface
   SUBTYPE OF (interconnect_module_surface_feature);
   END_ENTITY;



   ENTITY interconnect_module_product_assembly_view_fabrication_joint;
      joined_terminal : SET [1:?] OF interconnect_module_component_stratum_based_terminal;
   END_ENTITY;



   ENTITY interconnect_module_secondary_surface
   SUBTYPE OF (interconnect_module_surface_feature);
   END_ENTITY;



   ENTITY interconnect_module_stratum_assembly_relationship;
      assembly : interconnect_module;
      component : stratum;
      reference_designation : ee_name;
   INVERSE
      stratum_planar_position : SET [0:1] OF stratum_interconnect_module_planar_position FOR stratum_component;
      stratum_3d_position : SET [0:1] OF stratum_interconnect_module_3d_position FOR stratum_component;
   UNIQUE
      ur1 : assembly, reference_designation;
   END_ENTITY;



   ENTITY interconnect_module_stratum_based_terminal
   SUBTYPE OF (interconnect_module_terminal);
   WHERE
      WR1:
         SIZEOF(QUERY (imtscr <* USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_TERMINAL_SURFACE_CONSTITUENT_RELATIONSHIP.' + 'RELATED_SHAPE_ELEMENT')| NOT (SIZEOF([ ('AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_PRIMARY_SURFACE'), ('AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_SECONDARY_SURFACE') ] * TYPEOF(imtscr.relating_shape_element)) = 1))) = 0;
      WR2:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_TERMINAL_SURFACE_CONSTITUENT_RELATIONSHIP.' + 'RELATED_SHAPE_ELEMENT')) = 1;
      WR3:
         SIZEOF([ 'AP210_ARM_EXTENDED.LAND', 'AP210_ARM_EXTENDED.NON_FUNCTIONAL_LAND' ] * TYPEOF(SELF\part_feature.design_view_definition_component_feature)) = 1;
   END_ENTITY;



   ENTITY interconnect_module_surface_feature
   ABSTRACT SUPERTYPE OF (ONEOF(interconnect_module_cavity_surface, interconnect_module_cutout_segment_surface, interconnect_module_cutout_surface, interconnect_module_secondary_surface, interconnect_module_primary_surface, interconnect_module_edge_surface, interconnect_module_edge_segment_surface))
   SUBTYPE OF (part_feature);
      SELF\part_feature.associated_definition : interconnect_module_usage_view;
   END_ENTITY;



   ENTITY interconnect_module_terminal
   SUPERTYPE OF (ONEOF(interconnect_module_interface_terminal, interconnect_module_join_terminal))
   SUBTYPE OF (part_terminal);
      terminal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
      SELF\part_feature.associated_definition : interconnect_module_usage_view;
   INVERSE
      feature_shape : SET [1:?] OF usage_concept_usage_relationship FOR associated_usage;
   END_ENTITY;



   ENTITY interconnect_module_terminal_surface_constituent_relationship
   SUBTYPE OF (shape_element_constituent_relationship);
      SELF\shape_element_relationship.relating_shape_element : interconnect_module_surface_feature;
      SELF\shape_element_relationship.related_shape_element : interconnect_module_terminal;
   END_ENTITY;



   ENTITY interconnect_module_usage_view
   SUPERTYPE OF (pcb_usage_view)
   SUBTYPE OF (physical_unit_usage_view);
      minimum_thickness_over_metal_requirement : OPTIONAL length_measure_with_unit;
      maximum_thickness_over_metal_requirement : OPTIONAL length_measure_with_unit;
      minimum_thickness_over_dielectric_requirement : OPTIONAL length_measure_with_unit;
      maximum_thickness_over_dielectric_requirement : OPTIONAL length_measure_with_unit;
      measurement_condition : OPTIONAL restraint_condition;
      located_thickness_requirement : OPTIONAL SET [1:?] OF located_interconnect_module_thickness_requirement;
      implemented_function : OPTIONAL functional_unit_usage_view;
   WHERE
      WR1:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION')| ('AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION')| ('AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_SECONDARY_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION')| ('AP210_ARM_EXTENDED.' + 'INTERCONNECT_MODULE_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR4:
         EXISTS(maximum_thickness_over_metal_requirement) OR EXISTS(maximum_thickness_over_dielectric_requirement);
      WR5:
         NOT EXISTS(minimum_thickness_over_metal_requirement) OR (minimum_thickness_over_metal_requirement\measure_with_unit.measure_value > 0.00000);
      WR6:
         NOT EXISTS(maximum_thickness_over_metal_requirement) OR (maximum_thickness_over_metal_requirement\measure_with_unit.measure_value > 0.00000);
      WR7:
         NOT EXISTS(minimum_thickness_over_dielectric_requirement) OR (minimum_thickness_over_dielectric_requirement\measure_with_unit.measure_value > 0.00000);
      WR8:
         NOT EXISTS(maximum_thickness_over_dielectric_requirement) OR (maximum_thickness_over_dielectric_requirement\measure_with_unit.measure_value > 0.00000);
   END_ENTITY;



   ENTITY interface_access_material_removal_laminate_component
   SUBTYPE OF (material_removal_laminate_component);
      accessed_interface : laminate_component_interface_terminal;
   END_ENTITY;



   ENTITY interface_access_stratum_feature_template_component
   SUBTYPE OF (stratum_feature_template_component);
      accessed_interface : laminate_component_interface_terminal;
   END_ENTITY;



   ENTITY interface_component
   SUPERTYPE OF (packaged_connector_component)
   SUBTYPE OF (physical_component);
   INVERSE
      access_mechanism : SET [1:?] OF component_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY interface_component_allocation;
      mating_solution : interface_component;
      mating_requirement : mating_connector_component;
   END_ENTITY;



   ENTITY interface_mounted_join;
      connection_to_interconnect_module_component : packaged_connector_component_interface_terminal;
      access_to_interface_mounted_component : physical_component_terminal;
   END_ENTITY;



   ENTITY interface_requirement_occurrence
   SUBTYPE OF (design_requirement_occurrence);
      interface_to_next_higher_assembly : OPTIONAL next_higher_assembly_interface_requirement;
      reference_protocol : OPTIONAL protocol_physical_layer_definition;
   END_ENTITY;



   ENTITY interface_specification
   SUBTYPE OF (design_specification);
   END_ENTITY;



   ENTITY interfaced_group_component
   SUBTYPE OF (assembly_group_component);
      group_interface_component : SET [1:?] OF interface_component;
   END_ENTITY;



   ENTITY interfacial_connection
   SUBTYPE OF (via);
   END_ENTITY;



   ENTITY internal_probe_access_area
   SUBTYPE OF (probe_access_area);
      stratum_feature_implementation : stratum_feature;
   INVERSE
      internal_access : internal_stratum_access FOR connected_probe;
   END_ENTITY;



   ENTITY internal_stratum_access;
      connected_probe : internal_probe_access_area;
      inter_stratum_feature : via;
   UNIQUE
      ur1 : connected_probe, inter_stratum_feature;
   END_ENTITY;



   ENTITY intersection_curve
   SUBTYPE OF (surface_curve);
   WHERE
      WR1:
         SIZEOF(SELF\surface_curve.associated_geometry) = 2;
      WR2:
         associated_surface(SELF\surface_curve.associated_geometry[1]) <> associated_surface(SELF\surface_curve.associated_geometry[2]);
   END_ENTITY;



   ENTITY intra_stratum_join_relationship
   SUBTYPE OF (join_relationship);
      points_to_be_connected : SET [2:?] OF layer_connection_point;
   INVERSE
      ordered_implementation : SET [0:1] OF conductor FOR implementation_requirement;
      random_implementation : SET [0:1] OF connected_filled_area FOR implementation_requirement;
   WHERE
      WR1:
         EXISTS(ordered_implementation) XOR EXISTS(random_implementation);
   END_ENTITY;



   ENTITY item_restricted_requirement_occurrence
   SUBTYPE OF (ee_requirement_occurrence);
      basis : restriction_basis_item;
   END_ENTITY;



   ENTITY join_relationship
   ABSTRACT SUPERTYPE OF (ONEOF(inter_stratum_join_relationship, intra_stratum_join_relationship, stratum_embedded_component_join_relationship, unrouted_join_relationship));
      associated_layout : interconnect_module;
   INVERSE
      network_topology : physical_network FOR interconnect_module_network_topology_element;
   END_ENTITY;



   ENTITY join_two_physical_connectivity_definition_supporting_inter_stratum_feature
   SUBTYPE OF (physical_network_supporting_inter_stratum_feature);
      joined_definitions : SET [2:2] OF physical_connectivity_definition;
   END_ENTITY;



   ENTITY join_two_physical_connectivity_definition_supporting_printed_component
   SUBTYPE OF (conductive_interconnect_element_with_pre_defined_transitions);
      joined_definitions : SET [2:2] OF physical_connectivity_definition;
   END_ENTITY;



   ENTITY junction_vertex_allocation;
      implementation_point : trace_junction_or_via;
      required_vertex : topological_junction;
   UNIQUE
      ur1 : required_vertex;
   END_ENTITY;



   ENTITY laminate_component
   SUPERTYPE OF ((ONEOF(conductive_interconnect_element, material_removal_laminate_component, stratum_feature_template_component, probe_access_area, inter_stratum_feature, special_symbol_laminate_component, laminate_text_component, laminate_text_string_component) ANDOR fiducial) ANDOR physical_laminate_component)
   SUBTYPE OF (assembly_component);
      cad_layer : OPTIONAL external_definition;
      SELF\assembly_component.usage_definition : OPTIONAL part_template;
   INVERSE
      padstack_occurrence_assembly : SET [0:1] OF padstack_occurrence_sub_assembly_relationship FOR related_component;
      footprint_occurrence_assembly : SET [0:1] OF footprint_occurrence_sub_assembly_relationship FOR related_component;
   WHERE
      WR1:
         ((SIZEOF(padstack_occurrence_assembly) = SIZEOF(footprint_occurrence_assembly)) AND (SIZEOF(padstack_occurrence_assembly) = 0)) AND (SIZEOF(SELF\assembly_component.assembly) > 0) OR (SIZEOF(padstack_occurrence_assembly) <> SIZEOF(footprint_occurrence_assembly)) AND (SIZEOF(SELF\assembly_component.assembly) = 0);
   END_ENTITY;



   ENTITY laminate_component_feature
   ABSTRACT SUPERTYPE OF (ONEOF(conductive_interconnect_element_terminal, laminate_component_interface_terminal, laminate_component_join_terminal, via_terminal))
   SUBTYPE OF (component_feature);
   END_ENTITY;



   ENTITY laminate_component_interface_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(non_functional_land_interface_terminal, printed_connector_component_interface_terminal, component_termination_passage_interface_terminal, land_interface_terminal))
   SUBTYPE OF (laminate_component_feature);
   END_ENTITY;



   ENTITY laminate_component_join_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(component_termination_passage_join_terminal, land_join_terminal, non_functional_land_join_terminal, embedded_component_terminal, printed_component_join_terminal))
   SUBTYPE OF (laminate_component_feature, component_terminal);
   INVERSE
      node_implementation : SET [0:1] OF physical_network FOR connectivity_requirement_element;
   END_ENTITY;



   ENTITY laminate_group_component_make_from_relationship
   SUBTYPE OF (component_make_from_relationship);
      SELF\component_make_from_relationship.reusable_component : assembly_group_component;
      SELF\component_make_from_relationship.resultant_component : assembly_group_component;
      stratum_mapping : SET [1:?] OF stratum_make_from_relationship;
   WHERE
      WR1:
         SIZEOF(QUERY (sar <* SELF\component_make_from_relationship.reusable_component.assembly| NOT ('AP210_ARM_EXTENDED.LAMINATE_COMPONENT' IN TYPEOF(sar.related_component)))) = 0;
      WR2:
         SIZEOF(QUERY (sar <* SELF\component_make_from_relationship.resultant_component.components| NOT ('AP210_ARM_EXTENDED.LAMINATE_COMPONENT' IN TYPEOF(sar.related_component)))) = 0;
   END_ENTITY;



   ENTITY laminate_text_component
   SUBTYPE OF (laminate_component);
      of_character : STRING;
      SELF\assembly_component.usage_definition : OPTIONAL part_text_template;
      stratum_feature_implementation : SET [1:?] OF stratum_feature;
   END_ENTITY;



   ENTITY laminate_text_string_component
   SUBTYPE OF (array_placement_group, laminate_component);
      message : message_content;
      of_horizontal_justification : horizontal_justification;
      of_vertical_justification : vertical_justification;
   WHERE
      WR1:
         SIZEOF(QUERY (sar <* SELF\assembly_group_component.components| (TYPEOF(sar.related_component) <> 'AP210_ARM_EXTENDED.LAMINATE_TEXT_COMPONENT'))) = 0;
   END_ENTITY;



   ENTITY land
   SUPERTYPE OF (ONEOF(via_dependent_land, component_termination_passage_dependent_land, contact_size_dependent_land, component_termination_passage_and_contact_size_dependent_land, via_and_contact_size_dependent_land))
   SUBTYPE OF (stratum_feature_template_component);
      alternate_land_definition : OPTIONAL land_physical_template;
      SELF\assembly_component.usage_definition : OPTIONAL land_physical_template;
   INVERSE
      access_mechanism : SET [1:?] OF land_join_terminal FOR associated_component;
   END_ENTITY;



   ENTITY land_interface_terminal
   SUBTYPE OF (laminate_component_interface_terminal);
      SELF\component_feature.definition : land_template_interface_terminal;
      SELF\component_feature.associated_component : land;
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.CONTACT_SIZE_DEPENDENT_LAND', 'AP210_ARM_EXTENDED.COMPONENT_TERMINATION_PASSAGE_AND_CONTACT_SIZE_DEPENDENT_LAND', 'AP210_ARM_EXTENDED.VIA_AND_CONTACT_SIZE_DEPENDENT_LAND' ] * TYPEOF(SELF\component_feature.associated_component)) = 1;
   END_ENTITY;



   ENTITY land_join_terminal
   SUBTYPE OF (laminate_component_join_terminal);
      SELF\component_feature.definition : land_template_join_terminal;
      SELF\component_feature.associated_component : land;
   END_ENTITY;



   ENTITY land_physical_template
   SUPERTYPE OF (default_land_physical_template)
   SUBTYPE OF (stratum_feature_template);
      pre_defined_classification_code : OPTIONAL external_definition;
   INVERSE
      access_mechanisms : SET [1:?] OF land_template_terminal FOR associated_definition;
   UNIQUE
      ur1 : pre_defined_classification_code;
   WHERE
      WR1:
         SIZEOF(QUERY (ltjt <* access_mechanisms| NOT ('AP210_ARM_EXTENDED.LAND_TEMPLATE_JOIN_TERMINAL' IN TYPEOF(ltjt)))) = 0;
   END_ENTITY;



   ENTITY land_template_interface_terminal
   SUBTYPE OF (land_template_terminal);
      SELF\land_template_terminal.associated_definition : default_attachment_size_based_land_physical_template;
   END_ENTITY;



   ENTITY land_template_join_terminal
   SUBTYPE OF (land_template_terminal);
   END_ENTITY;



   ENTITY land_template_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(land_template_join_terminal, land_template_interface_terminal))
   SUBTYPE OF (shape_element);
      associated_definition : land_physical_template;
      terminal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
      SELF\shape_element.name : ee_name;
      connection_zone_category : OPTIONAL SET [1:?] OF land_template_terminal_class;
   INVERSE
      terminal_shape : SET [0:1] OF usage_concept_usage_relationship FOR associated_usage;
   UNIQUE
      ur1 : SELF\shape_element.name, associated_definition;
   WHERE
      WR1:
         NOT EXISTS(terminal_connection_zone) OR EXISTS(connection_zone_category);
      WR2:
         NOT EXISTS(terminal_connection_zone) OR (SIZEOF(terminal_connection_zone) = SIZEOF(connection_zone_category));
   END_ENTITY;



   ENTITY language_reference_manual
   SUBTYPE OF (ee_specification);
   END_ENTITY;



   ENTITY layer;
      extent : inter_stratum_extent;
      layer_usage : OPTIONAL external_definition;
      name : ee_name;
   UNIQUE
      ur1 : name;
   END_ENTITY;



   ENTITY layer_connection_point
   ABSTRACT SUPERTYPE OF (ONEOF(explicitly_located_layer_connection_point, dependently_located_layer_connection_point));
      location_2d : OPTIONAL cartesian_point;
      location_3d : OPTIONAL cartesian_point;
      name : ee_name;
      resident_design_layer_stratum : design_layer_stratum;
   DERIVE
      aggregate_join : SET [1:?] OF join_relationship := make_aggregate_join(inter_join_path, intra_join_path, embedded_component_path);
      reference_network : physical_network := aggregate_join[1].network_topology;
   INVERSE
      inter_join_path : SET [0:1] OF inter_stratum_join_relationship FOR points_to_be_connected;
      intra_join_path : intra_stratum_join_relationship FOR points_to_be_connected;
      embedded_component_path : SET [0:?] OF stratum_embedded_component_join_relationship FOR point_to_be_connected;
   UNIQUE
      ur1 : name, resident_design_layer_stratum;
   WHERE
      WR1:
         EXISTS(location_2d) OR EXISTS(location_3d);
      WR2:
         NOT EXISTS(location_2d) OR (location_2d\geometric_representation_item.dim = 2);
      WR3:
         NOT EXISTS(location_3d) OR (location_3d\geometric_representation_item.dim = 3);
      WR4:
         SIZEOF(QUERY (jr <* aggregate_join| (jr.network_topology <> reference_network))) = 0;
   END_ENTITY;



   ENTITY layer_qualified_layout_spacing_requirement_occurrence
   SUBTYPE OF (layout_spacing_requirement_occurrence);
      layer_context : SET [1:?] OF inter_stratum_extent;
   END_ENTITY;



   ENTITY layout_junction;
      associated_definition : interconnect_module;
      name : ee_name;
      net : physical_network;
      location : cartesian_point;
   UNIQUE
      ur1 : location, net;
      ur2 : name, net;
   WHERE
      WR1:
         associated_definition :=: net.current_associated_definition;
   END_ENTITY;



   ENTITY layout_land_width_tolerance_requirement_occurrence
   SUBTYPE OF (inspection_requirement_occurrence);
      mating_feature_pitch_class : pitch_class;
      maximum_negative_deviation : length_measure_with_unit;
   END_ENTITY;



   ENTITY layout_line_width_tolerance_requirement_occurrence
   SUBTYPE OF (inspection_requirement_occurrence);
      characterized_stratum_technology : stratum_technology;
      tolerance_line_width_class : line_width_class;
      maximum_negative_deviation : length_measure_with_unit;
      maximum_positive_deviation : length_measure_with_unit;
   END_ENTITY;



   ENTITY layout_macro_component
   SUBTYPE OF (printed_component);
      design_definition : layout_macro_definition;
      SELF\printed_component.usage_definition : layout_macro_floor_plan_template;
   WHERE
      WR1:
         (((NOT EXISTS(SELF\printed_component.stratum_feature_implementation) AND NOT EXISTS(SELF\printed_component.printed_component_stack)) AND NOT EXISTS(SELF\printed_component.associated_precedent_link)) AND NOT EXISTS(SELF\printed_component.associated_subsequent_link)) AND NOT EXISTS(SELF\printed_component.required_material_stack);
   END_ENTITY;



   ENTITY layout_macro_definition
   SUBTYPE OF (pcb);
      floor_layout_view : layout_macro_floor_plan_template;
   WHERE
      WR1:
         NOT EXISTS(SELF\physical_unit_design_view.usage_view);
      WR2:
         NOT EXISTS(SELF\interconnect_module.assembly_design_requirement);
      WR3:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.ASSEMBLY_COMPONENT.USAGE_DEFINITION')) = 0;
   END_ENTITY;



   ENTITY layout_macro_definition_terminal_to_usage_terminal_assignment;
      defined_template_feature : printed_part_template_terminal;
      assigned_design_object : fabricated_feature_select;
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE.ACCESS_MAPS')) = 1;
   END_ENTITY;



   ENTITY layout_macro_floor_plan_template
   SUBTYPE OF (printed_part_template);
      access_maps : SET [1:?] OF layout_macro_definition_terminal_to_usage_terminal_assignment;
   INVERSE
      macro_definition : SET [0:1] OF layout_macro_definition FOR floor_layout_view;
   WHERE
      WR1:
         (NOT EXISTS(SELF\printed_part_template.of_stratum_technology) AND NOT EXISTS(SELF\printed_part_template.material_stack)) AND NOT EXISTS(SELF\printed_part_template.printed_part_template_stack);
   END_ENTITY;



   ENTITY layout_spacing_requirement_non_conforming_design_object;
      non_conformant_design_object : SET [1:?] OF assembly_or_interconnect_design_object_select;
      reference_design_object : assembly_or_interconnect_design_object_select;
      design_requirement : layout_spacing_requirement_occurrence;
   END_ENTITY;



   ENTITY layout_spacing_requirement_occurrence
   SUPERTYPE OF (layer_qualified_layout_spacing_requirement_occurrence)
   SUBTYPE OF (ee_requirement_occurrence);
      reference_design_object_category : pca_product_design_object_category;
      dependent_design_object_category : pca_product_design_object_category;
      SELF\ee_requirement_occurrence.required_coordinated_characteristic : SET [1:1] OF tolerance_characteristic;
      of_spacing_type : spacing_type;
   UNIQUE
      ur1 : reference_design_object_category, dependent_design_object_category;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.LENGTH_DATA_ELEMENT' IN TYPEOF(SELF\ee_requirement_occurrence.required_coordinated_characteristic[1].component_characteristic[1]);
   END_ENTITY;



   ENTITY lead_form_specification
   SUBTYPE OF (process_specification);
   END_ENTITY;



   ENTITY length_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.LENGTH_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY length_trimmed_terminal
   SUBTYPE OF (altered_package_terminal);
      maximum_trimmed_length : length_measure_with_unit;
      minimum_trimmed_length : length_measure_with_unit;
   END_ENTITY;



   ENTITY length_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 1.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY library_ee_product_definition
   SUBTYPE OF (externally_defined_ee_product_definition);
   DERIVE
      library : ee_name := SELF\externally_defined_ee_product_definition.source;
   END_ENTITY;



   ENTITY limit_dimension_representation
   SUBTYPE OF (shape_dimension_representation);
      upper_dimension_value : measure_with_unit;
      lower_dimension_value : measure_with_unit;
   END_ENTITY;



   ENTITY line
   SUBTYPE OF (curve);
      pnt : cartesian_point;
      dir : vector;
   WHERE
      WR1:
         dir.dim = pnt.dim;
   END_ENTITY;



   ENTITY line_width_class;
      class_member : range_characteristic;
      class_name : ee_name;
   WHERE
      WR1:
         SIZEOF(QUERY (np <* class_member\coordinated_characteristic.component_characteristic| NOT ('AP210_ARM_EXTENDED.LENGTH_DATA_ELEMENT' IN TYPEOF(np\characteristic.property_value)))) = 0;
   END_ENTITY;



   ENTITY linear_array_placement_group_component
   SUBTYPE OF (array_placement_group);
      element : SET [1:?] OF assembly_component_placement_link;
      initial_node_positive_x_displacement : length_measure_with_unit;
      terminus_node_positive_x_displacement : length_measure_with_unit;
      location_uncertainty : length_measure_with_unit;
   END_ENTITY;



   ENTITY linear_array_placement_group_component_link;
      precedent_element : linear_array_placement_group_component;
      subsequent_element : linear_array_placement_group_component;
   INVERSE
      referenced_by : rectangular_array_placement_group_component FOR element;
   END_ENTITY;



   ENTITY linear_extension
   SUBTYPE OF (derived_shape_element);
   END_ENTITY;



   ENTITY local_time;
      hour_component : hour_in_day;
      minute_component : OPTIONAL minute_in_hour;
      second_component : OPTIONAL second_in_minute;
      zone : coordinated_universal_time_offset;
   WHERE
      WR1:
         valid_time(SELF);
   END_ENTITY;



   ENTITY located_interconnect_module_thickness_requirement;
      reference_location : axis2_placement;
      maximum_thickness_requirement : length_measure_with_unit;
      minimum_thickness_requirement : length_measure_with_unit;
   INVERSE
      design : SET [1:?] OF interconnect_module_usage_view FOR located_thickness_requirement;
   UNIQUE
      ur1 : design, reference_location;
   END_ENTITY;



   ENTITY loop
   SUPERTYPE OF (ONEOF(vertex_loop, edge_loop, poly_loop))
   SUBTYPE OF (topological_representation_item);
   END_ENTITY;



   ENTITY luminous_flux_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\luminous_flux_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = lumen;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY luminous_intensity_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY luminous_intensity_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 1.00000);
   END_ENTITY;



   ENTITY magnetic_flux_density_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\magnetic_flux_density_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = tesla;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY magnetic_flux_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\magnetic_flux_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = weber;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY manifold_solid_brep
   SUBTYPE OF (solid_model);
      outer : closed_shell;
   END_ENTITY;



   ENTITY manifold_subsurface_shape
   SUBTYPE OF (shape_definition);
      parent_surface : open_shell_or_subsurface;
   WHERE
      WR1:
         SELF :<>: parent_surface;
      WR2:
         SELF\shape_definition.geometric_context :=: parent_surface\shape_definition.geometric_context;
   END_ENTITY;



   ENTITY manifold_subsurface_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' ] * TYPEOF(it)) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ] * TYPEOF(it)) = 1))) > 0;
      WR3:
         SIZEOF(QUERY (mi <* QUERY (it <* items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.MANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR4:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.OPEN_SHELL' IN TYPEOF(cfss)))) = 0;
      WR5:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT (('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(cfss.parent_face_set)) AND (SIZEOF(QUERY (fac <* cfss.parent_face_set.cfs_faces| NOT advanced_face_properties(fac))) = 0) OR (SIZEOF(QUERY (fac <* cfss.parent_face_set.cfs_faces| NOT ('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fac)))) >= 0)))) = 0;
      WR6:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| (SIZEOF(QUERY (fac <* cfss\connected_face_set.cfs_faces| NOT advanced_face_properties(fac))) = 0))) = 0;
      WR7:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (fcs <* cfss\connected_face_set.cfs_faces| ('AP210_ARM_EXTENDED.SUBFACE' IN TYPEOF(fcs)) AND NOT (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fcs.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| NOT (('AP210_ARM_EXTENDED.EDGE_CURVE' IN TYPEOF(oe.edge_element)) OR ('AP210_ARM_EXTENDED.SUBEDGE' IN TYPEOF(oe.edge_element))))) = 0))) = 0))) = 0))) = 0;
      WR8:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (fcs <* cfss\connected_face_set.cfs_faces| ('AP210_ARM_EXTENDED.SUBFACE' IN TYPEOF(fcs)) AND NOT (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fcs.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| NOT (('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(oe.edge_start)) AND ('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(oe.edge_end))))) = 0))) = 0))) = 0))) = 0;
      WR9:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (fcs <* cfss\connected_face_set.cfs_faces| ('AP210_ARM_EXTENDED.SUBFACE' IN TYPEOF(fcs)) AND NOT (SIZEOF(QUERY (bnds <* fcs.bounds| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.EDGE_LOOP', 'AP210_ARM_EXTENDED.VERTEX_LOOP' ] * TYPEOF(bnds.bound)) = 1))) = 0))) = 0))) = 0;
      WR10:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (fcs <* cfss\connected_face_set.cfs_faces| ('AP210_ARM_EXTENDED.SUBFACE' IN TYPEOF(fcs)) AND NOT (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fcs.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.CONIC', 'AP210_ARM_EXTENDED.POLYLINE', 'AP210_ARM_EXTENDED.SURFACE_CURVE', 'AP210_ARM_EXTENDED.B_SPLINE_CURVE' ] * TYPEOF(oe.edge_element\edge_curve.edge_geometry)) = 1))) = 0))) = 0))) = 0))) = 0;
      WR11:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (fcs <* cfss\connected_face_set.cfs_faces| ('AP210_ARM_EXTENDED.SUBFACE' IN TYPEOF(fcs)) AND NOT (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fcs.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| ('AP210_ARM_EXTENDED.SURFACE_CURVE' IN TYPEOF(oe.edge_element\edge_curve.edge_geometry)) AND NOT (SIZEOF(QUERY (sc_ag <* oe.edge_element\edge_curve.edge_geometry\surface_curve.associated_geometry| NOT ('AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(sc_ag)))) = 0))) = 0))) = 0))) = 0))) = 0;
      WR12:
         SIZEOF(QUERY (cfss <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.CONNECTED_FACE_SUB_SET' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (fcs <* cfss\connected_face_set.cfs_faces| ('AP210_ARM_EXTENDED.SUBFACE' IN TYPEOF(fcs)) AND NOT (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fcs.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds.bound\path.edge_list| ('AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(oe.edge_element\edge_curve.edge_geometry)) AND NOT (SIZEOF(oe\oriented_edge.edge_element\edge_curve.edge_geometry\polyline.points) >= 3))) = 0))) = 0))) = 0))) = 0;
   END_ENTITY;



   ENTITY manifold_surface_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' ] * TYPEOF(it)) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ] * TYPEOF(it)) = 1))) > 0;
      WR3:
         SIZEOF(QUERY (mi <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.MANIFOLD_SURFACE_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR4:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (sh <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.OPEN_SHELL', 'AP210_ARM_EXTENDED.ORIENTED_CLOSED_SHELL', 'AP210_ARM_EXTENDED.CLOSED_SHELL' ] * TYPEOF(sh)) = 1))) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.FACE_SURFACE', 'AP210_ARM_EXTENDED.ORIENTED_FACE' ] * TYPEOF(fa)) = 1))) = 0))) = 0))) = 0;
      WR6:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (f_sf <* QUERY (fa <* cfs\connected_face_set.cfs_faces| ('AP210_ARM_EXTENDED.FACE_SURFACE' IN TYPEOF(fa)))| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(f_sf)) OR (SIZEOF([ 'AP210_ARM_EXTENDED.B_SPLINE_SURFACE', 'AP210_ARM_EXTENDED.ELEMENTARY_SURFACE', 'AP210_ARM_EXTENDED.OFFSET_SURFACE', 'AP210_ARM_EXTENDED.SURFACE_REPLICA', 'AP210_ARM_EXTENDED.SWEPT_SURFACE' ] * TYPEOF(f_sf\face_surface.face_geometry)) = 1)))) = 0))) = 0))) = 0;
      WR7:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR msf_surface_check(fa\face_surface.face_geometry)))) = 0))) = 0))) = 0;
      WR8:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (bnds <* fa.bounds| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.EDGE_LOOP', 'AP210_ARM_EXTENDED.VERTEX_LOOP' ] * TYPEOF(bnds.bound)) = 1))) = 0)))) = 0))) = 0))) = 0;
      WR9:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fa.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds\path.edge_list| NOT ('AP210_ARM_EXTENDED.EDGE_CURVE' IN TYPEOF(oe.edge_element)))) = 0))) = 0)))) = 0))) = 0))) = 0;
      WR10:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fa.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe_cv <* QUERY (oe <* elp_fbnds\path.edge_list| ('AP210_ARM_EXTENDED.EDGE_CURVE' IN TYPEOF(oe.edge_element)))| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.B_SPLINE_CURVE', 'AP210_ARM_EXTENDED.CONIC', 'AP210_ARM_EXTENDED.CURVE_REPLICA', 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.OFFSET_CURVE_3D', 'AP210_ARM_EXTENDED.PCURVE', 'AP210_ARM_EXTENDED.POLYLINE', 'AP210_ARM_EXTENDED.SURFACE_CURVE' ] * TYPEOF(oe_cv.edge_element\edge_curve.edge_geometry)) = 1))) = 0))) = 0)))) = 0))) = 0))) = 0;
      WR11:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fa.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds\path.edge_list| NOT msf_curve_check(oe.edge_element\edge_curve.edge_geometry))) = 0))) = 0)))) = 0))) = 0))) = 0;
      WR12:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fa.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds\path.edge_list| NOT (('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(oe.edge_element.edge_start)) AND ('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(oe.edge_element.edge_end))))) = 0))) = 0)))) = 0))) = 0))) = 0;
      WR13:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (elp_fbnds <* QUERY (bnds <* fa.bounds| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF(QUERY (oe <* elp_fbnds\path.edge_list| NOT ((SIZEOF([ 'AP210_ARM_EXTENDED.CARTESIAN_POINT', 'AP210_ARM_EXTENDED.DEGENERATE_PCURVE', 'AP210_ARM_EXTENDED.POINT_ON_CURVE', 'AP210_ARM_EXTENDED.POINT_ON_SURFACE' ] * TYPEOF(oe.edge_element.edge_start\vertex_point.vertex_geometry)) = 1) AND (SIZEOF([ 'AP210_ARM_EXTENDED.CARTESIAN_POINT', 'AP210_ARM_EXTENDED.DEGENERATE_PCURVE', 'AP210_ARM_EXTENDED.POINT_ON_CURVE', 'AP210_ARM_EXTENDED.POINT_ON_SURFACE' ] * TYPEOF(oe.edge_element.edge_end\vertex_point.vertex_geometry)) = 1)))) = 0))) = 0)))) = 0))) = 0))) = 0;
      WR14:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (vlp_fbnds <* QUERY (bnds <* fa.bounds| ('AP210_ARM_EXTENDED.VERTEX_LOOP' IN TYPEOF(bnds.bound)))| NOT ('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(vlp_fbnds\vertex_loop.loop_vertex)))) = 0)))) = 0))) = 0))) = 0;
      WR15:
         SIZEOF(QUERY (sbsm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_SURFACE_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (cfs <* sbsm\shell_based_surface_model.sbsm_boundary| NOT (SIZEOF(QUERY (fa <* cfs\connected_face_set.cfs_faces| NOT (('AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(fa)) OR (SIZEOF(QUERY (vlp_fbnds <* QUERY (bnds <* fa.bounds| ('AP210_ARM_EXTENDED.VERTEX_LOOP' IN TYPEOF(bnds.bound)))| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.CARTESIAN_POINT', 'AP210_ARM_EXTENDED.DEGENERATE_PCURVE', 'AP210_ARM_EXTENDED.POINT_ON_CURVE', 'AP210_ARM_EXTENDED.POINT_ON_SURFACE' ] * TYPEOF(vlp_fbnds\vertex_loop.loop_vertex\vertex_point.vertex_geometry)) = 1))) = 0)))) = 0))) = 0))) = 0;
   END_ENTITY;



   ENTITY mapped_item
   SUBTYPE OF (representation_item);
      mapping_source : representation_map;
      mapping_target : representation_item;
   WHERE
      WR1:
         acyclic_mapped_representation(using_representations(SELF), [ SELF ]);
   END_ENTITY;



   ENTITY marking;
      marked_message : marked_message_select;
      marked_device_shape : view_shape_select;
      marking_material : ee_material;
      placement : axis2_placement;
      message_representation : feature_shape_definition;
      message_representation_text : styled_text;
      marking_specification : ee_specification;
   WHERE
      WR1:
         SIZEOF(QUERY (st <* message_representation\shape_definition.element| (st = message_representation_text))) = 1;
      WR2:
         SIZEOF(QUERY (ap <* marked_device_shape\shape_definition.element| (ap = placement))) = 1;
      WR3:
         SIZEOF(TYPEOF(marked_device_shape) * [ 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_3D_SHAPE', 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_PLANAR_SHAPE' ]) = 1;
   END_ENTITY;



   ENTITY mass_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.MASS_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY mass_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 1.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY material_addition_feature
   SUBTYPE OF (design_intent_modification);
      material_addition_shape : material_addition_feature_template;
   END_ENTITY;



   ENTITY material_addition_feature_template
   SUPERTYPE OF (ONEOF(snowball_template, teardrop_by_angle_template, teardrop_by_length_template))
   SUBTYPE OF (stratum_feature_template);
   WHERE
      WR1:
         NOT (SIZEOF([ 'AP210_ARM_EXTENDED.SNOWBALL_TEMPLATE', 'AP210_ARM_EXTENDED.TEARDROP_BY_ANGLE_TEMPLATE', 'AP210_ARM_EXTENDED.TEARDROP_BY_LENGTH_TEMPLATE' ] * TYPEOF(SELF)) = 1) OR ((SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.PART_TEMPLATE_PLANAR_SHAPE.' + 'SHAPE_CHARACTERIZED_PART_TEMPLATE')) = 0) AND (SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.PART_TEMPLATE_3D_SHAPE.' + 'SHAPE_CHARACTERIZED_PART_TEMPLATE')) = 0)) AND (SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'PART_TEMPLATE_NON_PLANAR_2D_SHAPE.' + 'SHAPE_CHARACTERIZED_PART_TEMPLATE')) = 0);
   END_ENTITY;



   ENTITY material_composition_relationship;
      composition_basis : STRING;
      determination_method : ee_text;
      composition_class : STRING;
      constituent_amount : measure_with_unit;
      related_product : ee_material;
      relating_product : ee_material;
   END_ENTITY;



   ENTITY material_definition
   SUBTYPE OF (ee_product_definition);
      material : ee_material;
   END_ENTITY;



   ENTITY material_electrical_conductivity_requirement_occurrence
   SUBTYPE OF (electrical_requirement_occurrence);
      electrical_conductivity_characteristic : material_conductivity_classification;
   END_ENTITY;



   ENTITY material_removal_feature
   SUPERTYPE OF (filled_area_material_removal_structure)
   SUBTYPE OF (design_intent_modification);
      material_removal_shape : material_removal_feature_template;
   END_ENTITY;



   ENTITY material_removal_feature_template
   SUPERTYPE OF (ONEOF(electrical_isolation_removal_template, thermal_isolation_removal_template))
   SUBTYPE OF (part_template);
      of_stratum_technology : OPTIONAL SET [1:?] OF stratum_technology;
   END_ENTITY;



   ENTITY material_removal_laminate_component
   SUPERTYPE OF (filled_area_material_removal_laminate_component)
   SUBTYPE OF (laminate_component);
      SELF\assembly_component.usage_definition : material_removal_feature_template;
      design_intent : stratum_feature_or_stratum_feature_template_component;
   END_ENTITY;



   ENTITY material_shape_modification
   SUBTYPE OF (design_intent_modification);
   END_ENTITY;



   ENTITY material_specification
   SUPERTYPE OF (surface_finish_specification)
   SUBTYPE OF (ee_specification);
   END_ENTITY;



   ENTITY mating_connector_component;
      definition : mating_connector_part;
      reference_designation : OPTIONAL ee_name;
   INVERSE
      placement_context : mating_connector_placement_relationship FOR placed_connector;
   END_ENTITY;



   ENTITY mating_connector_placement_relationship;
      placed_connector : mating_connector_component;
      interface_context : next_higher_assembly_interface_requirement;
      connector_placement : axis2_placement;
   END_ENTITY;



   ENTITY mating_connector_termination;
      definition : packaged_or_printed_terminal;
      accessed_connector : mating_connector_component;
      name : ee_name;
      signal_definition : OPTIONAL ee_requirement_occurrence;
   UNIQUE
      ur1 : definition, accessed_connector;
   END_ENTITY;



   ENTITY maximum_dimension_representation
   SUBTYPE OF (singular_dimension_representation);
   END_ENTITY;



   ENTITY maximum_tolerance_characteristic
   SUBTYPE OF (tolerance_characteristic);
      SELF\coordinated_characteristic.component_characteristic : SET [1:1] OF numeric_parameter;
   END_ENTITY;



   ENTITY measure_qualification;
      name : text;
      description : text;
      qualified_measure : measure_with_unit;
      qualifiers : SET [1:?] OF value_qualifier;
   END_ENTITY;



   ENTITY measure_with_unit
   SUPERTYPE OF (ONEOF(length_measure_with_unit, mass_measure_with_unit, time_measure_with_unit, electric_current_measure_with_unit, thermodynamic_temperature_measure_with_unit, celsius_temperature_measure_with_unit, amount_of_substance_measure_with_unit, luminous_intensity_measure_with_unit, plane_angle_measure_with_unit, solid_angle_measure_with_unit, area_measure_with_unit, volume_measure_with_unit, ratio_measure_with_unit));
      value_component : measure_value;
      unit_component : unit;
   WHERE
      WR1:
         valid_units(SELF);
   END_ENTITY;



   ENTITY mechanical_requirement_occurrence
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY minimally_defined_bare_die_terminal
   SUPERTYPE OF (guided_wave_bare_die_terminal ANDOR bare_die_terminal)
   SUBTYPE OF (part_terminal);
      SELF\part_feature.associated_definition : bare_die;
   END_ENTITY;



   ENTITY minimally_defined_component_terminal
   SUBTYPE OF (physical_component_terminal);
      SELF\component_feature.definition : part_terminal_external_reference;
   END_ENTITY;



   ENTITY minimally_defined_connector
   SUBTYPE OF (packaged_part);
   INVERSE
      terminal : SET [1:?] OF part_feature FOR associated_definition;
   WHERE
      WR1:
         SIZEOF(QUERY (t <* SELF\packaged_part.access_mechanisms| ('AP210_ARM_EXTENDED.PACKAGED_PART_INTERFACE_TERMINAL' IN TYPEOF(t)))) >= 0;
      WR2:
         NOT EXISTS(SELF\packaged_part.implemented_function);
      WR3:
         NOT EXISTS(SELF\packaged_part.potting_compound);
      WR4:
         NOT ('AP210_ARM_EXTENDED.ALTERED_PACKAGED_PART' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY minimum_dimension_representation
   SUBTYPE OF (singular_dimension_representation);
   END_ENTITY;



   ENTITY minimum_tolerance_characteristic
   SUBTYPE OF (tolerance_characteristic);
      SELF\coordinated_characteristic.component_characteristic : SET [1:1] OF numeric_parameter;
   END_ENTITY;



   ENTITY model_parameter
   SUPERTYPE OF (ONEOF(datum_difference_based_model_parameter, schema_based_model_parameter) ANDOR ONEOF(analytical_model_parameter, category_model_parameter, rule_function_domain_parameter, rule_function_range_parameter));
      parameter_id : ee_name;
      type_name : STRING;
      unit_of_measure : OPTIONAL STRING;
      reference_document : ee_document;
      valid_range : OPTIONAL SET [1:?] OF coordinated_characteristic;
      default_value : OPTIONAL scalar_or_coordinated_characteristics;
   END_ENTITY;



   ENTITY model_parameter_relationship;
      model_parameter_1 : model_parameter;
      model_parameter_2 : model_parameter;
      model_parameter_relationship_approval : ee_approval;
   WHERE
      WR1:
         model_parameter_1 <> model_parameter_2;
   END_ENTITY;



   ENTITY mounting_restriction_area
   SUBTYPE OF (non_feature_shape_element);
      mounting_surface : interconnect_module_component_surface_feature;
      SELF\non_feature_shape_element.scope : assembly_module;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.CSG_2D_SHAPE' IN TYPEOF(SELF\non_feature_shape_element.element_shape);
   END_ENTITY;



   ENTITY mounting_restriction_volume
   SUBTYPE OF (non_feature_shape_element);
      mounting_surface : interconnect_module_component_surface_feature;
      SELF\non_feature_shape_element.scope : assembly_module;
   INVERSE
      volume : non_feature_shape_definition FOR associated_element;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.BOUND_VOLUME_SHAPE' IN TYPEOF(volume);
   END_ENTITY;



   ENTITY movable_packaged_component_join_terminal
   SUBTYPE OF (packaged_component_join_terminal);
      maximum_wire_terminal_length : length_measure_with_unit;
      minimum_wire_terminal_length : length_measure_with_unit;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.WIRE_TERMINAL' IN TYPEOF(SELF\component_feature.definition\packaged_part_terminal.terminal_of_package);
   END_ENTITY;



   ENTITY multi_layer_material_removal_laminate_component
   SUBTYPE OF (material_removal_laminate_component);
      derived_layer_geometry : layer;
   END_ENTITY;



   ENTITY multi_layer_stratum_feature
   SUBTYPE OF (stratum_feature);
      derived_layer_geometry : layer;
   END_ENTITY;



   ENTITY multi_layer_stratum_feature_template_component
   SUBTYPE OF (stratum_feature_template_component);
      derived_layer_geometry : layer;
   END_ENTITY;



   ENTITY name_attribute;
      attribute_value : label;
      named_item : name_attribute_select;
   END_ENTITY;



   ENTITY named_unit
   SUPERTYPE OF (ONEOF(si_unit, conversion_based_unit, context_dependent_unit) ANDOR ONEOF(length_unit, mass_unit, time_unit, electric_current_unit, thermodynamic_temperature_unit, amount_of_substance_unit, luminous_intensity_unit, plane_angle_unit, solid_angle_unit, area_unit, volume_unit, ratio_unit));
      dimensions : dimensional_exponents;
   END_ENTITY;



   ENTITY next_higher_assembly_interface_requirement;
      shape : bound_volume_shape;
      version_of_next_higher_assembly : ee_product_version;
   END_ENTITY;



   ENTITY next_higher_assembly_relationship
   SUBTYPE OF (assembly_composition_relationship);
      reference_designation : OPTIONAL ee_name;
      quantity : OPTIONAL measure_with_unit;
   INVERSE
      assembly_position_3d : SET [0:1] OF component_assembly_3d_position FOR component;
      assembly_position_2d : SET [0:1] OF component_assembly_2d_position FOR component;
   UNIQUE
      ur1 : reference_designation, SELF\assembly_composition_relationship.assembly;
   WHERE
      WR1:
         EXISTS(reference_designation) XOR EXISTS(quantity);
      WR2:
         NOT ('AP210_ARM_EXTENDED.PHYSICAL_UNIT_NETWORK_DEFINITION' IN TYPEOF(SELF\assembly_composition_relationship.assembly)) OR NOT EXISTS(quantity);
      WR3:
         'AP210_ARM_EXTENDED.ASSEMBLY_COMPONENT' IN TYPEOF(SELF\assembly_composition_relationship.component);
   END_ENTITY;



   ENTITY non_conductive_base_blind_via
   SUBTYPE OF (blind_via);
   END_ENTITY;



   ENTITY non_conductive_cross_section_template
   SUBTYPE OF (part_template);
      template_technology : OPTIONAL SET [1:?] OF stratum_technology;
      nominal_width : length_measure_with_unit;
   END_ENTITY;



   ENTITY non_feature_shape_composition_relationship
   SUBTYPE OF (geometric_representation_relationship);
      related_feature_shape_placement : OPTIONAL axis2_placement_or_cto2d;
   DERIVE
      related_feature_shape : non_feature_shape_definition := SELF\geometric_representation_relationship.shape_1;
      resultant_feature_shape : non_feature_shape_definition := SELF\geometric_representation_relationship.shape_2;
   WHERE
      WR1:
         EXISTS(related_feature_shape_placement) OR (related_feature_shape.geometric_context :=: resultant_feature_shape.geometric_context);
   END_ENTITY;



   ENTITY non_feature_shape_definition
   SUPERTYPE OF (ONEOF(datum_reference_frame_shape_definition, pre_defined_datum_axis_3d_symbol, pre_defined_datum_plane_3d_symbol, pre_defined_parallel_datum_axis_2d_symbol, pre_defined_perpendicular_datum_axis_2d_symbol, pre_defined_perpendicular_datum_plane_2d_symbol, view_level_non_feature_shape_definition))
   SUBTYPE OF (shape_definition);
      associated_element : non_feature_shape_element;
      model_shape : OPTIONAL feature_shape_definition;
   END_ENTITY;



   ENTITY non_feature_shape_element
   SUPERTYPE OF (ONEOF(datum_reference_frame, datum_system, derived_shape_element, directed_axis, positional_boundary, positional_boundary_member, tolerance_zone, tolerance_zone_boundary, tolerance_zone_boundary_member, viewing_plane, seating_plane, template_material_cross_section_boundary, interconnect_module_constraint_region, reference_graphic_registration_mark, mounting_restriction_area, mounting_restriction_volume) ANDOR datum)
   SUBTYPE OF (shape_element);
      scope : ee_product_definition_with_annotation_elements;
   INVERSE
      element_shape : SET [0:?] OF non_feature_shape_definition FOR associated_element;
      associated_usage_concept : SET [0:?] OF usage_concept_usage_relationship FOR associated_usage;
   UNIQUE
      ur1 : SELF\shape_element.name, scope;
   WHERE
      WR1:
         NOT (SIZEOF(associated_usage_concept) > 0) OR (SIZEOF(element_shape) > 0);
   END_ENTITY;



   ENTITY non_feature_shape_element_relationship
   SUBTYPE OF (shape_element_relationship);
      SELF\shape_element_relationship.related_shape_element : non_feature_shape_element;
      SELF\shape_element_relationship.relating_shape_element : non_feature_shape_element;
   UNIQUE
      ur1 : SELF\shape_element_relationship.related_shape_element, SELF\shape_element_relationship.relating_shape_element;
   END_ENTITY;



   ENTITY non_functional_land
   SUPERTYPE OF (ONEOF(via_dependent_non_functional_land, component_termination_passage_dependent_non_functional_land, contact_size_dependent_non_functional_land, component_termination_passage_and_contact_size_dependent_non_functional_land, unsupported_passage_dependent_non_functional_land, via_and_contact_size_dependent_non_functional_land))
   SUBTYPE OF (stratum_feature_template_component);
      alternate_land_definition : OPTIONAL land_physical_template;
      SELF\assembly_component.usage_definition : land_physical_template;
   INVERSE
      access_mechanism : SET [1:?] OF non_functional_land_join_terminal FOR associated_component;
   END_ENTITY;



   ENTITY non_functional_land_interface_terminal
   SUBTYPE OF (laminate_component_interface_terminal);
      SELF\component_feature.definition : land_template_interface_terminal;
      SELF\component_feature.associated_component : non_functional_land;
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.CONTACT_SIZE_DEPENDENT_NON_FUNCTIONAL_LAND', 'AP210_ARM_EXTENDED.COMPONENT_TERMINATION_PASSAGE_AND_CONTACT_SIZE_DEPENDENT_NON_FUNCTIONAL_LAND', 'AP210_ARM_EXTENDED.VIA_AND_CONTACT_SIZE_DEPENDENT_NON_FUNCTIONAL_LAND' ] * TYPEOF(SELF\component_feature.associated_component)) = 1;
   END_ENTITY;



   ENTITY non_functional_land_join_terminal
   SUBTYPE OF (laminate_component_join_terminal);
      SELF\component_feature.definition : land_template_join_terminal;
      SELF\component_feature.associated_component : non_functional_land;
   END_ENTITY;



   ENTITY numeric_parameter
   SUBTYPE OF (characteristic);
      SELF\characteristic.property_value : measure_with_unit;
   END_ENTITY;



   ENTITY offset_curve_2d
   SUBTYPE OF (curve);
      basis_curve : curve;
      distance : length_measure;
      self_intersect : LOGICAL;
   WHERE
      WR1:
         basis_curve.dim = 2;
   END_ENTITY;



   ENTITY offset_curve_3d
   SUBTYPE OF (curve);
      basis_curve : curve;
      distance : length_measure;
      self_intersect : LOGICAL;
      ref_direction : direction;
   WHERE
      WR1:
         (basis_curve.dim = 3) AND (ref_direction.dim = 3);
   END_ENTITY;



   ENTITY offset_surface
   SUBTYPE OF (surface);
      basis_surface : surface;
      distance : length_measure;
      self_intersect : LOGICAL;
   END_ENTITY;



   ENTITY open_shell
   SUBTYPE OF (connected_face_set);
   END_ENTITY;



   ENTITY open_shell_based_surface
   SUPERTYPE OF (ONEOF(stratum_average_surface_shape, stratum_surface_shape, design_intent_modification_non_planar_2d_shape, part_template_non_planar_2d_shape, stratum_feature_non_planar_2d_shape))
   SUBTYPE OF (shape_definition);
   END_ENTITY;



   ENTITY operational_requirement_occurrence_relationship;
      relationship_type : relationship_operation;
      relating_requirement_occurrence : requirement_definition;
      related_requirement_occurrence : requirement_definition;
   WHERE
      WR1:
         relating_requirement_occurrence :<>: related_requirement_occurrence;
   END_ENTITY;



   ENTITY opposing_boundary_set_size_characteristic
   SUBTYPE OF (boundary_size_characteristic);
      sized_boundary_set : tolerance_zone_opposing_boundary_set;
   END_ENTITY;



   ENTITY ordinal_date
   SUBTYPE OF (date);
      day_component : day_in_year_number;
   WHERE
      WR1:
         NOT leap_year(SELF.year_component) AND ((1 <= day_component) AND (day_component <= 365)) OR leap_year(SELF.year_component) AND ((1 <= day_component) AND (day_component <= 366));
   END_ENTITY;



   ENTITY organization;
      id : OPTIONAL identifier;
      name : label;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY organizational_address
   SUBTYPE OF (address);
      organizations : SET [1:?] OF organization;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY oriented_closed_shell
   SUBTYPE OF (closed_shell);
      closed_shell_element : closed_shell;
      orientation : BOOLEAN;
   DERIVE
      SELF\connected_face_set.cfs_faces : SET [1:?] OF face := conditional_reverse(SELF.orientation, SELF.closed_shell_element.cfs_faces);
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.ORIENTED_CLOSED_SHELL' IN TYPEOF(SELF.closed_shell_element));
   END_ENTITY;



   ENTITY oriented_edge
   SUBTYPE OF (edge);
      edge_element : edge;
      orientation : BOOLEAN;
   DERIVE
      SELF\edge.edge_start : vertex := boolean_choose(SELF.orientation, SELF.edge_element.edge_start, SELF.edge_element.edge_end);
      SELF\edge.edge_end : vertex := boolean_choose(SELF.orientation, SELF.edge_element.edge_end, SELF.edge_element.edge_start);
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.ORIENTED_EDGE' IN TYPEOF(SELF.edge_element));
   END_ENTITY;



   ENTITY oriented_face
   SUBTYPE OF (face);
      face_element : face;
      orientation : BOOLEAN;
   DERIVE
      SELF\face.bounds : SET [1:?] OF face_bound := conditional_reverse(SELF.orientation, SELF.face_element.bounds);
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.ORIENTED_FACE' IN TYPEOF(SELF.face_element));
   END_ENTITY;



   ENTITY oriented_open_shell
   SUBTYPE OF (open_shell);
      open_shell_element : open_shell;
      orientation : BOOLEAN;
   DERIVE
      SELF\connected_face_set.cfs_faces : SET [1:?] OF face := conditional_reverse(SELF.orientation, SELF.open_shell_element.cfs_faces);
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.ORIENTED_OPEN_SHELL' IN TYPEOF(SELF.open_shell_element));
   END_ENTITY;



   ENTITY oriented_path
   SUBTYPE OF (path);
      path_element : path;
      orientation : BOOLEAN;
   DERIVE
      SELF\path.edge_list : LIST [1:?] OF UNIQUE oriented_edge := conditional_reverse(SELF.orientation, SELF.path_element.edge_list);
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.ORIENTED_PATH' IN TYPEOF(SELF.path_element));
   END_ENTITY;



   ENTITY origin
   SUBTYPE OF (placement);
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.axis2_placement_2d', 'AP210_ARM_EXTENDED.axis2_placement_3d' ] * TYPEOF(SELF)) = 1;
   END_ENTITY;



   ENTITY outer_boundary_curve
   SUBTYPE OF (boundary_curve);
   END_ENTITY;



   ENTITY owner_assignment;
      owned_item : SET [1:?] OF owned_design_object;
      assigned_owner : person_and_organization;
   END_ENTITY;



   ENTITY package
   SUPERTYPE OF (altered_package)
   SUBTYPE OF (physical_unit_usage_view);
      mounting_technology : mounting_technology_type;
      maximum_seating_plane_installation_offset : OPTIONAL length_measure_with_unit;
      surface_mount_lead_form : OPTIONAL lead_form_type;
      nominal_mounting_lead_pitch : OPTIONAL length_measure_with_unit;
      nominal_mounting_lead_span : OPTIONAL length_measure_with_unit;
      maximum_body_height_above_seating_plane : length_measure_with_unit;
      maximum_body_height_below_seating_plane : OPTIONAL length_measure_with_unit;
      maximum_body_clearance_above_seating_plane : OPTIONAL length_measure_with_unit;
      maximum_body_clearance_below_seating_plane : OPTIONAL length_measure_with_unit;
      minimum_body_clearance_above_seating_plane : OPTIONAL length_measure_with_unit;
      minimum_body_clearance_below_seating_plane : OPTIONAL length_measure_with_unit;
      maximum_lead_length_below_seating_plane : OPTIONAL length_measure_with_unit;
      least_lead_length_below_seating_plane : OPTIONAL length_measure_with_unit;
   DERIVE
      maximum_package_total_vertical_extent : length_measure_with_unit := max_data_element(add_data_element(maximum_body_height_above_seating_plane, maximum_body_height_below_seating_plane), add_data_element(maximum_body_height_above_seating_plane, maximum_lead_length_below_seating_plane));
      cutout_required : BOOLEAN := maximum_body_height_below_seating_plane\measure_with_unit.measure_value > 0.00000;
      maximum_installed_height : length_measure_with_unit := add_data_element(maximum_body_height_above_seating_plane, maximum_seating_plane_installation_offset);
   INVERSE
      body : SET [0:1] OF package_body FOR associated_definition;
      package_seating_plane : non_feature_shape_element FOR scope;
      interface_plane : SET [0:?] OF non_feature_shape_element FOR scope;
      package_accesses : SET [0:?] OF package_terminal FOR associated_definition;
      package_polarity_indication : SET [0:1] OF polarity_indication_feature FOR associated_definition;
      package_primary_orientation_feature : SET [0:1] OF primary_orientation_feature FOR associated_definition;
      package_secondary_orientation_feature : SET [0:1] OF secondary_orientation_feature FOR associated_definition;
      package_tertiary_orientation_feature : SET [0:1] OF tertiary_orientation_feature FOR associated_definition;
      of_datum_reference_frame : SET [0:?] OF non_feature_shape_element FOR scope;
   WHERE
      WR1:
         NOT (SIZEOF(package_primary_orientation_feature) > 0) OR ('AP210_ARM_EXTENDED.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(package_primary_orientation_feature[1]));
      WR2:
         NOT (SIZEOF(package_secondary_orientation_feature) > 0) OR ('AP210_ARM_EXTENDED.SECONDARY_ORIENTATION_FEATURE' IN TYPEOF(package_secondary_orientation_feature[1]));
      WR3:
         NOT (SIZEOF(package_tertiary_orientation_feature) > 0) OR ('AP210_ARM_EXTENDED.TERTIARY_ORIENTATION_FEATURE' IN TYPEOF(package_tertiary_orientation_feature[1]));
      WR4:
         'AP210_ARM_EXTENDED.SEATING_PLANE' IN TYPEOF(package_seating_plane);
      WR5:
         'AP210_ARM_EXTENDED.SEATING_PLANE' IN TYPEOF(interface_plane);
      WR6:
         NOT (mounting_technology = surface_mount) OR NOT (EXISTS(maximum_lead_length_below_seating_plane) OR EXISTS(least_lead_length_below_seating_plane));
      WR7:
         NOT EXISTS(maximum_lead_length_below_seating_plane) OR (maximum_lead_length_below_seating_plane\measure_with_unit.measure_value > 0.00000);
      WR8:
         NOT EXISTS(least_lead_length_below_seating_plane) OR (least_lead_length_below_seating_plane\measure_with_unit.measure_value > 0.00000);
      WR9:
         NOT (mounting_technology = surface_mount) AND NOT EXISTS(surface_mount_lead_form) OR (mounting_technology = surface_mount) AND EXISTS(surface_mount_lead_form);
      WR10:
         package_seating_plane\shape_element.name = 'package seating plane';
      WR11:
         NOT (SIZEOF(interface_plane) > 0) OR (SIZEOF(QUERY (ip <* interface_plane| NOT (ip\shape_element.name = 'interface plane'))) = 0);
      WR12:
         NOT (SIZEOF(interface_plane) > 0) OR (SIZEOF(QUERY (ip <* interface_plane| NOT (package_seating_plane <> ip))) = 0);
      WR13:
         SIZEOF(QUERY (prpc <* USEDIN(SELF\ee_product_definition.version.versioned_item, 'AP210_ARM_EXTENDED.EE_PRODUCT_RELATED_PRODUCT_CATEGORY.OF_PRODUCT')| (prpc.name = 'package'))) > 0;
      WR14:
         NOT (SIZEOF(of_datum_reference_frame) > 0) OR (SIZEOF(QUERY (odrf <* of_datum_reference_frame| NOT ('AP210_ARM_EXTENDED.DATUM_REFERENCE_FRAME' IN TYPEOF(odrf)))) = 0);
      WR15:
         SIZEOF(QUERY (pa <* package_accesses| ('AP210_ARM_EXTENDED.PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(pa)))) = 1;
   END_ENTITY;



   ENTITY package_body
   SUBTYPE OF (part_feature);
      body_material : ee_material;
      SELF\part_feature.associated_definition : package;
   WHERE
      WR1:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY')| ('AP210_ARM_EXTENDED.' + 'PACKAGE_BODY_TOP_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY')| ('AP210_ARM_EXTENDED.' + 'PACKAGE_BODY_BOTTOM_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3:
         SIZEOF(QUERY (pf <* USEDIN(SELF, 'AP210_ARM_EXTENDED.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY')| ('AP210_ARM_EXTENDED.' + 'PACKAGE_BODY_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
   END_ENTITY;



   ENTITY package_body_bottom_surface
   SUBTYPE OF (package_body_surface);
   END_ENTITY;



   ENTITY package_body_edge_segment_surface
   SUBTYPE OF (package_body_surface);
      composed_surface : package_body_edge_surface;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
   WHERE
      WR1:
         start_vertex :<>: end_vertex;
   END_ENTITY;



   ENTITY package_body_edge_surface
   SUBTYPE OF (package_body_surface);
   END_ENTITY;



   ENTITY package_body_surface
   ABSTRACT SUPERTYPE OF (ONEOF(package_body_bottom_surface, package_body_top_surface, package_body_edge_segment_surface, package_body_edge_surface))
   SUBTYPE OF (part_feature);
      associated_package_body : package_body;
   END_ENTITY;



   ENTITY package_body_top_surface
   SUBTYPE OF (package_body_surface);
   END_ENTITY;



   ENTITY package_external_reference;
      design_owner : STRING;
      part_number : STRING;
      revision_code : STRING;
      product_definition_id : STRING;
   END_ENTITY;



   ENTITY package_terminal
   SUPERTYPE OF (((altered_package_terminal ANDOR guided_wave_terminal) ANDOR wire_terminal) ANDOR primary_reference_terminal)
   SUBTYPE OF (part_feature);
      SELF\part_feature.associated_definition : package;
      external_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
      internal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
      seating_plane_intersection : seating_plane_intersection_type;
      terminal_surface_material : material_definition;
      model_representation : OPTIONAL SET [1:?] OF analytical_representation;
      terminal_characteristic : OPTIONAL SET [1:?] OF characteristic;
      terminal_core_material : OPTIONAL material_definition;
      minimum_terminal_diametrical_extent : OPTIONAL length_measure_with_unit;
      maximum_terminal_diametrical_extent : OPTIONAL length_measure_with_unit;
      seating_plane_zone : OPTIONAL connection_zone_interface_plane_relationship;
   DERIVE
      mates_with_substrate : BOOLEAN := EXISTS(seating_plane_zone) AND (associated_definition.package_seating_plane :=: seating_plane_zone.interface_plane);
   INVERSE
      feature_shape : SET [1:?] OF usage_concept_usage_relationship FOR associated_usage;
   WHERE
      WR1:
         NOT EXISTS(seating_plane_zone) OR (SIZEOF(QUERY (cz <* external_connection_zone| (seating_plane_zone.derived_zone = cz))) = 1);
      WR2:
         NOT EXISTS(seating_plane_zone) OR (SIZEOF(QUERY (cz <* external_connection_zone| (seating_plane_zone.mating_zone = cz))) = 1);
      WR3:
         NOT EXISTS(seating_plane_zone) OR ((associated_definition.package_seating_plane :=: seating_plane_zone.interface_plane) OR (associated_definition.interface_plane[1] :=: seating_plane_zone.interface_plane));
      WR4:
         NOT EXISTS(seating_plane_zone) OR ((seating_plane_intersection = surface_intersection) OR (seating_plane_intersection = through_intersection));
      WR5:
         NOT ((seating_plane_intersection = does_not_intersect) AND EXISTS(seating_plane_zone));
   END_ENTITY;



   ENTITY package_terminal_external_reference;
      associated_definition : package_external_reference;
      name : STRING;
   UNIQUE
      ur1 : associated_definition, name;
   END_ENTITY;



   ENTITY package_terminal_occurrence;
      definition : package_terminal;
      associated_component : packaged_component;
   END_ENTITY;



   ENTITY package_terminal_surface_constituent_relationship
   SUBTYPE OF (shape_element_constituent_relationship);
      SELF\shape_element_relationship.relating_shape_element : package_body_surface;
      SELF\shape_element_relationship.related_shape_element : package_terminal;
   END_ENTITY;



   ENTITY packaged_component
   SUPERTYPE OF (packaged_connector_component)
   SUBTYPE OF (physical_component);
      SELF\assembly_component.usage_definition : packaged_part;
      selected_package_alternate : OPTIONAL altered_package;
   INVERSE
      access_mechanism : SET [1:?] OF packaged_component_join_terminal FOR associated_component;
   END_ENTITY;



   ENTITY packaged_component_join_terminal
   SUPERTYPE OF (movable_packaged_component_join_terminal)
   SUBTYPE OF (physical_component_terminal);
      SELF\component_feature.definition : packaged_part_join_terminal;
      SELF\component_feature.associated_component : packaged_component;
   END_ENTITY;



   ENTITY packaged_connector
   SUBTYPE OF (packaged_part);
   INVERSE
      characterized_connector_terminal_relationship : SET [1:?] OF packaged_connector_terminal_relationship FOR connector;
   END_ENTITY;



   ENTITY packaged_connector_component
   SUBTYPE OF (interface_component, packaged_component);
      SELF\assembly_component.usage_definition : packaged_connector;
   INVERSE
      interface_access_mechanism : SET [1:?] OF packaged_connector_component_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY packaged_connector_component_interface_terminal
   SUBTYPE OF (component_interface_terminal);
      SELF\component_feature.definition : packaged_part_interface_terminal;
      SELF\component_feature.associated_component : packaged_connector_component;
   END_ENTITY;



   ENTITY packaged_connector_terminal_relationship;
      connector : packaged_connector;
      join_terminal : packaged_part_join_terminal;
      interface_terminal : packaged_part_interface_terminal;
   UNIQUE
      ur1 : join_terminal, connector;
      ur2 : interface_terminal, connector;
   END_ENTITY;



   ENTITY packaged_part
   SUPERTYPE OF (ONEOF(minimally_defined_connector, packaged_connector) ANDOR altered_packaged_part)
   SUBTYPE OF (physical_unit_usage_view);
      used_package : SET [1:?] OF package_or_package_external_reference;
      potting_compound : OPTIONAL ee_material;
      implemented_function : OPTIONAL functional_unit_usage_view;
   INVERSE
      access_mechanisms : SET [0:?] OF packaged_part_terminal FOR associated_definition;
   WHERE
      WR1:
         NOT (EXISTS(implemented_function) XOR (SIZEOF(access_mechanisms) > 0));
      WR2:
         single_package_version(SELF);
   END_ENTITY;



   ENTITY packaged_part_interface_terminal
   SUBTYPE OF (packaged_part_terminal);
   INVERSE
      external_connector_function : SET [0:?] OF packaged_connector_terminal_relationship FOR interface_terminal;
   END_ENTITY;



   ENTITY packaged_part_join_terminal
   SUBTYPE OF (packaged_part_terminal);
   INVERSE
      internal_connector_function : SET [0:1] OF packaged_connector_terminal_relationship FOR join_terminal;
   END_ENTITY;



   ENTITY packaged_part_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(packaged_part_interface_terminal, packaged_part_join_terminal))
   SUBTYPE OF (part_terminal);
      terminal_of_package : SET [1:?] OF package_terminal_or_package_terminal_external_reference;
      SELF\part_feature.associated_definition : packaged_part;
   WHERE
      WR1:
         disjoint_package_terminals(SELF);
      WR2:
         NOT EXISTS(SELF\part_feature.precedent_feature);
   END_ENTITY;



   ENTITY padstack_definition
   SUPERTYPE OF (ONEOF(design_layer_type_specific_padstack_definition, stratum_type_independent_padstack_definition) ANDOR passage_padstack_definition)
   SUBTYPE OF (ee_product_definition);
      reference_implementation : reference_packaged_part_interconnect_implementation;
      padstack_location : padstack_arrangement;
   INVERSE
      shape : padstack_definition_shape FOR shape_characterized_padstack_definition;
      template : SET [1:?] OF part_template_location_in_padstack_definition FOR padstack;
   WHERE
      WR1:
         SIZEOF(QUERY (prpc <* USEDIN(SELF\ee_product_definition.version.versioned_item, 'AP210_ARM_EXTENDED.EE_PRODUCT_RELATED_PRODUCT_CATEGORY.OF_PRODUCT')| (prpc.name = 'template model'))) >= 0;
   END_ENTITY;



   ENTITY padstack_definition_shape
   SUBTYPE OF (planar_projected_shape);
      shape_characterized_padstack_definition : padstack_definition;
      shape_environment : OPTIONAL application_environment;
      shape_material_condition : material_condition;
   END_ENTITY;



   ENTITY padstack_location_in_footprint_definition;
      padstack : padstack_definition;
      footprint : footprint_definition;
      reference_package_terminal : package_terminal_or_printed_part_template_terminal;
   INVERSE
      transform : padstack_location_in_footprint_definition_transform FOR reference_location;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PART_FEATURE' IN TYPEOF(reference_package_terminal)) OR reference_package_terminal\part_feature.associated_definition :=: footprint.reference_package;
      WR2:
         NOT ('AP210_ARM_EXTENDED.PRINTED_PART_TEMPLATE_TERMINAL' IN TYPEOF(reference_package_terminal)) OR reference_package_terminal.associated_definition :=: footprint.reference_package;
      WR3:
         NOT ('AP210_ARM_EXTENDED.PRINTED_CONNECTOR_TEMPLATE' IN TYPEOF(footprint.reference_package)) OR ('AP210_ARM_EXTENDED.PRINTED_PART_TEMPLATE_INTERFACE_TERMINAL' IN TYPEOF(reference_package_terminal));
   END_ENTITY;



   ENTITY padstack_location_in_footprint_definition_transform;
      padstack_shape : padstack_definition_shape;
      footprint_shape : footprint_definition_shape;
      reference_location : padstack_location_in_footprint_definition;
      transform : axis2_placement_2d;
   END_ENTITY;



   ENTITY padstack_occurrence
   SUBTYPE OF (assembly_group_component);
      SELF\assembly_component.usage_definition : padstack_definition;
   INVERSE
      component : SET [1:?] OF padstack_occurrence_sub_assembly_relationship FOR relating_component;
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) * [ 'AP210_ARM_EXTENDED.PRINTED_COMPONENT', 'AP210_ARM_EXTENDED.LAMINATE_COMPONENT', 'AP210_ARM_EXTENDED.PHYSICAL_COMPONENT' ]) = 0;
   END_ENTITY;



   ENTITY padstack_occurrence_sub_assembly_relationship;
      related_component : laminate_component;
      relating_component : padstack_occurrence;
      sub_assembly_reference_designation : part_template_location_in_padstack_definition;
   UNIQUE
      ur1 : sub_assembly_reference_designation, relating_component, related_component;
   END_ENTITY;



   ENTITY parabola
   SUBTYPE OF (conic);
      focal_dist : length_measure;
   WHERE
      WR1:
         focal_dist <> 0.00000;
   END_ENTITY;



   ENTITY parallel_shape_element_relationship
   SUBTYPE OF (shape_element_relationship);
   END_ENTITY;



   ENTITY parallelism_tolerance
   SUBTYPE OF (geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY parameter_assignment;
      parameter_value : scalar_or_coordinated_characteristics;
      assigned_parameter : model_parameter;
   END_ENTITY;



   ENTITY parameter_assignment_override;
      overridden_parameter_assignment : parameter_assignment;
      overriding_parameter_assignment : parameter_assignment;
   END_ENTITY;



   ENTITY parametric_representation_context
   SUBTYPE OF (representation_context);
   END_ENTITY;



   ENTITY part_array_feature
   ABSTRACT SUPERTYPE OF (ONEOF(part_linear_array_feature, part_rectangular_array_feature))
   SUBTYPE OF (part_group_feature);
   END_ENTITY;



   ENTITY part_connected_terminals_definition;
      associated_definition : physical_unit_usage_view;
      connected_terminals : SET [2:?] OF part_terminal;
      name : ee_name;
   UNIQUE
      ur1 : name, associated_definition;
   WHERE
      WR1:
         SIZEOF(QUERY (ct <* connected_terminals| NOT (associated_definition = ct\part_feature.associated_definition))) = 0;
   END_ENTITY;



   ENTITY part_device;
      defined_packaged_part : packaged_part;
      included_device : bare_die;
      item_identification : ee_name;
      bonding_agent : OPTIONAL ee_material;
   INVERSE
      device_3d_position : SET [0:1] OF device_3d_position FOR placed_device;
      device_2d_position : SET [0:1] OF device_2d_position FOR placed_device;
   UNIQUE
      ur1 : defined_packaged_part, item_identification;
   END_ENTITY;



   ENTITY part_device_terminal;
      used_bare_die_terminal : minimally_defined_bare_die_terminal;
      terminated_device : part_device;
   UNIQUE
      ur1 : used_bare_die_terminal, terminated_device;
   END_ENTITY;



   ENTITY part_device_terminal_model_port_assignment;
      internal_connection : part_device_terminal;
      internal_port : analytical_model_port;
   UNIQUE
      ur1 : internal_connection, internal_port;
   END_ENTITY;



   ENTITY part_feature
   SUPERTYPE OF ((((((((((((part_group_feature ANDOR ONEOF(primary_orientation_feature, secondary_orientation_feature, tertiary_orientation_feature, package_body)) ANDOR part_tooling_feature) ANDOR thermal_feature) ANDOR part_interface_access_feature) ANDOR part_mating_feature) ANDOR part_mounting_feature) ANDOR part_terminal) ANDOR interconnect_module_surface_feature) ANDOR package_terminal) ANDOR package_body_surface) ANDOR polarity_indication_feature) ANDOR functional_orientation_feature)
   SUBTYPE OF (physical_feature_or_part_template);
      associated_definition : physical_unit_usage_view;
      material_state_change : OPTIONAL material_state_change_enumeration;
      precedent_feature : OPTIONAL part_feature;
      SELF\shape_element.name : ee_name;
   INVERSE
      design_view_definition_stratum_concept : SET [0:1] OF stratum_concept_to_physical_usage_view_assignment FOR defined_part_feature;
      design_view_definition_component_feature : SET [0:1] OF component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
      feature_shape : SET [0:?] OF usage_concept_usage_relationship FOR associated_usage;
   UNIQUE
      ur1 : SELF\shape_element.name, associated_definition;
   END_ENTITY;



   ENTITY part_feature_make_from_relationship;
      associated_make_from : engineering_make_from;
      reusable_feature : part_feature;
      resultant_feature : part_feature;
   UNIQUE
      ur1 : reusable_feature, resultant_feature;
   WHERE
      WR1:
         reusable_feature :<>: resultant_feature;
      WR2:
         reusable_feature.associated_definition :<>: resultant_feature.associated_definition;
   END_ENTITY;



   ENTITY part_feature_model_port_assignment;
      source : part_feature;
      target : analytical_model_port;
   END_ENTITY;



   ENTITY part_feature_placement_link;
      precedent_element : part_feature;
      subsequent_element : part_feature;
   INVERSE
      referenced_by : part_linear_array_feature FOR element;
   END_ENTITY;



   ENTITY part_feature_template_definition
   SUBTYPE OF (ee_product_definition);
      of_model : OPTIONAL analytical_representation;
      bound_parameters : OPTIONAL SET [1:?] OF model_parameter_relationship;
   INVERSE
      shape : part_feature_template_shape_definition FOR shape_characterized_template;
   WHERE
      WR1:
         SIZEOF(QUERY (prpc <* USEDIN(SELF\ee_product_definition.version.versioned_item, 'AP210_ARM_EXTENDED.EE_PRODUCT_RELATED_PRODUCT_CATEGORY.OF_PRODUCT')| (prpc.name = 'template model'))) >= 0;
   END_ENTITY;



   ENTITY part_feature_template_shape_definition
   SUBTYPE OF (feature_shape_definition);
      shape_characterized_template : part_feature_template_definition;
   WHERE
      WR1:
         NOT (SIZEOF(USEDIN(SELF, '')) = 0) OR (SIZEOF(QUERY (foo <* USEDIN(SELF, '')| NOT ('AP210_ARM_EXTENDED.USAGE_CONCEPT_USAGE_RELATIONSHIP' IN TYPEOF(foo)))) = 0);
   END_ENTITY;



   ENTITY part_group_feature
   SUPERTYPE OF (part_array_feature)
   SUBTYPE OF (part_feature, composite_shape_element);
   END_ENTITY;



   ENTITY part_interface_access_feature
   SUBTYPE OF (part_feature);
      accessed_interface : part_feature;
      interface_access_area : OPTIONAL SET [1:?] OF connection_zone;
   WHERE
      WR1:
         SELF\part_feature.material_state_change = material_removal;
      WR2:
         SELF <> accessed_interface;
      WR3:
         NOT ('AP210_ARM_EXTENDED.PART_TERMINAL' IN TYPEOF(SELF));
      WR4:
         NOT ('AP210_ARM_EXTENDED.PACKAGE_BODY' IN TYPEOF(SELF));
      WR5:
         NOT ('AP210_ARM_EXTENDED.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
      WR6:
         NOT ('AP210_ARM_EXTENDED.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
      WR7:
         NOT ('AP210_ARM_EXTENDED.PACKAGE_TERMINAL' IN TYPEOF(SELF));
      WR8:
         NOT ('AP210_ARM_EXTENDED.PACKAGE_BODY_SURFACE' IN TYPEOF(SELF));
      WR9:
         NOT ('AP210_ARM_EXTENDED.POLARITY_INDICATION_FEATURE' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY part_linear_array_feature
   SUBTYPE OF (part_array_feature);
      element : SET [1:?] OF part_feature_placement_link;
      initial_node_positive_x_displacement : length_measure_with_unit;
      terminus_node_positive_x_displacement : length_measure_with_unit;
      location_uncertainty : length_measure_with_unit;
   END_ENTITY;



   ENTITY part_linear_array_feature_link;
      precedent_element : part_linear_array_feature;
      subsequent_element : part_linear_array_feature;
   INVERSE
      referenced_by : part_rectangular_array_feature FOR element;
   END_ENTITY;



   ENTITY part_mating_feature
   SUBTYPE OF (part_feature);
      mating_area : OPTIONAL SET [1:?] OF connection_zone;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
      WR2:
         NOT ('AP210_ARM_EXTENDED.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
      WR3:
         NOT ('AP210_ARM_EXTENDED.PACKAGE_TERMINAL' IN TYPEOF(SELF));
      WR4:
         NOT ('AP210_ARM_EXTENDED.PART_TERMINAL' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY part_mounting_feature
   SUPERTYPE OF (bare_die_surface)
   SUBTYPE OF (part_feature);
      mounting_area : OPTIONAL SET [1:?] OF connection_zone;
   END_ENTITY;



   ENTITY part_rectangular_array_feature
   SUBTYPE OF (part_array_feature);
      element : SET [1:?] OF part_linear_array_feature_link;
      initial_row_positive_y_displacement : length_measure_with_unit;
      terminus_row_positive_y_displacement : length_measure_with_unit;
      location_uncertainty : length_measure_with_unit;
   END_ENTITY;



   ENTITY part_template
   SUPERTYPE OF (ONEOF(inter_stratum_feature_template, material_removal_feature_template, non_conductive_cross_section_template, printed_part_cross_section_template, printed_part_template, special_symbol_part_template, stratum_feature_template, trace_template) ANDOR part_text_template)
   SUBTYPE OF (physical_feature_or_part_template);
      part_template_analytical_model : OPTIONAL analytical_model;
      physical_characteristic : OPTIONAL SET [1:?] OF correlated_or_independent;
      analytical_part_template_representation : OPTIONAL SET [1:?] OF analytical_representation;
      associated_definition : template_definition;
   WHERE
      WR1:
         SIZEOF(QUERY (prpc <* USEDIN(associated_definition\ee_product_definition.version.versioned_item, 'AP210_ARM_EXTENDED.EE_PRODUCT_RELATED_PRODUCT_CATEGORY.OF_PRODUCT')| (prpc.name = 'template model'))) >= 0;
      WR2:
         SELF\shape_element.name = 'NULL';
   END_ENTITY;



   ENTITY part_template_3d_keepout_shape
   SUBTYPE OF (non_feature_shape_definition);
      application_technology_constraint : OPTIONAL ee_requirement_occurrence;
      constrained_design_object_category : keepout_product_design_object_category;
      shape_characterized_part_template : part_template;
      shape_material_condition : material_condition;
      shape_purpose : keepout_purpose;
      shape_environment : application_environment;
      centroid_location : OPTIONAL cartesian_point;
   END_ENTITY;



   ENTITY part_template_3d_shape
   SUBTYPE OF (feature_shape_definition);
      shape_material_condition : material_condition;
      shape_environment : OPTIONAL application_environment;
      shape_characterized_part_template : part_template;
   END_ENTITY;



   ENTITY part_template_location_in_padstack_definition
   SUPERTYPE OF (stratum_specific_part_template_location_in_padstack_definition);
      padstack : padstack_definition;
      template : template_definition;
      reference_designation : STRING;
   INVERSE
      transform : SET [0:1] OF part_template_location_in_padstack_definition_transform FOR reference_location;
   WHERE
      WR1:
         (SIZEOF(transform) = 1) AND (SIZEOF([ 'AP210_ARM_EXTENDED.SNOWBALL_TEMPLATE', 'AP210_ARM_EXTENDED.TEARDROP_BY_ANGLE_TEMPLATE', 'AP210_ARM_EXTENDED.TEARDROP_BY_LENGTH_TEMPLATE' ] * TYPEOF(transform[1].template_shape.shape_characterized_part_template)) = 0) OR NOT (SIZEOF(transform) = 1) AND (SIZEOF([ 'AP210_ARM_EXTENDED.SNOWBALL_TEMPLATE', 'AP210_ARM_EXTENDED.TEARDROP_BY_ANGLE_TEMPLATE', 'AP210_ARM_EXTENDED.TEARDROP_BY_LENGTH_TEMPLATE' ] * TYPEOF(template.associated_template_occurrence)) = 1);
   END_ENTITY;



   ENTITY part_template_location_in_padstack_definition_transform;
      padstack_shape : padstack_definition_shape;
      template_shape : part_template_planar_shape;
      reference_location : part_template_location_in_padstack_definition;
      transform : axis2_placement_2d;
   END_ENTITY;



   ENTITY part_template_non_planar_2d_shape
   SUBTYPE OF (open_shell_based_surface, feature_shape_definition);
      transformation : axis2_placement_3d;
      shape_characterized_part_template : part_template;
      shape_environment : OPTIONAL application_environment;
      shape_material_condition : material_condition;
   END_ENTITY;



   ENTITY part_template_or_physical_unit_2d_shape_representation_relationship;
      principal_part_shape : part_template_or_physical_unit_2d_shape_select;
      related_part_shape : part_template_or_physical_unit_2d_shape_select;
   UNIQUE
      ur1 : principal_part_shape, related_part_shape;
   WHERE
      WR1:
         principal_part_shape :<>: related_part_shape;
   END_ENTITY;



   ENTITY part_template_or_physical_unit_3d_shape_representation_relationship;
      principal_part_shape : part_template_or_physical_unit_3d_shape_select;
      related_part_shape : part_template_or_physical_unit_3d_shape_select;
   UNIQUE
      ur1 : principal_part_shape, related_part_shape;
   WHERE
      WR1:
         principal_part_shape :<>: related_part_shape;
   END_ENTITY;



   ENTITY part_template_planar_keepout_shape
   SUBTYPE OF (planar_shape, non_feature_shape_definition);
      application_technology_constraint : OPTIONAL ee_requirement_occurrence;
      constrained_design_object_category : keepout_product_design_object_category;
      shape_characterized_part_template : part_template;
      shape_material_condition : material_condition;
      centroid_location : OPTIONAL cartesian_point;
      shape_environment : application_environment;
      shape_purpose : keepout_purpose;
   END_ENTITY;



   ENTITY part_template_planar_shape
   SUBTYPE OF (planar_projected_shape);
      shape_characterized_part_template : part_template;
      shape_environment : OPTIONAL application_environment;
      shape_material_condition : material_condition;
   END_ENTITY;



   ENTITY part_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(minimally_defined_bare_die_terminal, assembly_module_terminal, cable_terminal, interconnect_module_terminal, packaged_part_terminal))
   SUBTYPE OF (part_feature);
   INVERSE
      connection_requirement : SET [0:1] OF part_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal : SET [0:1] OF functional_usage_view_to_part_terminal_assignment FOR physical_usage_view_terminal;
   END_ENTITY;



   ENTITY part_terminal_external_reference;
      associated_definition : physical_unit_or_part_template;
      feature_name : ee_name;
      feature_type : ee_name;
   UNIQUE
      ur1 : associated_definition, feature_name, feature_type;
   END_ENTITY;



   ENTITY part_text_template
   SUBTYPE OF (part_template);
      font : OPTIONAL font_select;
      maximum_font_positive_horizontal_extent : OPTIONAL length_measure_with_unit;
      maximum_font_positive_vertical_extent : OPTIONAL length_measure_with_unit;
      maximum_font_negative_horizontal_extent : OPTIONAL length_measure_with_unit;
      maximum_font_negative_vertical_extent : OPTIONAL length_measure_with_unit;
      slant_angle : OPTIONAL plane_angle_measure_with_unit;
      stroke_width : OPTIONAL length_measure_with_unit;
   WHERE
      WR1:
         (((((EXISTS(maximum_font_positive_horizontal_extent) OR EXISTS(maximum_font_positive_vertical_extent)) OR EXISTS(maximum_font_negative_horizontal_extent)) OR EXISTS(maximum_font_negative_vertical_extent)) OR EXISTS(slant_angle)) OR EXISTS(stroke_width)) OR EXISTS(font);
   END_ENTITY;



   ENTITY part_tooling_feature
   SUPERTYPE OF (ONEOF(fiducial_part_feature, tool_registration_mark) ANDOR test_point_part_feature)
   SUBTYPE OF (part_feature);
   END_ENTITY;



   ENTITY partially_plated_cutout
   SUBTYPE OF (cutout);
   INVERSE
      plated_segment : SET [1:?] OF cutout_edge_segment FOR composed_cutout;
      unplated_segment : SET [1:?] OF cutout_edge_segment FOR composed_cutout;
   END_ENTITY;



   ENTITY partially_plated_interconnect_module_edge
   SUBTYPE OF (interconnect_module_edge);
   INVERSE
      plated_segment : SET [1:?] OF interconnect_module_edge_segment FOR composed_edge;
      unplated_segment : SET [1:?] OF interconnect_module_edge_segment FOR composed_edge;
   END_ENTITY;



   ENTITY partially_routed_physical_network
   SUBTYPE OF (physical_network);
      unrouted_connectivity_requirement_element : SET [1:?] OF unrouted_join_relationship;
   END_ENTITY;



   ENTITY participant_date_and_time_assignment;
      action_participant : person_and_organization;
      action_date_and_time : date_and_time;
   END_ENTITY;



   ENTITY passage_padstack_definition
   SUBTYPE OF (padstack_definition);
      technology_reference : passage_technology;
   END_ENTITY;



   ENTITY passage_technology
   SUPERTYPE OF (ONEOF(default_via_definition, default_component_termination_passage_definition, default_unsupported_passage_definition));
      associated_definition : interconnect_module;
      as_finished_inter_stratum_extent : inter_stratum_extent;
      deposition_material : OPTIONAL ee_material;
      plated_passage : BOOLEAN;
      maximum_as_finished_passage_extent : OPTIONAL length_measure_with_unit;
      minimum_as_finished_passage_extent : OPTIONAL length_measure_with_unit;
      name : ee_name;
      maximum_as_finished_deposition_thickness : OPTIONAL length_measure_with_unit;
      maximum_aspect_ratio : OPTIONAL REAL;
      minimum_as_finished_deposition_thickness : OPTIONAL length_measure_with_unit;
      specification : OPTIONAL process_specification;
   UNIQUE
      ur1 : name, associated_definition;
   END_ENTITY;



   ENTITY path
   SUPERTYPE OF (ONEOF(edge_loop, oriented_path))
   SUBTYPE OF (topological_representation_item);
      edge_list : LIST [1:?] OF UNIQUE oriented_edge;
   WHERE
      WR1:
         path_head_to_tail(SELF);
   END_ENTITY;



   ENTITY pca
   SUBTYPE OF (assembly_module);
      SELF\physical_unit_design_view.usage_view : pca_usage_view;
   END_ENTITY;



   ENTITY pca_terminal
   SUBTYPE OF (assembly_module_terminal);
      SELF\part_feature.associated_definition : pca_usage_view;
   END_ENTITY;



   ENTITY pca_usage_view
   SUBTYPE OF (assembly_module_usage_view);
   END_ENTITY;



   ENTITY pcb
   SUPERTYPE OF (layout_macro_definition)
   SUBTYPE OF (interconnect_module);
      SELF\physical_unit_design_view.usage_view : OPTIONAL pcb_usage_view;
   WHERE
      WR1:
         ('AP210_ARM_EXTENDED.LAYOUT_MACRO_DEFINITION' IN TYPEOF(SELF)) XOR EXISTS(SELF\physical_unit_design_view.usage_view);
   END_ENTITY;



   ENTITY pcb_usage_view
   SUBTYPE OF (interconnect_module_usage_view);
   END_ENTITY;



   ENTITY pcurve
   SUBTYPE OF (curve);
      basis_surface : surface;
      reference_to_curve : definitional_representation;
   WHERE
      WR1:
         SIZEOF(reference_to_curve\representation.items) = 1;
      WR2:
         'AP210_ARM_EXTENDED.CURVE' IN TYPEOF(reference_to_curve\representation.items[1]);
      WR3:
         reference_to_curve\representation.items[1]\geometric_representation_item.dim = 2;
   END_ENTITY;



   ENTITY perpendicular_shape_element_relationship
   SUBTYPE OF (shape_element_relationship);
   END_ENTITY;



   ENTITY perpendicularity_tolerance
   SUBTYPE OF (geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY person;
      id : identifier;
      last_name : OPTIONAL label;
      first_name : OPTIONAL label;
      middle_names : OPTIONAL LIST [1:?] OF label;
      prefix_titles : OPTIONAL LIST [1:?] OF label;
      suffix_titles : OPTIONAL LIST [1:?] OF label;
   WHERE
      WR1:
         EXISTS(last_name) OR EXISTS(first_name);
   END_ENTITY;



   ENTITY person_and_organization;
      the_person : person;
      the_organization : organization;
   DERIVE
      name : label := get_name_value(SELF);
      description : text := get_description_value(SELF);
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
      WR2:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
   END_ENTITY;



   ENTITY personal_address
   SUBTYPE OF (address);
      people : SET [1:?] OF person;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY physical_component
   SUPERTYPE OF (ONEOF(cable_component, packaged_component, interconnect_module_component, assembly_module_component, bare_die_component, routed_physical_component, routed_interconnect_component) ANDOR interface_component)
   SUBTYPE OF (assembly_component);
      SELF\assembly_component.usage_definition : OPTIONAL physical_unit;
   END_ENTITY;



   ENTITY physical_component_feature
   SUPERTYPE OF ((component_mounting_feature ANDOR interconnect_module_component_surface_feature) ANDOR ONEOF(physical_component_terminal, component_interface_terminal))
   SUBTYPE OF (component_feature, physical_feature_or_part_template);
   END_ENTITY;



   ENTITY physical_component_terminal
   ABSTRACT SUPERTYPE OF (ONEOF(assembly_module_component_terminal, bare_die_component_terminal, interconnect_component_join_terminal, interconnect_module_component_terminal, minimally_defined_component_terminal, packaged_component_join_terminal))
   SUBTYPE OF (component_terminal, physical_component_feature);
   INVERSE
      connected_node : SET [0:1] OF physical_connectivity_definition FOR associated_terminals;
   END_ENTITY;



   ENTITY physical_connectivity_abstraction_map;
      name_space_context_based_definition : physical_connectivity_element;
      geometric_context_based_definition : conductive_interconnect_element;
   UNIQUE
      ur1 : name_space_context_based_definition, geometric_context_based_definition;
   END_ENTITY;



   ENTITY physical_connectivity_definition
   SUPERTYPE OF (physical_connectivity_structure_definition);
      associated_definition : physical_unit_network_definition;
      associated_terminals : SET [2:?] OF physical_component_terminal;
      name : ee_name;
   UNIQUE
      ur1 : name, associated_definition;
   END_ENTITY;



   ENTITY physical_connectivity_definition_relationship;
      requirement : ee_requirement_occurrence;
      previous_definition : physical_connectivity_definition;
      current_definition : physical_connectivity_definition;
   END_ENTITY;



   ENTITY physical_connectivity_element;
      start_terminus : termination_or_junction;
      name : ee_name;
      end_terminus : termination_or_junction;
      connectivity_context : physical_connectivity_structure_definition;
   UNIQUE
      ur1 : name, connectivity_context;
   WHERE
      WR1:
         start_terminus <> end_terminus;
   END_ENTITY;



   ENTITY physical_connectivity_interrupting_cutout
   SUBTYPE OF (cutout);
      interrupted_connectivity_element : SET [1:?] OF conductive_interconnect_element;
   END_ENTITY;



   ENTITY physical_connectivity_make_from_relationship;
      reusable_definition : physical_connectivity_definition;
      resultant_definition : physical_connectivity_definition;
   END_ENTITY;



   ENTITY physical_connectivity_structure_definition
   SUBTYPE OF (physical_connectivity_definition);
   INVERSE
      structural_element : SET [1:?] OF physical_connectivity_element FOR connectivity_context;
   END_ENTITY;



   ENTITY physical_feature_or_part_template
   ABSTRACT SUPERTYPE OF (ONEOF(part_feature, physical_component_feature, physical_laminate_component, part_template, stratum_feature) ANDOR ONEOF(datum_feature, datum_target))
   SUBTYPE OF (shape_element);
   END_ENTITY;



   ENTITY physical_interconnection_definition;
      associated_definition : physical_unit_interconnect_definition;
      connector_in_uv_1 : next_higher_assembly_relationship;
      connector_in_uv_2 : next_higher_assembly_relationship;
      component_1 : next_higher_assembly_relationship;
      component_2 : next_higher_assembly_relationship;
      name : ee_name;
   UNIQUE
      ur1 : name, associated_definition;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.PACKAGED_CONNECTOR_COMPONENT' IN TYPEOF(connector_in_uv_1\assembly_composition_relationship.component);
      WR2:
         'AP210_ARM_EXTENDED.PACKAGED_CONNECTOR_COMPONENT' IN TYPEOF(connector_in_uv_2\assembly_composition_relationship.component);
      WR3:
         'AP210_ARM_EXTENDED.PHYSICAL_UNIT_USAGE_VIEW' IN TYPEOF(connector_in_uv_1\assembly_composition_relationship.assembly);
      WR4:
         'AP210_ARM_EXTENDED.PHYSICAL_UNIT_USAGE_VIEW' IN TYPEOF(connector_in_uv_2\assembly_composition_relationship.assembly);
      WR5:
         EXISTS(connector_in_uv_1.reference_designation);
      WR6:
         EXISTS(connector_in_uv_2.reference_designation);
      WR7:
         EXISTS(component_1.reference_designation);
      WR8:
         EXISTS(component_2.reference_designation);
      WR9:
         NOT EXISTS(connector_in_uv_1.quantity);
      WR10:
         NOT EXISTS(connector_in_uv_2.quantity);
      WR11:
         NOT EXISTS(component_1.quantity);
      WR12:
         NOT EXISTS(component_2.quantity);
      WR13:
         component_1.component.usage_definition = connector_in_uv_1\assembly_composition_relationship.assembly;
      WR14:
         component_2.component.usage_definition = connector_in_uv_2\assembly_composition_relationship.assembly;
      WR15:
         component_1 <> component_2;
      WR16:
         component_1 <> connector_in_uv_1;
      WR17:
         connector_in_uv_1 <> component_2;
      WR18:
         component_1 <> connector_in_uv_2;
      WR19:
         connector_in_uv_2 <> component_2;
   END_ENTITY;



   ENTITY physical_laminate_component
   SUBTYPE OF (laminate_component, physical_feature_or_part_template);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF)) > 6;
   END_ENTITY;



   ENTITY physical_network
   SUPERTYPE OF (partially_routed_physical_network);
      current_associated_definition : interconnect_module;
      prior_associated_definition : OPTIONAL SET [1:?] OF interconnect_module;
      connectivity_requirement_element : SET [2:?] OF laminate_component_join_terminal;
      interconnect_module_network_topology_element : SET [1:?] OF join_relationship;
      name : ee_name;
      reference_connected_terminals : OPTIONAL part_connected_terminals_definition;
      probe : OPTIONAL SET [1:?] OF probe_access_area;
   UNIQUE
      ur1 : name, current_associated_definition;
   WHERE
      WR1:
         NOT EXISTS(prior_associated_definition) OR NOT (current_associated_definition IN prior_associated_definition);
      WR2:
         SIZEOF(QUERY (cre <* connectivity_requirement_element| NOT (NOT ('AP210_ARM_EXTENDED.LAND_JOIN_TERMINAL' IN TYPEOF(cre)) OR (SIZEOF(TYPEOF(cre\component_feature.associated_component) * [ 'AP210_ARM_EXTENDED.CONTACT_SIZE_DEPENDENT_LAND', ('AP210_ARM_EXTENDED.' + 'COMPONENT_TERMINATION_PASSAGE_AND_CONTACT_SIZE_DEPENDENT_LAND'), 'AP210_ARM_EXTENDED.VIA_AND_CONTACT_SIZE_DEPENDENT_LAND' ]) = 1)))) = 0;
      WR3:
         SIZEOF(QUERY (cre <* connectivity_requirement_element| NOT (NOT ('AP210_ARM_EXTENDED.NON_FUNCTIONAL_LAND_JOIN_TERMINAL' IN TYPEOF(cre)) OR (SIZEOF(TYPEOF(cre\component_feature.associated_component) * [ ('AP210_ARM_EXTENDED.' + 'COMPONENT_TERMINATION_PASSAGE_AND_' + 'CONTACT_SIZE_DEPENDENT_NON_FUNCTIONAL_LAND'), ('AP210_ARM_EXTENDED.' + 'VIA_AND_CONTACT_SIZE_DEPENDENT_NON_FUNCTIONAL_LAND') ]) = 1)))) = 0;
   END_ENTITY;



   ENTITY physical_network_supporting_inter_stratum_feature
   SUPERTYPE OF (join_two_physical_connectivity_definition_supporting_inter_stratum_feature)
   SUBTYPE OF (plated_inter_stratum_feature, inter_stratum_join_implementation);
   END_ENTITY;



   ENTITY physical_network_supporting_stratum_feature_conductive_join
   SUBTYPE OF (stratum_feature_conductive_join, inter_stratum_join_implementation);
   END_ENTITY;



   ENTITY physical_node_requirement_to_implementing_component_allocation;
      physical_node_requirement : physical_connectivity_definition;
      implementation_component : assembly_component;
      implementation_interface_joint_set : OPTIONAL SET [1:?] OF interface_mounted_join;
      implementation_joint_set : OPTIONAL SET [1:?] OF assembly_joint;
   DERIVE
      implementation_connection_definition_1 : SET [0:1] OF part_connected_terminals_definition := get_pctd(implementation_component, implementation_joint_set);
      implementation_connection_definition_2 : SET [0:1] OF packaged_connector_terminal_relationship := get_pctr(implementation_component, implementation_interface_joint_set);
   WHERE
      WR1:
         EXISTS(implementation_interface_joint_set) XOR EXISTS(implementation_joint_set);
      WR2:
         ((SIZEOF(implementation_connection_definition_1) + SIZEOF(implementation_connection_definition_2) = 1) OR ('AP210_ARM_EXTENDED.INTERFACE_COMPONENT' IN TYPEOF(implementation_component)) AND ('AP210_ARM_EXTENDED.COMPONENT_INTERFACE_TERMINAL' IN TYPEOF(get_cit(implementation_component, implementation_joint_set)))) OR ('AP210_ARM_EXTENDED.ROUTED_INTERCONNECT_COMPONENT' IN TYPEOF(implementation_component));
      WR3:
         SIZEOF(QUERY (pct <* physical_node_requirement.associated_terminals| (pct\component_feature.associated_component = implementation_component))) = 0;
   END_ENTITY;



   ENTITY physical_unit
   ABSTRACT SUPERTYPE OF (ONEOF(physical_unit_design_view, physical_unit_usage_view))
   SUBTYPE OF (ee_product_definition);
      analytical_physical_unit_representation : OPTIONAL SET [1:?] OF analytical_representation;
      unit_technology : OPTIONAL technology;
      physical_device_characteristic : OPTIONAL SET [1:?] OF characteristic;
      physical_device_coordinated_characteristic : OPTIONAL SET [1:?] OF coordinated_characteristic;
   WHERE
      WR1:
         NOT (SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'ASSEMBLY_COMPOSITION_RELATIONSHIP.ASSEMBLY')) <> 0) OR (SIZEOF([ 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_DESIGN_VIEW', 'AP210_ARM_EXTENDED.ASSEMBLY_MODULE_USAGE_VIEW', 'AP210_ARM_EXTENDED.CABLE_USAGE_VIEW' ] * TYPEOF(SELF)) = 1);
   END_ENTITY;



   ENTITY physical_unit_3d_keepout_shape
   SUBTYPE OF (view_level_non_feature_shape_definition);
      application_technology_constraint : OPTIONAL ee_requirement_occurrence;
      constrained_design_object_category : keepout_product_design_object_category;
      shape_characterized_physical_unit : physical_unit;
      shape_material_condition : material_condition;
      shape_purpose : keepout_purpose;
      shape_environment : application_environment;
      shape_extent : shape_extent;
      shape_classification : shape_class;
      shape_approximation_level : shape_approximation_level;
      centroid_location : OPTIONAL cartesian_point;
   END_ENTITY;



   ENTITY physical_unit_3d_shape
   SUBTYPE OF (feature_shape_definition);
      application_technology_constraint : OPTIONAL ee_requirement_occurrence;
      shape_characterized_physical_unit : physical_unit;
      shape_material_condition : material_condition;
      shape_purpose : three_d_purpose;
      shape_environment : application_environment;
      shape_extent : shape_extent;
      shape_classification : shape_class;
      shape_approximation_level : shape_approximation_level;
      mass_property_quality : mass_property_quality;
      centroid_location : OPTIONAL cartesian_point;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PACKAGED_PART' IN TYPEOF(shape_characterized_physical_unit));
   END_ENTITY;



   ENTITY physical_unit_design_view
   SUPERTYPE OF (ONEOF(assembly_module, interconnect_module))
   SUBTYPE OF (physical_unit);
      usage_view : OPTIONAL physical_unit_usage_view;
   WHERE
      WR1:
         ('AP210_ARM_EXTENDED.LAYOUT_MACRO_DEFINITION' IN TYPEOF(SELF)) OR EXISTS(usage_view);
   END_ENTITY;



   ENTITY physical_unit_interconnect_definition
   SUBTYPE OF (ee_product_definition);
   END_ENTITY;



   ENTITY physical_unit_network_definition
   SUBTYPE OF (ee_product_definition);
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PHYSICAL_UNIT' IN TYPEOF(SELF)) OR ('AP210_ARM_EXTENDED.PHYSICAL_UNIT_DESIGN_VIEW' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY physical_unit_planar_keepout_shape
   SUBTYPE OF (planar_shape, view_level_non_feature_shape_definition);
      application_technology_constraint : OPTIONAL ee_requirement_occurrence;
      constrained_design_object_category : keepout_product_design_object_category;
      shape_characterized_physical_unit : physical_unit;
      shape_distance_from_seating_plane : OPTIONAL length_measure_with_unit;
      shape_location_with_respect_to_seating_plane : shape_location;
      shape_material_condition : material_condition;
      centroid_location : OPTIONAL cartesian_point;
      shape_environment : application_environment;
      shape_purpose : keepout_purpose;
      shape_extent : shape_extent;
      shape_approximation_level : shape_approximation_level;
   WHERE
      WR1:
         NOT ((congruent = shape_location_with_respect_to_seating_plane) AND EXISTS(shape_distance_from_seating_plane));
   END_ENTITY;



   ENTITY physical_unit_planar_shape
   SUBTYPE OF (planar_projected_shape);
      application_technology_constraint : OPTIONAL ee_requirement_occurrence;
      shape_characterized_physical_unit : physical_unit;
      shape_distance_from_seating_plane : OPTIONAL length_measure_with_unit;
      shape_location_with_respect_to_seating_plane : shape_location;
      shape_material_condition : material_condition;
      centroid_location : OPTIONAL cartesian_point;
      shape_environment : application_environment;
      shape_purpose : planar_purpose;
      shape_extent : shape_extent;
      shape_approximation_level : shape_approximation_level;
      mass_property_quality : mass_property_quality;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PACKAGED_PART' IN TYPEOF(shape_characterized_physical_unit));
   END_ENTITY;



   ENTITY physical_unit_relationship;
      relating_unit : physical_unit;
      related_unit : physical_unit;
      purpose : ee_name;
   END_ENTITY;



   ENTITY physical_unit_usage_view
   SUPERTYPE OF (ONEOF(package, bare_die, cable_usage_view, packaged_part, assembly_module_usage_view, interconnect_module_usage_view))
   SUBTYPE OF (physical_unit);
   WHERE
      WR1:
         SIZEOF(QUERY (acr <* USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'ASSEMBLY_COMPOSITION_RELATIONSHIP.ASSEMBLY')| NOT ('AP210_ARM_EXTENDED.PACKAGED_CONNECTOR_COMPONENT' IN TYPEOF(acr.component)))) = 0;
   END_ENTITY;



   ENTITY pitch_class;
      class_member : range_characteristic;
      class_name : ee_name;
   WHERE
      WR1:
         SIZEOF(QUERY (np <* class_member\coordinated_characteristic.component_characteristic| NOT ('AP210_ARM_EXTENDED.LENGTH_DATA_ELEMENT' IN TYPEOF(np\characteristic.property_value)))) = 0;
   END_ENTITY;



   ENTITY placement
   SUPERTYPE OF (ONEOF(axis1_placement, axis2_placement_2d, axis2_placement_3d))
   SUBTYPE OF (geometric_representation_item);
      location : cartesian_point;
   END_ENTITY;



   ENTITY placement_group;
      design_specific_usage : ee_name;
      requirement : SET [1:?] OF ee_requirement_occurrence;
   END_ENTITY;



   ENTITY placement_group_area_assignment;
      placed_group : placement_group;
      area : mounting_restriction_area;
   END_ENTITY;



   ENTITY placement_group_volume_assignment;
      placed_group : placement_group;
      volume : mounting_restriction_volume;
   END_ENTITY;



   ENTITY planar_projected_shape
   SUPERTYPE OF (ONEOF(assembly_component_2d_shape ANDOR ONEOF(part_template_planar_shape, footprint_definition_shape, padstack_definition_shape, physical_unit_planar_shape), design_intent_modification_planar_shape, stratum_feature_planar_shape, stratum_planar_shape))
   SUBTYPE OF (planar_shape, feature_shape_definition);
   END_ENTITY;



   ENTITY planar_shape
   ABSTRACT SUPERTYPE OF (ONEOF(planar_projected_shape, physical_unit_planar_keepout_shape))
   SUBTYPE OF (shape_definition);
   WHERE
      WR1:
         SELF\shape_definition.geometric_context.dimensionality = two_dimensional;
   END_ENTITY;



   ENTITY plane
   SUBTYPE OF (elementary_surface);
   END_ENTITY;



   ENTITY plane_angle_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY plane_angle_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY planned_characteristic;
      reference_requirement : requirement_allocation_select;
      planned_coordinated_characteristic : coordinated_characteristic;
   END_ENTITY;



   ENTITY planned_date_effectivity
   SUBTYPE OF (planned_effectivity);
      start_date : date_or_date_and_time;
      end_date : OPTIONAL date_or_date_and_time;
   END_ENTITY;



   ENTITY planned_effectivity
   SUPERTYPE OF (ONEOF(planned_date_effectivity, planned_serial_number_effectivity, planned_lot_effectivity));
      effective_assembly : assembly_composition_relationship;
      effectivity_approval : ee_approval;
      configuration : ee_product_configuration;
      component_quantity : OPTIONAL measure_with_unit;
   UNIQUE
      ur1 : effective_assembly, configuration;
   END_ENTITY;



   ENTITY planned_lot_effectivity
   SUBTYPE OF (planned_effectivity);
      lot_number : STRING;
      lot_size : measure_with_unit;
   END_ENTITY;



   ENTITY planned_serial_number_effectivity
   SUBTYPE OF (planned_effectivity);
      through_effectivity_id : OPTIONAL STRING;
      from_effectivity_id : STRING;
   END_ENTITY;



   ENTITY plated_conductive_base_blind_via
   SUBTYPE OF (blind_via);
   END_ENTITY;



   ENTITY plated_cutout
   SUBTYPE OF (cutout, plated_inter_stratum_feature);
   END_ENTITY;



   ENTITY plated_cutout_edge_segment
   SUBTYPE OF (cutout_edge_segment, plated_inter_stratum_feature);
      SELF\cutout_edge_segment.composed_cutout : partially_plated_cutout;
   END_ENTITY;



   ENTITY plated_inter_stratum_feature
   ABSTRACT SUPERTYPE OF ((ONEOF(plated_cutout, plated_interconnect_module_edge, plated_cutout_edge_segment, plated_interconnect_module_edge_segment, plated_passage) ANDOR physical_network_supporting_inter_stratum_feature) ANDOR indirect_stratum_component_join_implementation)
   SUBTYPE OF (inter_stratum_feature);
   END_ENTITY;



   ENTITY plated_interconnect_module_edge
   SUBTYPE OF (interconnect_module_edge, plated_inter_stratum_feature);
   END_ENTITY;



   ENTITY plated_interconnect_module_edge_segment
   SUBTYPE OF (plated_inter_stratum_feature, interconnect_module_edge_segment);
      SELF\interconnect_module_edge_segment.composed_edge : partially_plated_interconnect_module_edge;
   END_ENTITY;



   ENTITY plated_passage
   SUPERTYPE OF (ONEOF(component_termination_passage, via))
   SUBTYPE OF (plated_inter_stratum_feature);
   END_ENTITY;



   ENTITY plus_minus_tolerance_characteristic
   SUBTYPE OF (tolerance_characteristic);
      SELF\coordinated_characteristic.component_characteristic : SET [3:3] OF numeric_parameter;
   END_ENTITY;



   ENTITY plus_minus_tolerance_range_representation
   SUBTYPE OF (shape_dimension_representation);
      basic_dimension_value : measure_with_unit;
      upper_deviation : measure_with_unit;
      lower_deviation : measure_with_unit;
   END_ENTITY;



   ENTITY point
   SUPERTYPE OF (ONEOF(cartesian_point, point_on_curve, point_on_surface, point_replica, degenerate_pcurve))
   SUBTYPE OF (geometric_representation_item);
   END_ENTITY;



   ENTITY point_on_curve
   SUBTYPE OF (point);
      basis_curve : curve;
      point_parameter : parameter_value;
   END_ENTITY;



   ENTITY point_on_surface
   SUBTYPE OF (point);
      basis_surface : surface;
      point_parameter_u : parameter_value;
      point_parameter_v : parameter_value;
   END_ENTITY;



   ENTITY point_replica
   SUBTYPE OF (point);
      parent_pt : point;
      transformation : cartesian_transformation_operator;
   WHERE
      WR1:
         transformation.dim = parent_pt.dim;
      WR2:
         acyclic_point_replica(SELF, parent_pt);
   END_ENTITY;



   ENTITY polarity_indication_feature
   SUBTYPE OF (part_feature);
      associated_body_vertical_extent : OPTIONAL SET [1:2] OF package_body_surface;
      associated_terminal : package_terminal;
   END_ENTITY;



   ENTITY poly_loop
   SUBTYPE OF (loop, geometric_representation_item);
      polygon : LIST [3:?] OF UNIQUE cartesian_point;
   END_ENTITY;



   ENTITY polygonal_area
   SUBTYPE OF (primitive_2d);
      bounds : LIST [3:?] OF UNIQUE cartesian_point;
   END_ENTITY;



   ENTITY polyline
   SUBTYPE OF (bounded_curve);
      points : LIST [2:?] OF cartesian_point;
   END_ENTITY;



   ENTITY port_variable
   SUPERTYPE OF (ONEOF(through_port_variable, across_port_variable, transform_port_variable));
      associated_port : analog_analytical_model_port;
      variable_name : ee_name;
      unit_of_measure : OPTIONAL STRING;
   UNIQUE
      ur1 : variable_name, associated_port;
   END_ENTITY;



   ENTITY position_tolerance
   ABSTRACT SUPERTYPE OF (ONEOF(position_tolerance_with_referenced_datum_system, position_tolerance_without_referenced_datum_system) ANDOR composite_feature_relating_position_tolerance)
   SUBTYPE OF (geometric_tolerance);
   END_ENTITY;



   ENTITY position_tolerance_with_referenced_datum_system
   SUPERTYPE OF (ONEOF(composite_feature_locating_position_tolerance, boundary_based_position_tolerance))
   SUBTYPE OF (position_tolerance, geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY position_tolerance_without_referenced_datum_system
   SUBTYPE OF (position_tolerance, geometric_tolerance_without_referenced_datum_system);
   END_ENTITY;



   ENTITY positional_boundary
   ABSTRACT SUPERTYPE OF (ONEOF(profile_related_positional_boundary, dimension_related_positional_boundary))
   SUBTYPE OF (non_feature_shape_element);
   INVERSE
      boundary_definition : positional_boundary_definition FOR defined_positional_boundary;
   END_ENTITY;



   ENTITY positional_boundary_and_profile_boundary_member_relationship;
      offset_positional_boundary : profile_related_positional_boundary;
      base_profile_tolerance_zone_boundary_member : tolerance_zone_boundary_member;
   INVERSE
      offset : positional_boundary_offset FOR offset_boundary_relationship;
   END_ENTITY;



   ENTITY positional_boundary_definition
   ABSTRACT SUPERTYPE OF (ONEOF(profile_related_positional_boundary_definition, dimension_related_positional_boundary_definition));
      defined_positional_boundary : positional_boundary;
   END_ENTITY;



   ENTITY positional_boundary_member
   SUBTYPE OF (non_feature_shape_element);
   INVERSE
      composed_positional_boundary : dimension_related_positional_boundary FOR boundary_members;
      boundary_member_definition : positional_boundary_member_definition FOR defined_positional_boundary_member;
   END_ENTITY;



   ENTITY positional_boundary_member_definition;
      defined_positional_boundary_member : positional_boundary_member;
      tolerance_value : length_measure_with_unit;
      associated_dimension : dimensional_size;
   INVERSE
      boundary_definition : dimension_related_positional_boundary_definition FOR characterized_boundary_member_definitions;
   END_ENTITY;



   ENTITY positional_boundary_offset;
      offset_boundary_relationship : positional_boundary_and_profile_boundary_member_relationship;
      tolerance_value : length_measure_with_unit;
   INVERSE
      boundary_definition : profile_related_positional_boundary_definition FOR boundary_offset;
   END_ENTITY;



   ENTITY power_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\power_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = watt;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY pre_defined_datum_axis_3d_symbol
   SUBTYPE OF (non_feature_shape_definition);
      SELF\non_feature_shape_definition.associated_element : datum_axis;
   WHERE
      WR1:
         NOT EXISTS(SELF\non_feature_shape_definition.model_shape);
      WR2:
         SELF\shape_definition.geometric_context.dimensionality = three_dimensional;
   END_ENTITY;



   ENTITY pre_defined_datum_plane_3d_symbol
   SUBTYPE OF (non_feature_shape_definition);
      SELF\non_feature_shape_definition.associated_element : datum_plane;
   WHERE
      WR1:
         NOT EXISTS(SELF\non_feature_shape_definition.model_shape);
      WR3:
         SELF\shape_definition.geometric_context.dimensionality = three_dimensional;
   END_ENTITY;



   ENTITY pre_defined_dimension_qualifier
   SUBTYPE OF (dimension_qualifier);
      description : dimension_qualifiers;
   END_ENTITY;



   ENTITY pre_defined_geometric_tolerance_qualifier
   SUBTYPE OF (geometric_tolerance_qualifier);
      description : geometric_tolerance_qualifiers;
   END_ENTITY;



   ENTITY pre_defined_parallel_datum_axis_2d_symbol
   SUBTYPE OF (planar_shape, non_feature_shape_definition);
      SELF\non_feature_shape_definition.associated_element : datum_axis;
   WHERE
      WR1:
         NOT EXISTS(SELF\non_feature_shape_definition.model_shape);
      WR2:
         SELF\shape_definition.geometric_context.dimensionality = two_dimensional;
   END_ENTITY;



   ENTITY pre_defined_parallel_datum_axis_symbol_3d_2d_relationship
   SUBTYPE OF (shape_definition_3d_intersection);
   DERIVE
      SELF\shape_definition_3d_intersection.surface_intersection_result : pre_defined_parallel_datum_axis_2d_symbol := SELF\shape_definition_3d_intersection.surface_intersection_result;
      SELF\shape_definition_3d_intersection.projected_volume : pre_defined_datum_axis_3d_symbol := SELF\shape_definition_3d_intersection.projected_volume;
   END_ENTITY;



   ENTITY pre_defined_perpendicular_datum_axis_2d_symbol
   SUBTYPE OF (planar_shape, non_feature_shape_definition);
      SELF\non_feature_shape_definition.associated_element : datum_axis;
   WHERE
      WR1:
         NOT EXISTS(SELF\non_feature_shape_definition.model_shape);
      WR2:
         SELF\shape_definition.geometric_context.dimensionality = two_dimensional;
   END_ENTITY;



   ENTITY pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship
   SUBTYPE OF (shape_definition_3d_intersection);
   DERIVE
      SELF\shape_definition_3d_intersection.surface_intersection_result : pre_defined_perpendicular_datum_plane_2d_symbol := SELF\shape_definition_3d_intersection.surface_intersection_result;
      SELF\shape_definition_3d_intersection.projected_volume : pre_defined_datum_plane_3d_symbol := SELF\shape_definition_3d_intersection.projected_volume;
   END_ENTITY;



   ENTITY pre_defined_perpendicular_datum_plane_2d_symbol
   SUBTYPE OF (planar_shape, non_feature_shape_definition);
      SELF\non_feature_shape_definition.associated_element : datum_axis;
   WHERE
      WR1:
         NOT EXISTS(SELF\non_feature_shape_definition.model_shape);
      WR2:
         SELF\shape_definition.geometric_context.dimensionality = two_dimensional;
   END_ENTITY;



   ENTITY pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship
   SUBTYPE OF (shape_definition_3d_intersection);
   DERIVE
      surface_intersection_result : pre_defined_perpendicular_datum_plane_2d_symbol := SELF\shape_definition_3d_intersection.surface_intersection_result;
      projected_volume : pre_defined_datum_plane_3d_symbol := SELF\shape_definition_3d_intersection.projected_volume;
   END_ENTITY;



   ENTITY precision_qualifier;
      precision_value : INTEGER;
   END_ENTITY;



   ENTITY pressure_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\pressure_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = pascal;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY primary_orientation_feature
   SUBTYPE OF (part_feature, datum_feature);
      associated_body_vertical_extent : OPTIONAL SET [1:2] OF package_body_surface;
   END_ENTITY;



   ENTITY primary_reference_terminal
   SUBTYPE OF (package_terminal);
   WHERE
      WR1:
         NOT EXISTS(SELF\part_feature.precedent_feature);
   END_ENTITY;



   ENTITY primary_stratum_indicator_symbol
   SUBTYPE OF (special_symbol_laminate_component);
   END_ENTITY;



   ENTITY primitive_2d
   SUPERTYPE OF (ONEOF(circular_area, rectangular_area, polygonal_area))
   SUBTYPE OF (geometric_representation_item);
   WHERE
      WR1:
         SELF\geometric_representation_item.dim = 2;
   END_ENTITY;



   ENTITY printed_component
   SUPERTYPE OF (ONEOF(layout_macro_component, printed_connector_component, routed_printed_component))
   SUBTYPE OF (assembly_component);
      cad_layer : OPTIONAL external_definition;
      stratum_feature_implementation : OPTIONAL SET [1:?] OF stratum_feature;
      SELF\assembly_component.usage_definition : printed_part_template_or_printed_part_cross_section_template;
      printed_component_stack : OPTIONAL SET [1:?] OF printed_component_link;
      required_material_stack : OPTIONAL layer;
      footprint_implementation : OPTIONAL footprint_occurrence;
   DERIVE
      access_mechanism : SET [1:?] OF printed_component_join_terminal := raw_access_mechanism + printed_component_access_mechanisms(printed_component_stack);
   INVERSE
      raw_access_mechanism : SET [1:?] OF printed_component_join_terminal FOR associated_component;
      associated_precedent_link : SET [0:1] OF printed_component_link FOR precedent_printed_component;
      associated_subsequent_link : SET [0:1] OF printed_component_link FOR subsequent_printed_component;
   WHERE
      WR1:
         NOT EXISTS(stratum_feature_implementation) OR same_stratum(stratum_feature_implementation);
      WR2:
         NOT EXISTS(SELF\assembly_component.usage_definition.of_stratum_technology) OR EXISTS(stratum_feature_implementation);
      WR3:
         NOT EXISTS(SELF\assembly_component.usage_definition.material_stack) OR EXISTS(required_material_stack);
      WR4:
         NOT EXISTS(SELF\assembly_component.usage_definition.printed_part_template_stack) OR EXISTS(printed_component_stack);
      WR5:
         NOT EXISTS(printed_component_stack) OR consistent_stack_definition(SELF\assembly_component.usage_definition, printed_component_stack);
      WR6:
         NOT ('AP210_ARM_EXTENDED.ROUTED_PRINTED_COMPONENT' IN TYPEOF(SELF)) OR ('AP210_ARM_EXTENDED.PRINTED_PART_CROSS_SECTION_TEMPLATE' IN TYPEOF(SELF\assembly_component.usage_definition));
      WR7:
         NOT ('AP210_ARM_EXTENDED.PRINTED_PART_CROSS_SECTION_TEMPLATE' IN TYPEOF(SELF\assembly_component.usage_definition)) OR ('AP210_ARM_EXTENDED.ROUTED_PRINTED_COMPONENT' IN TYPEOF(SELF));
      WR8:
         SIZEOF(access_mechanism) > 0;
      WR9:
         NOT EXISTS(footprint_implementation) OR ('AP210_ARM_EXTENDED.PRINTED_PART_TEMPLATE' IN TYPEOF(footprint_implementation.usage_definition.reference_package)) AND (usage_definition = footprint_implementation.usage_definition.reference_package);
      WR10:
         NOT EXISTS(footprint_implementation) OR NOT ('AP210_ARM_EXTENDED.ROUTED_PRINTED_COMPONENT' IN TYPEOF(SELF));
      WR11:
         NOT EXISTS(footprint_implementation) OR NOT ('AP210_ARM_EXTENDED.LAYOUT_MACRO_COMPONENT' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY printed_component_join_terminal
   SUBTYPE OF (laminate_component_join_terminal);
      SELF\component_feature.definition : printed_part_template_join_terminal;
      SELF\component_feature.associated_component : printed_component;
      stratum_concept_implementation : stratum_feature_template_component;
   WHERE
      WR1:
         SIZEOF(QUERY (sf <* SELF\component_feature.associated_component\printed_component.stratum_feature_implementation| (sf = stratum_concept_implementation.stratum_feature_implementation))) = 1;
   END_ENTITY;



   ENTITY printed_component_link;
      precedent_printed_component : printed_component;
      subsequent_printed_component : printed_component;
      definition : printed_part_template_link;
   INVERSE
      associated_printed_component : printed_component FOR printed_component_stack;
   WHERE
      WR1:
         precedent_printed_component\assembly_component.usage_definition = definition.precedent_printed_part_template;
      WR2:
         subsequent_printed_component\assembly_component.usage_definition = definition.subsequent_printed_part_template;
      WR3:
         precedent_printed_component <> subsequent_printed_component;
   END_ENTITY;



   ENTITY printed_connector_component
   SUBTYPE OF (printed_component);
      SELF\assembly_component.usage_definition : printed_connector_template;
   INVERSE
      interface_access_mechanism : SET [1:?] OF printed_connector_component_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY printed_connector_component_interface_terminal
   SUBTYPE OF (laminate_component_interface_terminal);
      SELF\component_feature.definition : printed_part_template_interface_terminal;
      SELF\component_feature.associated_component : printed_connector_component;
      stratum_concept_implementation : stratum_feature_template_component;
   WHERE
      WR1:
         NOT EXISTS(SELF\component_feature.associated_component\printed_component.stratum_feature_implementation) OR (SIZEOF(QUERY (temp <* SELF\component_feature.associated_component\printed_component.stratum_feature_implementation| (temp :=: stratum_concept_implementation.stratum_feature_implementation))) = 1);
   END_ENTITY;



   ENTITY printed_connector_template
   SUBTYPE OF (printed_part_template);
   INVERSE
      characterized_connector_terminal_relationship : SET [1:?] OF printed_connector_template_terminal_relationship FOR connector;
   END_ENTITY;



   ENTITY printed_connector_template_terminal_relationship;
      join_terminal : printed_part_template_join_terminal;
      interface_terminal : printed_part_template_interface_terminal;
      connector : printed_connector_template;
   UNIQUE
      ur1 : join_terminal, connector;
      ur2 : interface_terminal, connector;
   END_ENTITY;



   ENTITY printed_part_cross_section_template
   SUBTYPE OF (part_template);
      horizontal_material_link : OPTIONAL SET [1:?] OF printed_part_template_material_link;
      vertical_material_link : OPTIONAL SET [1:?] OF printed_part_template_material_link;
      transmission_line_model : analytical_model;
      maximum_transmission_line_characteristic : OPTIONAL SET [1:?] OF analytical_representation;
      minimum_transmission_line_characteristic : OPTIONAL SET [1:?] OF analytical_representation;
      maximum_width : length_measure_with_unit;
      minimum_width : length_measure_with_unit;
      start_vertex : edge_segment_vertex;
      end_vertex : edge_segment_vertex;
   INVERSE
      using_terminal : SET [1:?] OF printed_part_cross_section_template_terminal FOR cross_section_definition;
   WHERE
      WR1:
         SIZEOF(QUERY (hml <* horizontal_material_link| NOT (hml.precedent_material\shape_element.name IN [ 'right' ]))) = 0;
      WR2:
         SIZEOF(QUERY (hml <* horizontal_material_link| NOT (hml.subsequent_material\shape_element.name IN [ 'left' ]))) = 0;
      WR3:
         SIZEOF(QUERY (hml <* vertical_material_link| NOT (hml.precedent_material\shape_element.name IN [ 'bottom' ]))) = 0;
      WR4:
         SIZEOF(QUERY (hml <* vertical_material_link| NOT (hml.precedent_material\shape_element.name IN [ 'top' ]))) = 0;
      WR5:
         horizontal_material_link :<>: vertical_material_link;
      WR6:
         start_vertex :<>: end_vertex;
   END_ENTITY;



   ENTITY printed_part_cross_section_template_terminal
   SUBTYPE OF (printed_part_template_terminal);
      cross_section_definition : printed_part_cross_section_template;
      material_to_left_of_terminal : OPTIONAL printed_part_template_material_link;
      material_to_right_of_terminal : OPTIONAL printed_part_template_material_link;
      material_to_top_of_terminal : OPTIONAL printed_part_template_material_link;
      material_to_bottom_of_terminal : OPTIONAL printed_part_template_material_link;
   UNIQUE
      ur1 : cross_section_definition, material_to_left_of_terminal, material_to_right_of_terminal, material_to_top_of_terminal, material_to_bottom_of_terminal;
   WHERE
      WR1:
         (SELF\printed_part_template_terminal.connection_zone_category = curve_edge_segment) OR (SELF\printed_part_template_terminal.connection_zone_category = area_edge_segment);
      WR2:
         NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_right_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_right_of_terminal);
      WR3:
         NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_top_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_top_of_terminal);
      WR4:
         NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_bottom_of_terminal);
      WR5:
         NOT (EXISTS(material_to_right_of_terminal) AND EXISTS(material_to_top_of_terminal)) OR (material_to_right_of_terminal :<>: material_to_top_of_terminal);
      WR6:
         NOT (EXISTS(material_to_right_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_right_of_terminal :<>: material_to_bottom_of_terminal);
      WR7:
         NOT (EXISTS(material_to_top_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_top_of_terminal :<>: material_to_bottom_of_terminal);
   END_ENTITY;



   ENTITY printed_part_template
   SUPERTYPE OF (ONEOF(layout_macro_floor_plan_template, printed_connector_template))
   SUBTYPE OF (part_template);
      of_stratum_technology : OPTIONAL SET [1:?] OF stratum_technology;
      material_stack : OPTIONAL SET [1:?] OF stratum_technology_link;
      printed_part_template_stack : OPTIONAL SET [1:?] OF printed_part_template_link;
      implemented_function : OPTIONAL functional_unit_usage_view;
   DERIVE
      access_mechanisms : SET [1:?] OF printed_part_template_terminal := raw_access_mechanisms + printed_part_template_access_mechanisms(printed_part_template_stack);
      footprint_implementation : BOOLEAN := SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'FOOTPRINT_DEFINITION.REFERENCE_PACKAGE')) > 0;
      a : BOOLEAN := NOT EXISTS(of_stratum_technology);
      b : BOOLEAN := NOT EXISTS(material_stack);
      c : BOOLEAN := NOT EXISTS(printed_part_template_stack);
      d : BOOLEAN := NOT footprint_implementation;
   INVERSE
      raw_access_mechanisms : SET [0:?] OF printed_part_template_terminal FOR associated_definition;
   WHERE
      WR1:
         (((a AND b) AND c OR (a AND b) AND d) OR (a AND c) AND d) OR (b AND c) AND d;
      WR2:
         (SIZEOF(QUERY (prpc <* USEDIN(associated_definition\ee_product_definition.version.versioned_item, 'AP210_ARM_EXTENDED.EE_PRODUCT_RELATED_PRODUCT_CATEGORY.OF_PRODUCT')| (prpc.name = 'printed part'))) >= 0) OR ('AP210_ARM_EXTENDED.LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE' IN TYPEOF(SELF));
      WR3:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'FOOTPRINT_DEFINITION.REFERENCE_PACKAGE')) < 2;
   END_ENTITY;



   ENTITY printed_part_template_connected_terminals_definition;
      connected_terminals : SET [2:?] OF printed_part_template_terminal;
      name : ee_name;
   UNIQUE
      ur1 : name;
   END_ENTITY;



   ENTITY printed_part_template_interface_terminal
   SUBTYPE OF (printed_part_template_terminal);
      SELF\printed_part_template_terminal.associated_definition : printed_connector_template;
   INVERSE
      external_connector_function : SET [1:?] OF printed_connector_template_terminal_relationship FOR interface_terminal;
   END_ENTITY;



   ENTITY printed_part_template_join_terminal
   SUBTYPE OF (printed_part_template_terminal);
   INVERSE
      internal_connector_function : SET [0:1] OF printed_connector_template_terminal_relationship FOR join_terminal;
   END_ENTITY;



   ENTITY printed_part_template_link
   SUBTYPE OF (stratum_technology_link);
      precedent_printed_part_template : printed_part_template;
      subsequent_printed_part_template : printed_part_template;
   INVERSE
      associated_printed_part_template : printed_part_template FOR printed_part_template_stack;
   WHERE
      WR1:
         EXISTS(precedent_printed_part_template.of_stratum_technology);
      WR2:
         EXISTS(subsequent_printed_part_template.of_stratum_technology);
      WR3:
         precedent_printed_part_template.of_stratum_technology[1] = SELF\stratum_technology_link.precedent_stratum_technology;
      WR4:
         subsequent_printed_part_template.of_stratum_technology[1] = SELF\stratum_technology_link.subsequent_stratum_technology;
      WR5:
         SIZEOF(precedent_printed_part_template.of_stratum_technology) = 1;
      WR6:
         SIZEOF(subsequent_printed_part_template.of_stratum_technology) = 1;
   END_ENTITY;



   ENTITY printed_part_template_material;
      maximum_width : OPTIONAL length_measure_with_unit;
      minimum_width : OPTIONAL length_measure_with_unit;
      required_material : stratum_technology;
   INVERSE
      boundary : SET [0:4] OF template_material_cross_section_boundary FOR associated_definition;
   WHERE
      WR1:
         SIZEOF(QUERY (temp <* USEDIN(SELF, 'AP210_ARM_EXTENDED.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')| (temp\shape_element.name = 'top'))) <= 1;
      WR2:
         SIZEOF(QUERY (temp <* USEDIN(SELF, 'AP210_ARM_EXTENDED.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')| (temp\shape_element.name = 'bottom'))) <= 1;
      WR3:
         SIZEOF(QUERY (temp <* USEDIN(SELF, 'AP210_ARM_EXTENDED.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')| (temp\shape_element.name = 'left'))) <= 1;
      WR4:
         SIZEOF(QUERY (temp <* USEDIN(SELF, 'AP210_ARM_EXTENDED.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')| (temp\shape_element.name = 'right'))) <= 1;
   END_ENTITY;



   ENTITY printed_part_template_material_link;
      precedent_material : template_material_cross_section_boundary;
      subsequent_material : template_material_cross_section_boundary;
   UNIQUE
      ur1 : precedent_material, subsequent_material;
   WHERE
      WR1:
         precedent_material :<>: subsequent_material;
      WR2:
         precedent_material\shape_element.name IN [ 'bottom', 'right' ];
      WR3:
         subsequent_material\shape_element.name IN [ 'top', 'left' ];
   END_ENTITY;



   ENTITY printed_part_template_terminal
   ABSTRACT SUPERTYPE OF (printed_part_cross_section_template_terminal ANDOR ONEOF(printed_part_template_join_terminal, printed_part_template_interface_terminal))
   SUBTYPE OF (shape_element);
      associated_definition : printed_part_template;
      connection_zone_category : printed_part_template_terminal_class;
      terminal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
      SELF\shape_element.name : ee_name;
   INVERSE
      connection_requirement : SET [0:1] OF printed_part_template_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal : SET [0:1] OF functional_usage_view_to_printed_part_template_terminal_assignment FOR physical_usage_view_terminal;
      feature_shape : SET [1:?] OF usage_concept_usage_relationship FOR associated_usage;
   UNIQUE
      ur1 : SELF\shape_element.name, associated_definition;
   END_ENTITY;



   ENTITY printed_part_template_terminal_relationship;
      related_printed_part_terminal : printed_part_template_terminal;
      relating_printed_part_terminal : printed_part_template_terminal;
   END_ENTITY;



   ENTITY probe_access_area
   SUPERTYPE OF (internal_probe_access_area)
   SUBTYPE OF (laminate_component);
      probed_layout_item : stratum_feature;
      probe_contact_zone : connection_zone;
   INVERSE
      network : physical_network FOR probe;
   END_ENTITY;



   ENTITY process_specification
   SUPERTYPE OF (ONEOF(assembly_technology_specification, fabrication_technology_specification, lead_form_specification))
   SUBTYPE OF (ee_specification);
   END_ENTITY;



   ENTITY product_association;
      relating_product : ee_product_version;
      related_product : SET [1:?] OF ee_product_version;
      constraint_source : ee_specification;
   UNIQUE
      ur1 : constraint_source, relating_product;
   END_ENTITY;



   ENTITY profile_boundary_definition
   SUPERTYPE OF (profile_boundary_definition_with_offsets)
   SUBTYPE OF (boundary_zone_definition_with_specified_size);
      basic_profile : true_profile;
      SELF\tolerance_zone_boundary_definition.defined_zone_boundary : tolerance_zone_opposing_boundary_set;
   END_ENTITY;



   ENTITY profile_boundary_definition_with_offsets
   SUBTYPE OF (profile_boundary_definition);
      SELF\tolerance_zone_boundary_definition.defined_zone_boundary : tolerance_zone_explicit_opposing_boundary_set;
      boundary_offsets : SET [2:2] OF tolerance_zone_boundary_member_offset;
   END_ENTITY;



   ENTITY profile_of_any_line_tolerance
   ABSTRACT SUPERTYPE OF (ONEOF(profile_of_any_line_tolerance_with_referenced_datum_system, profile_of_any_line_tolerance_without_referenced_datum_system) ANDOR composite_linear_profile_refinement_tolerance)
   SUBTYPE OF (geometric_tolerance);
   END_ENTITY;



   ENTITY profile_of_any_line_tolerance_with_referenced_datum_system
   SUPERTYPE OF (composite_linear_profile_locating_tolerance)
   SUBTYPE OF (profile_of_any_line_tolerance, geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY profile_of_any_line_tolerance_without_referenced_datum_system
   SUBTYPE OF (profile_of_any_line_tolerance, geometric_tolerance_without_referenced_datum_system);
   END_ENTITY;



   ENTITY profile_of_any_surface_tolerance
   ABSTRACT SUPERTYPE OF (ONEOF(profile_of_any_surface_tolerance_with_referenced_datum_system, profile_of_any_surface_tolerance_without_referenced_datum_system) ANDOR composite_surface_profile_refinement_tolerance)
   SUBTYPE OF (geometric_tolerance);
   END_ENTITY;



   ENTITY profile_of_any_surface_tolerance_with_referenced_datum_system
   SUPERTYPE OF (composite_surface_profile_locating_tolerance)
   SUBTYPE OF (profile_of_any_surface_tolerance, geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY profile_of_any_surface_tolerance_without_referenced_datum_system
   SUBTYPE OF (profile_of_any_surface_tolerance, geometric_tolerance_without_referenced_datum_system);
   END_ENTITY;



   ENTITY profile_related_positional_boundary
   SUBTYPE OF (positional_boundary);
   INVERSE
      associating_relationship : positional_boundary_and_profile_boundary_member_relationship FOR offset_positional_boundary;
   END_ENTITY;



   ENTITY profile_related_positional_boundary_definition
   SUBTYPE OF (positional_boundary_definition);
      SELF\positional_boundary_definition.defined_positional_boundary : profile_related_positional_boundary;
      boundary_offset : positional_boundary_offset;
   END_ENTITY;



   ENTITY projected_tolerance_zone_definition
   SUBTYPE OF (tolerance_zone_definition);
      projected_zone_height : projected_zone_height_characteristic;
   END_ENTITY;



   ENTITY projected_zone_and_base_relationship;
      base_physical_feature : physical_feature_or_part_template;
      projected_zone : tolerance_zone;
   INVERSE
      size_characteristic : projected_zone_height_characteristic FOR defined_height_of;
   END_ENTITY;



   ENTITY projected_zone_height_characteristic;
      defined_height_of : projected_zone_and_base_relationship;
      projected_height_value : length_measure_with_unit;
   INVERSE
      zone_definition : projected_tolerance_zone_definition FOR projected_zone_height;
   END_ENTITY;



   ENTITY promissory_usage_in_product_model_relationship;
      component : ee_product_definition;
      security_code : OPTIONAL security_classification;
      product_model : ee_product_model;
   END_ENTITY;



   ENTITY promissory_usage_relationship;
      component : physical_unit;
      security_code : OPTIONAL security_classification;
      assembly : physical_unit_design_view;
   UNIQUE
      ur1 : component, assembly;
   END_ENTITY;



   ENTITY protocol_physical_layer_definition
   SUBTYPE OF (ee_product_definition);
      host_connector : OPTIONAL minimally_defined_connector;
      host_functional_definition : functional_unit_usage_view;
      host_rcv_functional_characterization : OPTIONAL functional_specification_definition;
      host_xmt_functional_characterization : OPTIONAL functional_specification_definition;
      media_connector : OPTIONAL minimally_defined_connector;
      media_functional_characterization : OPTIONAL functional_specification_definition;
      media_functional_definition : OPTIONAL functional_unit_usage_view;
   DERIVE
      reference_document : SET [1:1] OF ee_document := SELF\ee_product_definition.documentation;
   WHERE
      WR1:
         EXISTS(SELF\ee_product_definition.documentation);
      WR2:
         SIZEOF(SELF\ee_product_definition.documentation) = 1;
      WR3:
         EXISTS(host_functional_definition) OR EXISTS(media_functional_definition);
   END_ENTITY;



   ENTITY protocol_requirement_allocation_to_part_terminal
   SUBTYPE OF (requirement_allocation);
      SELF\requirement_allocation.target_product_object : part_terminal;
      SELF\requirement_allocation.allocated_requirement : interface_requirement_occurrence;
      protocol_signal : functional_unit_usage_view_terminal_definition;
   WHERE
      WR1:
         EXISTS(SELF\requirement_allocation.allocated_requirement.reference_protocol);
      WR2:
         protocol_signal IN SELF\requirement_allocation.allocated_requirement.reference_protocol.host_functional_definition\functional_unit_usage_view.access_mechanism;
   END_ENTITY;



   ENTITY purpose_occurrence
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY qualitative_uncertainty
   SUBTYPE OF (uncertainty_qualifier);
      uncertainty_value : text;
   END_ENTITY;



   ENTITY quasi_uniform_curve
   SUBTYPE OF (b_spline_curve);
   END_ENTITY;



   ENTITY quasi_uniform_surface
   SUBTYPE OF (b_spline_surface);
   END_ENTITY;



   ENTITY radius_edge_feature_shape
   SUBTYPE OF (edge_shape);
      minimum_radius_length : length_measure_with_unit;
      maximum_radius_length : length_measure_with_unit;
   END_ENTITY;



   ENTITY range_characteristic
   SUBTYPE OF (coordinated_characteristic);
      SELF\coordinated_characteristic.component_characteristic : SET [2:2] OF numeric_parameter;
      range_type : range_class;
   END_ENTITY;



   ENTITY ratio_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.RATIO_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY ratio_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY rational_b_spline_curve
   SUBTYPE OF (b_spline_curve);
      weights_data : LIST [2:?] OF REAL;
   DERIVE
      weights : ARRAY [0:upper_index_on_control_points] OF REAL := list_to_array(weights_data, 0, upper_index_on_control_points);
   WHERE
      WR1:
         SIZEOF(weights_data) = SIZEOF(SELF\b_spline_curve.control_points_list);
      WR2:
         curve_weights_positive(SELF);
   END_ENTITY;



   ENTITY rational_b_spline_surface
   SUBTYPE OF (b_spline_surface);
      weights_data : LIST [2:?] OF LIST [2:?] OF REAL;
   DERIVE
      weights : ARRAY [0:u_upper] OF ARRAY [0:v_upper] OF REAL := make_array_of_array(weights_data, 0, u_upper, 0, v_upper);
   WHERE
      WR1:
         (SIZEOF(weights_data) = SIZEOF(SELF\b_spline_surface.control_points_list)) AND (SIZEOF(weights_data[1]) = SIZEOF(SELF\b_spline_surface.control_points_list[1]));
      WR2:
         surface_weights_positive(SELF);
   END_ENTITY;



   ENTITY rectangular_area
   SUBTYPE OF (primitive_2d);
      position : axis2_placement_2d;
      x : positive_length_measure;
      y : positive_length_measure;
   END_ENTITY;



   ENTITY rectangular_array_placement_group_component
   SUBTYPE OF (array_placement_group);
      element : SET [1:?] OF linear_array_placement_group_component_link;
      initial_row_positive_y_displacement : length_measure_with_unit;
      terminus_row_positive_y_displacement : length_measure_with_unit;
      location_uncertainty : length_measure_with_unit;
   END_ENTITY;



   ENTITY rectangular_composite_surface
   SUBTYPE OF (bounded_surface);
      segments : LIST [1:?] OF LIST [1:?] OF surface_patch;
   DERIVE
      n_u : INTEGER := SIZEOF(segments);
      n_v : INTEGER := SIZEOF(segments[1]);
   WHERE
      WR1:
         SIZEOF(QUERY (s <* segments| (n_v <> SIZEOF(s)))) = 0;
      WR2:
         constraints_rectangular_composite_surface(SELF);
   END_ENTITY;



   ENTITY rectangular_pyramid
   SUBTYPE OF (geometric_representation_item);
      position : axis2_placement_3d;
      xlength : positive_length_measure;
      ylength : positive_length_measure;
      height : positive_length_measure;
   END_ENTITY;



   ENTITY rectangular_trimmed_surface
   SUBTYPE OF (bounded_surface);
      basis_surface : surface;
      u1 : parameter_value;
      u2 : parameter_value;
      v1 : parameter_value;
      v2 : parameter_value;
      usense : BOOLEAN;
      vsense : BOOLEAN;
   WHERE
      WR1:
         u1 <> u2;
      WR2:
         v1 <> v2;
      WR3:
         (('AP210_ARM_EXTENDED.ELEMENTARY_SURFACE' IN TYPEOF(basis_surface)) AND NOT ('AP210_ARM_EXTENDED.PLANE' IN TYPEOF(basis_surface)) OR ('AP210_ARM_EXTENDED.SURFACE_OF_REVOLUTION' IN TYPEOF(basis_surface))) OR (usense = (u2 > u1));
      WR4:
         (('AP210_ARM_EXTENDED.SPHERICAL_SURFACE' IN TYPEOF(basis_surface)) OR ('AP210_ARM_EXTENDED.TOROIDAL_SURFACE' IN TYPEOF(basis_surface))) OR (vsense = (v2 > v1));
   END_ENTITY;



   ENTITY reference_composition_path;
      path_element : SET [1:?] OF functional_unit;
      reference_functional_unit : functional_unit;
   END_ENTITY;



   ENTITY reference_functional_unit_assignment_to_part;
      functional_design_definition_path : reference_composition_path;
      implementation : physical_unit_or_part_template;
      of_property : OPTIONAL SET [1:?] OF coordinated_characteristic;
      path_alias : ee_name;
      swap_code : OPTIONAL STRING;
   UNIQUE
      ur1 : implementation, path_alias;
   END_ENTITY;



   ENTITY reference_geometric_representation_relationship
   SUBTYPE OF (geometric_representation_relationship);
      related_feature_shape_placement : OPTIONAL axis2_placement_or_cto2d;
   DERIVE
      related_feature_shape : feature_shape_definition := SELF\geometric_representation_relationship.shape_1;
      resultant_feature_shape : feature_shape_definition := SELF\geometric_representation_relationship.shape_2;
   WHERE
      WR1:
         EXISTS(related_feature_shape_placement) OR (related_feature_shape.geometric_context :=: resultant_feature_shape.geometric_context);
      WR2:
         SIZEOF([ 'AP210_ARM_EXTENDED.ASSEMBLY_COMPONENT_2D_SHAPE', 'AP210_ARM_EXTENDED.PART_TEMPLATE_PLANAR_SHAPE', 'AP210_ARM_EXTENDED.FOOTPRINT_DEFINITION_SHAPE', 'AP210_ARM_EXTENDED.PADSTACK_DEFINITION_SHAPE', 'AP210_ARM_EXTENDED.DESIGN_INTENT_MODIFICATION_PLANAR_SHAPE', 'AP210_ARM_EXTENDED.STRATUM_FEATURE_PLANAR_SHAPE', 'AP210_ARM_EXTENDED.STRATUM_PLANAR_SHAPE', 'AP210_ARM_EXTENDED.PART_TEMPLATE_3D_SHAPE' ] * TYPEOF(related_feature_shape)) = 0;
      WR3:
         NOT ((SIZEOF([ 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_PLANAR_SHAPE', 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_3D_SHAPE' ] * TYPEOF(related_feature_shape)) = 1) AND ('AP210_ARM_EXTENDED.ASSEMBLY_MODULE' IN TYPEOF(related_feature_shape.shape_characterized_physical_unit))) OR NOT EXISTS(related_feature_shape_placement);
      WR4:
         NOT ((SIZEOF([ 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_PLANAR_SHAPE', 'AP210_ARM_EXTENDED.PHYSICAL_UNIT_3D_SHAPE' ] * TYPEOF(related_feature_shape)) = 1) AND ('AP210_ARM_EXTENDED.INTERCONNECT_MODULE' IN TYPEOF(related_feature_shape.shape_characterized_physical_unit))) OR NOT EXISTS(related_feature_shape_placement);
   END_ENTITY;



   ENTITY reference_graphic_registration_mark
   SUBTYPE OF (non_feature_shape_element);
   END_ENTITY;



   ENTITY reference_packaged_part_assembly_implementation
   SUBTYPE OF (assembly_module);
   WHERE
      WR1:
         SIZEOF(QUERY (prpc <* USEDIN(SELF\ee_product_definition.version.versioned_item, 'AP210_ARM_EXTENDED.EE_PRODUCT_RELATED_PRODUCT_CATEGORY.OF_PRODUCT')| NOT (SIZEOF(QUERY (epcr <* USEDIN(prpc, 'AP210_ARM_EXTENDED.EE_PRODUCT_CATEGORY_RELATIONSHIP.CATEGORY')| (epcr.sub_category\ee_product_category.name = 'template model'))) = 1))) = 0;
   END_ENTITY;



   ENTITY reference_packaged_part_interconnect_implementation
   SUBTYPE OF (interconnect_module);
   WHERE
      WR1:
         SIZEOF(QUERY (prpc <* USEDIN(SELF\ee_product_definition.version.versioned_item, 'AP210_ARM_EXTENDED.EE_PRODUCT_RELATED_PRODUCT_CATEGORY.OF_PRODUCT')| NOT (SIZEOF(QUERY (epcr <* USEDIN(prpc, 'AP210_ARM_EXTENDED.EE_PRODUCT_CATEGORY_RELATIONSHIP.CATEGORY')| (epcr.sub_category\ee_product_category.name = 'template model'))) = 1))) = 0;
   END_ENTITY;



   ENTITY registered_font;
      registration_document : ee_document;
      font_code : STRING;
   UNIQUE
      ur1 : font_code, registration_document;
   END_ENTITY;



   ENTITY relative_event_occurrence
   SUBTYPE OF (event_occurrence);
      base_event : event_occurrence;
      offset : time_measure_with_unit;
   END_ENTITY;



   ENTITY reparametrised_composite_curve_segment
   SUBTYPE OF (composite_curve_segment);
      param_length : parameter_value;
   WHERE
      WR1:
         param_length > 0.00000;
   END_ENTITY;



   ENTITY representation;
      name : label;
      items : SET [1:?] OF representation_item;
      context_of_items : representation_context;
   DERIVE
      id : identifier := get_id_value(SELF);
      description : text := get_description_value(SELF);
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
      WR2:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
   END_ENTITY;



   ENTITY representation_context;
      context_identifier : identifier;
      context_type : text;
   INVERSE
      representations_in_context : SET [1:?] OF representation FOR context_of_items;
   END_ENTITY;



   ENTITY representation_item;
      name : label;
   WHERE
      WR1:
         SIZEOF(using_representations(SELF)) > 0;
   END_ENTITY;



   ENTITY representation_item_relationship;
      name : label;
      description : OPTIONAL text;
      relating_representation_item : representation_item;
      related_representation_item : representation_item;
   END_ENTITY;



   ENTITY representation_map;
      mapping_origin : representation_item;
      mapped_representation : representation;
   INVERSE
      map_usage : SET [1:?] OF mapped_item FOR mapping_source;
   WHERE
      WR1:
         item_in_context(SELF.mapping_origin, SELF.mapped_representation.context_of_items);
   END_ENTITY;



   ENTITY requirement_allocation
   SUPERTYPE OF (ONEOF(assembly_requirement_allocation, functional_unit_requirement_allocation, test_requirement_allocation));
      target_product_object : product_object_select;
      allocated_requirement : ee_requirement_occurrence;
      requirement_allocation_approval : OPTIONAL SET [1:?] OF ee_approval;
      identifier : OPTIONAL ee_name;
   UNIQUE
      ur1 : identifier, target_product_object;
   END_ENTITY;



   ENTITY requirement_composition;
      element : requirement_definition;
      composition : requirement_definition;
      identifier : ee_name;
   UNIQUE
      ur1 : identifier, composition;
   WHERE
      WR1:
         element :<>: composition;
   END_ENTITY;



   ENTITY requirement_definition
   SUBTYPE OF (ee_product_definition);
   INVERSE
      associated_requirement_occurrence : ee_requirement_occurrence FOR associated_definition;
   END_ENTITY;



   ENTITY resistance_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\measure_with_unit || SELF\resistance_measure_with_unit)) = 0;
      WR2:
         SELF\measure_with_unit.unit_component\si_unit.name = ohm;
      WR3:
         'AP210_ARM_EXTENDED.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
      WR4:
         'AP210_ARM_EXTENDED.NUMERIC_MEASURE' IN TYPEOF(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY restraint_condition
   SUPERTYPE OF (tolerance_specific_restraint_condition);
      restraint_description : ee_requirement_occurrence;
      applied_to : restrained_item_select;
   END_ENTITY;



   ENTITY revolved_face_solid
   SUBTYPE OF (swept_face_solid);
      axis : axis1_placement;
      angle : plane_angle_measure;
   DERIVE
      axis_line : line := representation_item('') || geometric_representation_item() || curve() || line(axis.location, representation_item('') || geometric_representation_item() || vector(axis.z, 1.00000));
   END_ENTITY;



   ENTITY right_angular_wedge
   SUBTYPE OF (geometric_representation_item);
      position : axis2_placement_3d;
      x : positive_length_measure;
      y : positive_length_measure;
      z : positive_length_measure;
      ltx : length_measure;
   WHERE
      WR1:
         (0.00000 <= ltx) AND (ltx < x);
   END_ENTITY;



   ENTITY right_circular_cone
   SUBTYPE OF (geometric_representation_item);
      position : axis1_placement;
      height : positive_length_measure;
      radius : length_measure;
      semi_angle : plane_angle_measure;
   WHERE
      WR1:
         radius >= 0.00000;
   END_ENTITY;



   ENTITY right_circular_cylinder
   SUBTYPE OF (geometric_representation_item);
      position : axis1_placement;
      height : positive_length_measure;
      radius : positive_length_measure;
   END_ENTITY;



   ENTITY routed_cable_component_2d_shape
   SUBTYPE OF (assembly_component_2d_shape);
      cable_path_shape : SET [1:?] OF curve;
      connector_placement : SET [1:?] OF sub_model_placement;
      junction_placement : OPTIONAL SET [1:?] OF representation_item_relationship;
      SELF\assembly_component_2d_shape.shape_characterized_component : SET [1:1] OF cable_component;
   END_ENTITY;



   ENTITY routed_cable_component_3d_shape
   SUBTYPE OF (assembly_component_3d_shape);
      cable_path_shape : SET [1:?] OF curve_swept_solid;
      connector_placement : SET [1:?] OF sub_model_placement;
      junction_placement : OPTIONAL SET [1:?] OF representation_item_relationship;
      SELF\assembly_component_3d_shape.shape_characterized_component : SET [1:1] OF cable_component;
   END_ENTITY;



   ENTITY routed_interconnect_component
   SUBTYPE OF (physical_component);
      routed_centreline_shape : curve;
   END_ENTITY;



   ENTITY routed_physical_component
   SUBTYPE OF (physical_component);
      routed_centreline_shape : curve;
   END_ENTITY;



   ENTITY routed_printed_component
   SUBTYPE OF (printed_component);
      routed_centreline_shape : curve;
      SELF\assembly_component.usage_definition : printed_part_cross_section_template;
      component_extent : inter_stratum_extent;
   END_ENTITY;



   ENTITY rule_action
   ABSTRACT SUPERTYPE OF (ONEOF(rule_submission, rule_adoption, rule_rejection, rule_supersedence, rule_creation, rule_expiration, rule_change_request, rule_request, rule_modification));
      subject_action_assignment : participant_date_and_time_assignment;
      subject_rule : rule_version;
   UNIQUE
      ur1 : subject_rule, subject_action_assignment;
   END_ENTITY;



   ENTITY rule_adoption
   SUBTYPE OF (rule_action);
   END_ENTITY;



   ENTITY rule_based_evaluated_characteristic
   SUBTYPE OF (evaluated_characteristic);
      evaluating_rule : rule_definition;
   END_ENTITY;



   ENTITY rule_boolean_function
   SUBTYPE OF (rule_function);
   WHERE
      WR1:
         SIZEOF(SELF\rule_function.range_parameter) = 1;
   END_ENTITY;



   ENTITY rule_change_request
   SUBTYPE OF (rule_action);
      change_reason : STRING;
   END_ENTITY;



   ENTITY rule_complex_clause;
      conjunctive_content : SET [1:?] OF rule_simple_clause;
      identifier : STRING;
   UNIQUE
      ur1 : identifier;
   END_ENTITY;



   ENTITY rule_conclusion_definition;
      rule_definition : rule_definition;
      identifier : STRING;
      conjunctive_content : SET [1:?] OF rule_simple_clause;
   UNIQUE
      ur1 : rule_definition, identifier;
   END_ENTITY;



   ENTITY rule_creation
   SUBTYPE OF (rule_action);
   END_ENTITY;



   ENTITY rule_definition
   SUBTYPE OF (ee_product_definition);
      SELF\ee_product_definition.version : rule_version;
   INVERSE
      premise : rule_premise_definition FOR rule_definition;
      conclusion : rule_conclusion_definition FOR rule_definition;
   END_ENTITY;



   ENTITY rule_expiration
   SUBTYPE OF (rule_action);
      expiration_rationale : STRING;
   END_ENTITY;



   ENTITY rule_function
   SUPERTYPE OF (rule_boolean_function);
      identifier : STRING;
      representation_language : language_reference_manual;
      reference_document : ee_document;
      source_code : ee_specification;
   INVERSE
      domain_parameter : SET [1:?] OF rule_function_domain_parameter FOR accessed_rule_function;
      range_parameter : SET [1:?] OF rule_function_range_parameter FOR accessed_rule_function;
   UNIQUE
      ur1 : identifier, reference_document;
   END_ENTITY;



   ENTITY rule_function_domain_parameter
   SUBTYPE OF (model_parameter);
      accessed_rule_function : rule_function;
   UNIQUE
      ur1 : SELF\model_parameter.parameter_id, accessed_rule_function;
   END_ENTITY;



   ENTITY rule_function_range_parameter
   SUBTYPE OF (model_parameter);
      accessed_rule_function : rule_function;
   UNIQUE
      ur1 : SELF\model_parameter.parameter_id, accessed_rule_function;
   END_ENTITY;



   ENTITY rule_general_clause;
      rule_function : rule_function;
      parameter : SET [1:?] OF parameter_assignment_or_rule_general_clause;
   END_ENTITY;



   ENTITY rule_justification;
      justified_action : rule_action;
      justification_rationale : STRING;
   END_ENTITY;



   ENTITY rule_modification
   SUBTYPE OF (rule_action);
      modification_rationale : rule_change_request;
   END_ENTITY;



   ENTITY rule_premise_definition;
      rule_definition : rule_definition;
      identifier : STRING;
      disjunctive_content : SET [1:?] OF rule_complex_or_simple;
   UNIQUE
      ur1 : rule_definition, identifier;
   END_ENTITY;



   ENTITY rule_priority;
      priority : INTEGER;
      prioritized_rule : rule_definition;
   WHERE
      WR1:
         priority >= 0;
   END_ENTITY;



   ENTITY rule_rejection
   SUBTYPE OF (rule_action);
      rejection_reason : STRING;
   END_ENTITY;



   ENTITY rule_request
   SUBTYPE OF (rule_action);
   END_ENTITY;



   ENTITY rule_set
   SUBTYPE OF (ee_product_definition);
      rule_member : SET [1:?] OF rule_priority;
   DERIVE
      purpose : ee_text := SELF\ee_product_definition.context_description;
   WHERE
      WR1:
         EXISTS(SELF\ee_product_definition.context_description);
   END_ENTITY;



   ENTITY rule_set_group
   SUBTYPE OF (ee_product_definition);
      elements : SET [2:?] OF rule_set;
   END_ENTITY;



   ENTITY rule_simple_clause;
      rule_function : rule_boolean_function;
      parameter : SET [1:?] OF parameter_assignment_or_rule_general_clause;
   END_ENTITY;



   ENTITY rule_submission
   SUBTYPE OF (rule_action);
      submission_rationale : STRING;
   END_ENTITY;



   ENTITY rule_supersedence
   SUBTYPE OF (rule_action);
      superseded_rule : rule_version;
   END_ENTITY;



   ENTITY rule_version
   SUBTYPE OF (ee_product_version);
   INVERSE
      management_action : SET [1:?] OF rule_action FOR subject_rule;
      product_definition : SET [1:?] OF rule_definition FOR version;
   END_ENTITY;



   ENTITY runout_tolerance_zone_definition_with_specified_angle
   SUBTYPE OF (tolerance_zone_definition);
      runout_orientation : runout_zone_orientation;
   END_ENTITY;



   ENTITY runout_tolerance_zone_orienting_relationship;
      oriented_zone : tolerance_zone;
      orienting_axis : directed_axis;
   INVERSE
      angular_size_characteristic : runout_zone_orientation FOR oriented_relationship;
   END_ENTITY;



   ENTITY runout_zone_orientation;
      oriented_relationship : runout_tolerance_zone_orienting_relationship;
      semi_angle_value : plane_angle_measure_with_unit;
   INVERSE
      zone_definition : runout_tolerance_zone_definition_with_specified_angle FOR runout_orientation;
   END_ENTITY;



   ENTITY scalar_terminal_definition
   SUBTYPE OF (functional_unit_usage_view_terminal_definition);
   END_ENTITY;



   ENTITY scalar_terminal_definition_link;
      precedent_terminal_definition : scalar_terminal_definition;
      subsequent_terminal_definition : scalar_terminal_definition;
   UNIQUE
      ur1 : precedent_terminal_definition, subsequent_terminal_definition;
   WHERE
      WR1:
         precedent_terminal_definition :<>: subsequent_terminal_definition;
   END_ENTITY;



   ENTITY schema_based_model_parameter
   SUBTYPE OF (model_parameter);
      entity_name : STRING;
      attribute_name : OPTIONAL STRING;
   DERIVE
      schema_identifier : STRING := SELF\model_parameter.type_name;
   UNIQUE
      ur1 : entity_name, attribute_name, schema_identifier;
   END_ENTITY;



   ENTITY seam_curve
   SUBTYPE OF (surface_curve);
   WHERE
      WR1:
         SIZEOF(SELF\surface_curve.associated_geometry) = 2;
      WR2:
         associated_surface(SELF\surface_curve.associated_geometry[1]) = associated_surface(SELF\surface_curve.associated_geometry[2]);
      WR3:
         'AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(SELF\surface_curve.associated_geometry[1]);
      WR4:
         'AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(SELF\surface_curve.associated_geometry[2]);
   END_ENTITY;



   ENTITY seating_plane
   SUBTYPE OF (non_feature_shape_element);
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.BARE_DIE', 'AP210_ARM_EXTENDED.PACKAGE' ] * TYPEOF(SELF\non_feature_shape_element.scope)) = 1;
   END_ENTITY;



   ENTITY secondary_orientation_feature
   SUBTYPE OF (part_feature, datum_feature);
      associated_body_vertical_extent : OPTIONAL SET [1:2] OF package_body_surface;
   END_ENTITY;



   ENTITY security_classification;
      classification_officer : person_and_organization;
      security_classification_approval : ee_approval;
      classification_date : date_or_date_and_time;
      classification_level : ee_name;
      declassification_date : OPTIONAL date_or_date_and_time;
   END_ENTITY;



   ENTITY separate_geometric_tolerance_requirement;
      separated_geometric_tolerances : SET [1:?] OF geometric_tolerance_with_referenced_datum_system;
   END_ENTITY;



   ENTITY shape_and_ee_product_definition_based_constraint_occurrence
   SUBTYPE OF (ee_product_definition_based_constraint_occurrence);
      constraining_shape : SET [1:?] OF shape_definition;
   WHERE
      WR1:
         valid_constraining_shape(constraining_shape, SELF\ee_product_definition_based_constraint_occurrence.constraining_part);
   END_ENTITY;



   ENTITY shape_composition_relationship
   SUBTYPE OF (geometric_representation_relationship);
      related_feature_shape_placement : OPTIONAL axis2_placement_or_cto2d;
   DERIVE
      related_feature_shape : non_feature_shape_definition := SELF\geometric_representation_relationship.shape_1;
      resultant_feature_shape : non_feature_shape_definition := SELF\geometric_representation_relationship.shape_2;
   WHERE
      WR1:
         EXISTS(related_feature_shape_placement) OR (related_feature_shape.geometric_context :=: resultant_feature_shape.geometric_context);
   END_ENTITY;



   ENTITY shape_definition
   ABSTRACT SUPERTYPE OF (ONEOF(open_shell_based_surface, manifold_subsurface_shape, planar_shape) AND ONEOF(feature_shape_definition, non_feature_shape_definition))
   SUBTYPE OF (arm_supertype, shape_representation);
   END_ENTITY;



   ENTITY shape_definition_3d_intersection
   SUPERTYPE OF (ONEOF(edge_segment_cross_section, pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship, pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship, pre_defined_parallel_datum_axis_symbol_3d_2d_relationship))
   SUBTYPE OF (geometric_representation_relationship);
      orientation_intersection_plane : axis2_placement_3d;
      planar_shape_origin : axis2_placement_2d;
   DERIVE
      surface_intersection_result : planar_shape := SELF\geometric_representation_relationship.shape_1;
      projected_volume : shape_definition := SELF\geometric_representation_relationship.shape_2;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PLANAR_SHAPE' IN TYPEOF(projected_volume));
   END_ENTITY;



   ENTITY shape_definition_3d_plane_projection
   SUBTYPE OF (geometric_representation_relationship);
      viewing_plane : axis2_placement_3d;
      planar_shape_origin : axis2_placement_2d;
   DERIVE
      surface_projection_result : planar_shape := SELF\geometric_representation_relationship.shape_1;
      projected_volume : shape_definition := SELF\geometric_representation_relationship.shape_2;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PLANAR_SHAPE' IN TYPEOF(projected_volume));
   END_ENTITY;



   ENTITY shape_dimension_representation
   ABSTRACT SUPERTYPE OF (ONEOF(limit_dimension_representation, singular_dimension_representation, externally_defined_dimension_representation, plus_minus_tolerance_range_representation));
   END_ENTITY;



   ENTITY shape_element
   ABSTRACT SUPERTYPE OF (ONEOF(physical_feature_or_part_template, component_termination_passage_template_terminal, land_template_terminal, via_template_terminal, printed_part_template_terminal, non_feature_shape_element) ANDOR composite_shape_element);
      name : label;
      description : OPTIONAL label;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.COMPOSITE_SHAPE_ELEMENT' IN TYPEOF(SELF)) OR (SIZEOF(TYPEOF(SELF)) > 2);
      WR2:
         NOT (('AP210_ARM_EXTENDED.COMPOSITE_SHAPE_ELEMENT' IN TYPEOF(SELF)) AND ('AP210_ARM_EXTENDED.COMPONENT_TERMINATION_PASSAGE_TEMPLATE_TERMINAL' IN TYPEOF(SELF)));
      WR3:
         NOT (('AP210_ARM_EXTENDED.COMPOSITE_SHAPE_ELEMENT' IN TYPEOF(SELF)) AND ('AP210_ARM_EXTENDED.LAND_TEMPLATE_TERMINAL' IN TYPEOF(SELF)));
      WR4:
         NOT (('AP210_ARM_EXTENDED.COMPOSITE_SHAPE_ELEMENT' IN TYPEOF(SELF)) AND ('AP210_ARM_EXTENDED.VIA_TEMPLATE_TERMINAL' IN TYPEOF(SELF)));
   END_ENTITY;



   ENTITY shape_element_boundary_relationship
   SUBTYPE OF (shape_element_relationship);
   END_ENTITY;



   ENTITY shape_element_composing_relationship
   SUBTYPE OF (shape_element_constituent_relationship);
      SELF\shape_element_relationship.relating_shape_element : composite_shape_element;
   END_ENTITY;



   ENTITY shape_element_constituent_relationship
   SUPERTYPE OF (shape_element_composing_relationship)
   SUBTYPE OF (shape_element_relationship);
   UNIQUE
      ur1 : related_shape_element, relating_shape_element;
   WHERE
      WR1:
         SELF\shape_element_relationship.related_shape_element <> SELF\shape_element_relationship.relating_shape_element;
   END_ENTITY;



   ENTITY shape_element_deriving_relationship
   SUBTYPE OF (shape_element_relationship);
      SELF\shape_element_relationship.relating_shape_element : derived_shape_element;
   UNIQUE
      ur1 : SELF\shape_element_relationship.related_shape_element, SELF\shape_element_relationship.relating_shape_element;
   END_ENTITY;



   ENTITY shape_element_locating_relationship;
      locating_shape_element : shape_element;
      located_shape_element : shape_element;
   UNIQUE
      ur1 : located_shape_element, locating_shape_element;
   END_ENTITY;



   ENTITY shape_element_relationship
   ABSTRACT SUPERTYPE OF (ONEOF(parallel_shape_element_relationship, perpendicular_shape_element_relationship, datum_difference, non_feature_shape_element_relationship, shape_element_boundary_relationship, shape_element_constituent_relationship, shape_element_deriving_relationship) ANDOR datum_feature_usage_in_datum_relationship);
      relating_shape_element : shape_element;
      description : OPTIONAL label;
      related_shape_element : shape_element;
      name : OPTIONAL label;
   END_ENTITY;



   ENTITY shape_formed_terminal
   SUBTYPE OF (altered_package_terminal);
      terminal_form_specification : lead_form_specification;
   END_ENTITY;



   ENTITY shape_representation
   SUBTYPE OF (representation);
   END_ENTITY;



   ENTITY shell_based_surface_model
   SUBTYPE OF (geometric_representation_item);
      sbsm_boundary : SET [1:?] OF shell;
   WHERE
      WR1:
         constraints_geometry_shell_based_surface_model(SELF);
   END_ENTITY;



   ENTITY shell_based_wireframe_model
   SUBTYPE OF (geometric_representation_item);
      sbwm_boundary : SET [1:?] OF shell;
   WHERE
      WR1:
         constraints_geometry_shell_based_wireframe_model(SELF);
   END_ENTITY;



   ENTITY shell_based_wireframe_shape_representation
   SUBTYPE OF (shape_representation);
   WHERE
      WR1:
         SIZEOF(QUERY (it <* SELF.items| NOT (SIZEOF([ 'AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL', 'AP210_ARM_EXTENDED.MAPPED_ITEM', 'AP210_ARM_EXTENDED.AXIS2_PLACEMENT_3D' ] * TYPEOF(it)) = 1))) = 0;
      WR2:
         SIZEOF(QUERY (it <* SELF.items| (SIZEOF([ 'AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL', 'AP210_ARM_EXTENDED.MAPPED_ITEM' ] * TYPEOF(it)) = 1))) >= 1;
      WR3:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (ws <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(sb)))| NOT (SIZEOF(QUERY (eloop <* QUERY (wsb <* ws\wire_shell.wire_shell_extent| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(wsb)))| NOT (SIZEOF(QUERY (el <* eloop\path.edge_list| NOT ('AP210_ARM_EXTENDED.EDGE_CURVE' IN TYPEOF(el.edge_element)))) = 0))) = 0))) = 0))) = 0;
      WR4:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (ws <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(sb)))| NOT (SIZEOF(QUERY (eloop <* QUERY (wsb <* ws\wire_shell.wire_shell_extent| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(wsb)))| NOT (SIZEOF(QUERY (pline_el <* QUERY (el <* eloop\path.edge_list| ('AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(el.edge_element\edge_curve.edge_geometry)))| NOT (SIZEOF(pline_el.edge_element\edge_curve.edge_geometry\polyline.points) > 2))) = 0))) = 0))) = 0))) = 0;
      WR5:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (ws <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(sb)))| NOT (SIZEOF(QUERY (eloop <* QUERY (wsb <* ws\wire_shell.wire_shell_extent| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(wsb)))| NOT (SIZEOF(QUERY (el <* eloop\path.edge_list| NOT valid_wireframe_edge_curve(el.edge_element\edge_curve.edge_geometry))) = 0))) = 0))) = 0))) = 0;
      WR6:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (ws <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(sb)))| NOT (SIZEOF(QUERY (eloop <* QUERY (wsb <* ws\wire_shell.wire_shell_extent| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(wsb)))| NOT (SIZEOF(QUERY (el <* eloop\path.edge_list| NOT (('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(el.edge_element.edge_start)) AND ('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(el.edge_element.edge_end))))) = 0))) = 0))) = 0))) = 0;
      WR7:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (ws <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(sb)))| NOT (SIZEOF(QUERY (eloop <* QUERY (wsb <* ws\wire_shell.wire_shell_extent| ('AP210_ARM_EXTENDED.EDGE_LOOP' IN TYPEOF(wsb)))| NOT (SIZEOF(QUERY (el <* eloop\path.edge_list| NOT (valid_wireframe_vertex_point(el.edge_element.edge_start\vertex_point.vertex_geometry) AND valid_wireframe_vertex_point(el.edge_element.edge_end\vertex_point.vertex_geometry)))) = 0))) = 0))) = 0))) = 0;
      WR8:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (ws <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(sb)))| NOT (SIZEOF(QUERY (vloop <* QUERY (wsb <* ws\wire_shell.wire_shell_extent| ('AP210_ARM_EXTENDED.VERTEX_LOOP' IN TYPEOF(wsb)))| NOT ('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(vloop\vertex_loop.loop_vertex)))) = 0))) = 0))) = 0;
      WR9:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (ws <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(sb)))| NOT (SIZEOF(QUERY (vloop <* QUERY (wsb <* ws\wire_shell.wire_shell_extent| ('AP210_ARM_EXTENDED.VERTEX_LOOP' IN TYPEOF(wsb)))| NOT valid_wireframe_vertex_point(vloop\vertex_loop.loop_vertex\vertex_point.vertex_geometry))) = 0))) = 0))) = 0;
      WR10:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (vs <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.VERTEX_SHELL' IN TYPEOF(sb)))| NOT ('AP210_ARM_EXTENDED.VERTEX_POINT' IN TYPEOF(vs\vertex_shell.vertex_shell_extent.loop_vertex)))) = 0))) = 0;
      WR11:
         SIZEOF(QUERY (sbwm <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF(it)))| NOT (SIZEOF(QUERY (vs <* QUERY (sb <* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP210_ARM_EXTENDED.VERTEX_SHELL' IN TYPEOF(sb)))| NOT valid_wireframe_vertex_point(vs\vertex_shell.vertex_shell_extent.loop_vertex\vertex_point.vertex_geometry))) = 0))) = 0;
      WR12:
         SIZEOF(QUERY (mi <* QUERY (it <* SELF.items| ('AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(it)))| NOT ('AP210_ARM_EXTENDED.' + 'SHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)))) = 0;
      WR13:
         SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 3;
   END_ENTITY;



   ENTITY shield
   SUBTYPE OF (assembly_component);
      shielded_item : SET [1:?] OF shieldable_item;
   END_ENTITY;



   ENTITY shield_allocation
   SUBTYPE OF (electromagnetic_compatibility_requirement_allocation);
      SELF\requirement_allocation.target_product_object : shield;
      SELF\requirement_allocation.allocated_requirement : electromagnetic_requirement_occurrence;
   END_ENTITY;



   ENTITY si_unit
   SUBTYPE OF (named_unit);
      prefix : OPTIONAL si_prefix;
      name : si_unit_name;
   DERIVE
      SELF\named_unit.dimensions : dimensional_exponents := dimensions_for_si_unit(name);
   END_ENTITY;



   ENTITY signal;
      signal_category : external_definition;
   END_ENTITY;



   ENTITY signal_property
   SUPERTYPE OF (composite_signal_property);
      signal_property_representation : characteristic_data_table;
      characterized_signal : signal;
      signal_property_category : external_definition;
   END_ENTITY;



   ENTITY signal_specification;
      measurement_condition : test_specification;
      measurement_access_mechanism : functional_unit_terminal;
      reference_access_mechanism : OPTIONAL functional_unit_terminal;
      minimum_characteristic : signal_property;
      maximum_characteristic : signal_property;
      characterization_network : functional_unit_network_definition;
   END_ENTITY;



   ENTITY simultaneous_geometric_tolerance_requirement;
      grouped_geometric_tolerances : SET [2:?] OF geometric_tolerance;
   END_ENTITY;



   ENTITY single_boundary_dimension
   SUPERTYPE OF (curve_dimension)
   SUBTYPE OF (dimensional_size);
   END_ENTITY;



   ENTITY single_datum
   SUPERTYPE OF (edge_segment_vertex)
   SUBTYPE OF (datum);
   END_ENTITY;



   ENTITY singular_dimension_representation
   ABSTRACT SUPERTYPE OF (ONEOF(theoretically_exact_dimension_representation, maximum_dimension_representation, minimum_dimension_representation))
   SUBTYPE OF (shape_dimension_representation);
      dimension_value : measure_with_unit;
   END_ENTITY;



   ENTITY snowball_template
   SUBTYPE OF (material_addition_feature_template);
      snowball_start_distance : length_measure_with_unit;
      snowball_end_distance : OPTIONAL length_measure_with_unit;
      snowball_initial_spacing : OPTIONAL length_measure_with_unit;
      snowball_end_spacing : OPTIONAL length_measure_with_unit;
      snowball_initial_radius : length_measure_with_unit;
      snowball_end_radius : OPTIONAL length_measure_with_unit;
      snowball_quantity_per_trace : positive_integer;
   WHERE
      WR1:
         NOT (snowball_quantity_per_trace > 1) OR ((EXISTS(snowball_initial_spacing) AND EXISTS(snowball_end_spacing)) AND EXISTS(snowball_end_distance)) AND EXISTS(snowball_end_radius);
   END_ENTITY;



   ENTITY solid_angle_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY solid_angle_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY solid_curve;
   END_ENTITY;



   ENTITY solid_fill_style;
   END_ENTITY;



   ENTITY solid_model
   SUPERTYPE OF (ONEOF(csg_solid, manifold_solid_brep, swept_face_solid, swept_area_solid, solid_replica))
   SUBTYPE OF (geometric_representation_item);
   END_ENTITY;



   ENTITY solid_replica
   SUBTYPE OF (solid_model);
      parent_solid : solid_model;
      transformation : cartesian_transformation_operator_3d;
   WHERE
      WR1:
         acyclic_solid_replica(SELF, parent_solid);
      WR2:
         parent_solid\geometric_representation_item.dim = 3;
   END_ENTITY;



   ENTITY special_symbol_laminate_component
   SUPERTYPE OF (primary_stratum_indicator_symbol)
   SUBTYPE OF (laminate_component);
      SELF\assembly_component.usage_definition : special_symbol_part_template;
      stratum_feature_implementation : stratum_feature;
   END_ENTITY;



   ENTITY special_symbol_part_template
   SUBTYPE OF (part_template);
      of_stratum_technology : OPTIONAL SET [1:?] OF stratum_technology;
   END_ENTITY;



   ENTITY specification_allocation;
      allocated_specification : ee_specification;
      target_product_object : SET [1:?] OF specification_product_object_select;
      purpose : ee_name;
      identifier_in_target_context : OPTIONAL ee_name;
   DERIVE
      the_context : specification_product_object_select := target_product_object[1];
   UNIQUE
      ur1 : identifier_in_target_context, the_context;
   WHERE
      WR1:
         NOT EXISTS(identifier_in_target_context) OR (SIZEOF(target_product_object) = 1);
   END_ENTITY;



   ENTITY sphere
   SUBTYPE OF (geometric_representation_item);
      radius : positive_length_measure;
      centre : point;
   END_ENTITY;



   ENTITY spherical_surface
   SUBTYPE OF (elementary_surface);
      radius : positive_length_measure;
   END_ENTITY;



   ENTITY standard_uncertainty
   SUPERTYPE OF (expanded_uncertainty)
   SUBTYPE OF (uncertainty_qualifier);
      uncertainty_value : REAL;
   END_ENTITY;



   ENTITY start_order
   SUBTYPE OF (work_order);
   END_ENTITY;



   ENTITY start_request
   SUBTYPE OF (work_request);
   END_ENTITY;



   ENTITY statistical_dimensional_tolerance
   SUBTYPE OF (dimensional_characteristic);
      alternate_dimension : OPTIONAL dimensional_characteristic;
      statistical_control_requirement : ee_requirement_occurrence;
   END_ENTITY;



   ENTITY statistical_geometric_tolerance
   SUBTYPE OF (geometric_tolerance);
      alternate_tolerance : OPTIONAL geometric_tolerance;
      statistical_control_requirement : ee_requirement_occurrence;
   END_ENTITY;



   ENTITY statistical_tolerance_characteristic
   SUBTYPE OF (tolerance_characteristic);
   END_ENTITY;



   ENTITY step_edge_feature_shape
   SUBTYPE OF (edge_shape);
      minimum_step_width : length_measure_with_unit;
      maximum_step_width : length_measure_with_unit;
      maximum_step_depth : length_measure_with_unit;
      minimum_step_depth : length_measure_with_unit;
   END_ENTITY;



   ENTITY straightness_tolerance
   SUBTYPE OF (geometric_tolerance_without_referenced_datum_system);
   END_ENTITY;



   ENTITY stratum
   SUPERTYPE OF (ONEOF(documentation_layer_stratum, design_layer_stratum))
   SUBTYPE OF (ee_product_definition);
      stratum_usage : OPTIONAL external_definition;
      of_technology : stratum_technology;
   DERIVE
      name : ee_name := SELF\ee_product_definition.product_definition_id;
   INVERSE
      of_average_surface : SET [0:1] OF stratum_average_surface FOR of_stratum;
      of_surface : SET [1:2] OF stratum_surface FOR of_stratum;
      planar_shape : SET [0:1] OF stratum_planar_shape FOR shape_characterized_stratum;
      assembly : SET [1:?] OF interconnect_module_stratum_assembly_relationship FOR component;
      bound_volume_shape : SET [0:1] OF stratum_3d_shape FOR shape_characterized_stratum;
   END_ENTITY;



   ENTITY stratum_3d_shape
   SUBTYPE OF (feature_shape_definition);
      shape_characterized_stratum : stratum;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.PLANAR_SHAPE' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY stratum_average_surface;
      of_stratum : stratum;
   INVERSE
      of_shape : SET [0:1] OF stratum_average_surface_shape FOR of_surface;
   END_ENTITY;



   ENTITY stratum_average_surface_shape
   SUBTYPE OF (open_shell_based_surface);
      of_surface : stratum_average_surface;
   END_ENTITY;



   ENTITY stratum_concept_relationship
   ABSTRACT SUPERTYPE OF (ONEOF(stratum_feature_conductive_join, dielectric_crossover_area));
      resulting_shape : OPTIONAL feature_shape_definition;
      technology_requirement : SET [1:?] OF ee_requirement_occurrence;
   END_ENTITY;



   ENTITY stratum_concept_to_physical_usage_view_assignment;
      assigned_design_object : stratum_concept;
      defined_part_feature : part_feature;
      purpose : OPTIONAL ee_name;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.INTERCONNECT_MODULE_TERMINAL' IN TYPEOF(defined_part_feature));
   END_ENTITY;



   ENTITY stratum_embedded_component_join_relationship
   SUBTYPE OF (join_relationship);
      terminal_to_be_connected : SET [1:?] OF embedded_component_terminal;
      point_to_be_connected : SET [1:?] OF layer_connection_point;
   DERIVE
      associated_component : assembly_component := terminal_to_be_connected[1]\component_feature.associated_component;
   WHERE
      WR1:
         SIZEOF(QUERY (t <* terminal_to_be_connected| (t.associated_component <> associated_component))) = 0;
   END_ENTITY;



   ENTITY stratum_feature
   SUPERTYPE OF (ONEOF(conductor, conductive_filled_area) ANDOR fiducial_stratum_feature)
   SUBTYPE OF (physical_feature_or_part_template);
      resident_stratum : stratum;
      SELF\shape_element.name : ee_name;
      feature_of_size : BOOLEAN;
   UNIQUE
      ur1 : SELF\shape_element.name, resident_stratum;
   END_ENTITY;



   ENTITY stratum_feature_3d_shape
   SUBTYPE OF (feature_shape_definition);
      represented_stratum_feature : stratum_feature;
   END_ENTITY;



   ENTITY stratum_feature_conductive_join
   SUPERTYPE OF (physical_network_supporting_stratum_feature_conductive_join)
   SUBTYPE OF (stratum_concept_relationship);
      related_concept : stratum_feature_template_component;
      relating_concept : stratum_feature_template_component;
   INVERSE
      using_via : SET [0:1] OF bonded_conductive_base_blind_via FOR features_join;
   WHERE
      WR1:
         related_concept.stratum_feature_implementation.resident_stratum :<>: relating_concept.stratum_feature_implementation.resident_stratum;
   END_ENTITY;



   ENTITY stratum_feature_in_stratum_3d_position;
      stratum_shape : stratum_3d_shape;
      transformation : axis2_placement_3d;
      feature_shape : stratum_feature_3d_shape_select;
   END_ENTITY;



   ENTITY stratum_feature_in_stratum_planar_position;
      stratum_shape : stratum_planar_shape;
      transformation : axis2_placement_2d;
      feature_shape : stratum_feature_planar_representation_select;
   END_ENTITY;



   ENTITY stratum_feature_non_planar_2d_shape
   SUBTYPE OF (open_shell_based_surface);
      represented_stratum_feature : stratum_feature;
   END_ENTITY;



   ENTITY stratum_feature_planar_shape
   SUBTYPE OF (planar_projected_shape);
      represented_stratum_feature : stratum_feature;
   END_ENTITY;



   ENTITY stratum_feature_shape_stratum_average_surface_shape_relationship;
      of_stratum_feature_shape : stratum_feature_non_planar_2d_shape;
      of_stratum_average_surface_shape : stratum_average_surface_shape;
   END_ENTITY;



   ENTITY stratum_feature_shape_stratum_surface_shape_relationship;
      of_stratum_feature_shape : stratum_feature_non_planar_2d_shape;
      of_stratum_surface_shape : stratum_surface_shape;
   END_ENTITY;



   ENTITY stratum_feature_styled_area_representation;
      derived_planar_shape : OPTIONAL SET [1:?] OF stratum_feature_planar_shape;
      shape_styled_area_representation : styled_area_representation;
      represented_stratum_feature : stratum_feature;
   END_ENTITY;



   ENTITY stratum_feature_template
   SUPERTYPE OF (ONEOF(land_physical_template, material_addition_feature_template))
   SUBTYPE OF (part_template);
      of_stratum_technology : OPTIONAL SET [1:?] OF stratum_technology;
   END_ENTITY;



   ENTITY stratum_feature_template_component
   SUPERTYPE OF (ONEOF(connected_area_component, non_functional_land, land))
   SUBTYPE OF (laminate_component);
      SELF\assembly_component.usage_definition : OPTIONAL stratum_feature_template;
      stratum_feature_implementation : stratum_feature;
   END_ENTITY;



   ENTITY stratum_interconnect_module_3d_position;
      stratum_component : interconnect_module_stratum_assembly_relationship;
      stratum_shape : stratum_3d_shape;
      interconnect_module_shape : physical_unit_3d_shape;
      transformation : axis2_placement_3d;
   END_ENTITY;



   ENTITY stratum_interconnect_module_planar_position;
      stratum_component : interconnect_module_stratum_assembly_relationship;
      stratum_shape : stratum_planar_shape;
      interconnect_module_shape : physical_unit_planar_shape;
      transformation : axis2_placement_2d;
   END_ENTITY;



   ENTITY stratum_make_from_relationship;
      reusable_stratum : stratum;
      resultant_stratum : stratum;
   END_ENTITY;



   ENTITY stratum_planar_shape
   SUBTYPE OF (planar_projected_shape);
      shape_characterized_stratum : stratum;
   END_ENTITY;



   ENTITY stratum_specific_part_template_location_in_padstack_definition
   SUBTYPE OF (part_template_location_in_padstack_definition);
      bound_stratum : stratum;
   WHERE
      WR1:
         SIZEOF([ 'AP210_ARM_EXTENDED.STRATUM_FEATURE_TEMPLATE', 'AP210_ARM_EXTENDED.MATERIAL_ADDITION_FEATURE_TEMPLATE', 'AP210_ARM_EXTENDED.MATERIAL_REMOVAL_FEATURE_TEMPLATE' ] * TYPEOF(SELF\part_template_location_in_padstack_definition.template.associated_template_occurrence)) = 1;
   END_ENTITY;



   ENTITY stratum_surface;
      of_stratum : stratum;
      name : stratum_surface_designation;
   INVERSE
      of_shape : SET [0:1] OF stratum_surface_shape FOR of_surface;
   UNIQUE
      ur1 : name, of_stratum;
   END_ENTITY;



   ENTITY stratum_surface_in_stratum_3d_position;
      stratum_shape : stratum_3d_shape;
      transformation : axis2_placement_3d;
      surface_shape : stratum_surface_shape_select;
   END_ENTITY;



   ENTITY stratum_surface_shape
   SUBTYPE OF (open_shell_based_surface);
      of_surface : stratum_surface;
   END_ENTITY;



   ENTITY stratum_technology
   SUPERTYPE OF (ONEOF(design_layer_technology, documentation_layer_technology));
      layer_position : layer_position_type;
      stratum_material : ee_material;
      maximum_stratum_thickness : length_measure_with_unit;
      minimum_stratum_thickness : length_measure_with_unit;
      name : ee_name;
      minimum_finished_feature_size : OPTIONAL length_measure_with_unit;
      laminate_stiffness_class : OPTIONAL stiffness_class;
      minimum_finished_feature_spacing : OPTIONAL length_measure_with_unit;
      maximum_feature_size_requirement : OPTIONAL length_measure_with_unit;
      specification : OPTIONAL process_specification;
   UNIQUE
      ur1 : name;
   WHERE
      WR1:
         NOT (layer_position = layer_position_type.primary) OR ('AP210_ARM_EXTENDED.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
      WR2:
         NOT (layer_position = layer_position_type.secondary) OR ('AP210_ARM_EXTENDED.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
   END_ENTITY;



   ENTITY stratum_technology_link
   SUPERTYPE OF (printed_part_template_link);
      precedent_stratum_technology : stratum_technology;
      subsequent_stratum_technology : stratum_technology;
      precedent_stratum_technology_link : OPTIONAL stratum_technology_link;
   UNIQUE
      ur1 : precedent_stratum_technology, subsequent_stratum_technology;
   WHERE
      WR1:
         precedent_stratum_technology :<>: subsequent_stratum_technology;
      WR2:
         NOT EXISTS(precedent_stratum_technology_link) OR (precedent_stratum_technology_link :<>: SELF);
      WR3:
         NOT EXISTS(precedent_stratum_technology_link) OR (precedent_stratum_technology_link.subsequent_stratum_technology :=: precedent_stratum_technology);
   END_ENTITY;



   ENTITY stratum_type_independent_padstack_definition
   SUBTYPE OF (padstack_definition);
   END_ENTITY;



   ENTITY structured_text;
      content_markup : external_definition;
      plain_text_content : OPTIONAL ee_text;
      precedent_structured_text : OPTIONAL structured_text;
      structured_text_content : OPTIONAL SET [1:?] OF structured_text;
   END_ENTITY;



   ENTITY structured_text_id_in_document;
      identifier : ee_name;
      text : structured_text;
      document : ee_document;
   UNIQUE
      ur1 : identifier, document;
   END_ENTITY;



   ENTITY styled_curve_occurrence;
      styled_curve : curve;
      of_curve_style : curve_style;
   END_ENTITY;



   ENTITY styled_text
   SUBTYPE OF (text_literal);
      text_font : font_select;
   END_ENTITY;



   ENTITY sub_assembly_relationship;
      related_component : assembly_component_or_material;
      relating_component : assembly_group_component;
      sub_assembly_reference_designation : STRING;
   UNIQUE
      ur1 : sub_assembly_reference_designation, relating_component;
   END_ENTITY;



   ENTITY sub_model_placement;
      placement : placement_select;
      sub_model : component_assembly_position;
   END_ENTITY;



   ENTITY subedge
   SUBTYPE OF (edge);
      parent_edge : edge;
   END_ENTITY;



   ENTITY subface
   SUBTYPE OF (face);
      parent_face : face;
   WHERE
      WR1:
         NOT mixed_loop_type_set((list_to_set(list_face_loops(SELF)) + list_to_set(list_face_loops(parent_face))));
   END_ENTITY;



   ENTITY substitute_product;
      defined_alternate_product : SET [1:?] OF ee_product;
      substitutable_component : assembly_composition_relationship;
   END_ENTITY;



   ENTITY supplied_product_version;
      supplied_product_version : ee_product_version;
      supplied_product_version_approval : ee_approval;
      supplier_part_number : OPTIONAL ee_name;
      supplier : organization;
   INVERSE
      required_certification : SET [0:1] OF certification FOR certified_product_version;
   UNIQUE
      ur1 : supplier, supplier_part_number;
   END_ENTITY;



   ENTITY surface
   SUPERTYPE OF (ONEOF(elementary_surface, swept_surface, bounded_surface, offset_surface, surface_replica))
   SUBTYPE OF (geometric_representation_item);
   END_ENTITY;



   ENTITY surface_curve
   SUPERTYPE OF (ONEOF(intersection_curve, seam_curve) ANDOR bounded_surface_curve)
   SUBTYPE OF (curve);
      curve_3d : curve;
      associated_geometry : LIST [1:2] OF pcurve_or_surface;
      master_representation : preferred_surface_curve_representation;
   DERIVE
      basis_surface : SET [1:2] OF surface := get_basis_surface(SELF);
   WHERE
      WR1:
         curve_3d.dim = 3;
      WR2:
         ('AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(associated_geometry[1])) OR (master_representation <> pcurve_s1);
      WR3:
         ('AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(associated_geometry[2])) OR (master_representation <> pcurve_s2);
      WR4:
         NOT ('AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(curve_3d));
   END_ENTITY;



   ENTITY surface_finish_specification
   SUBTYPE OF (material_specification);
   END_ENTITY;



   ENTITY surface_of_linear_extrusion
   SUBTYPE OF (swept_surface);
      extrusion_axis : vector;
   END_ENTITY;



   ENTITY surface_of_revolution
   SUBTYPE OF (swept_surface);
      axis_position : axis1_placement;
   DERIVE
      axis_line : line := representation_item('') || geometric_representation_item() || curve() || line(axis_position.location, representation_item('') || geometric_representation_item() || vector(axis_position.z, 1.00000));
   END_ENTITY;



   ENTITY surface_patch
   SUBTYPE OF (founded_item);
      parent_surface : bounded_surface;
      u_transition : transition_code;
      v_transition : transition_code;
      u_sense : BOOLEAN;
      v_sense : BOOLEAN;
   INVERSE
      using_surfaces : BAG [1:?] OF rectangular_composite_surface FOR segments;
   WHERE
      WR1:
         NOT ('AP210_ARM_EXTENDED.CURVE_BOUNDED_SURFACE' IN TYPEOF(parent_surface));
   END_ENTITY;



   ENTITY surface_prepped_terminal
   SUBTYPE OF (altered_package_terminal);
      surface_preparation : surface_finish_specification;
   END_ENTITY;



   ENTITY surface_replica
   SUBTYPE OF (surface);
      parent_surface : surface;
      transformation : cartesian_transformation_operator_3d;
   WHERE
      WR1:
         acyclic_surface_replica(SELF, parent_surface);
   END_ENTITY;



   ENTITY swept_area_solid
   SUPERTYPE OF (extruded_area_solid)
   SUBTYPE OF (solid_model);
      swept_area : curve_bounded_surface;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.PLANE' IN TYPEOF(swept_area.basis_surface);
   END_ENTITY;



   ENTITY swept_face_solid
   SUPERTYPE OF (ONEOF(extruded_face_solid, revolved_face_solid))
   SUBTYPE OF (solid_model);
      swept_face : face_surface;
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.PLANE' IN TYPEOF(swept_face.face_geometry);
   END_ENTITY;



   ENTITY swept_surface
   SUPERTYPE OF (ONEOF(surface_of_linear_extrusion, surface_of_revolution))
   SUBTYPE OF (surface);
      swept_curve : curve;
   END_ENTITY;



   ENTITY symmetrical_tolerance_characteristic
   SUBTYPE OF (tolerance_characteristic);
      SELF\coordinated_characteristic.component_characteristic : SET [2:2] OF numeric_parameter;
   END_ENTITY;



   ENTITY symmetry_tolerance
   SUBTYPE OF (geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY tangent_plane
   SUBTYPE OF (tangent_shape_element);
   END_ENTITY;



   ENTITY tangent_shape_element
   SUPERTYPE OF (tangent_plane)
   SUBTYPE OF (derived_shape_element);
   END_ENTITY;



   ENTITY teardrop_by_angle_template
   SUBTYPE OF (material_addition_feature_template);
      teardrop_angle : plane_angle_measure_with_unit;
   END_ENTITY;



   ENTITY teardrop_by_length_template
   SUBTYPE OF (material_addition_feature_template);
      teardrop_taper_start_distance : length_measure_with_unit;
      teardrop_taper_end_distance : length_measure_with_unit;
   END_ENTITY;



   ENTITY technology;
      process_technology : process_specification;
      classification : external_definition;
      material_product_system : ee_material;
   END_ENTITY;



   ENTITY template_definition
   SUBTYPE OF (ee_product_definition);
   INVERSE
      associated_template_occurrence : part_template FOR associated_definition;
   END_ENTITY;



   ENTITY template_material_cross_section_boundary
   SUBTYPE OF (non_feature_shape_element);
      associated_definition : printed_part_template_material;
   UNIQUE
      ur1 : associated_definition, SELF\shape_element.name;
   WHERE
      WR1:
         SELF\shape_element.name IN [ 'top', 'bottom', 'left', 'right' ];
   END_ENTITY;



   ENTITY terminal_pair_port_equivalence_relationship;
      equivalent_port : analytical_model_port;
      scalar_ports : LIST [2:2] OF UNIQUE analytical_model_scalar_port;
   END_ENTITY;



   ENTITY terminal_swap_specification
   SUBTYPE OF (change_design_object_management_relationship);
      SELF\change_design_object_management_relationship.previous_design_object : functional_unit_terminal_node_assignment;
      SELF\change_design_object_management_relationship.current_design_object : functional_unit_terminal_node_assignment;
   END_ENTITY;



   ENTITY termination_constraint;
      constrained_termination : SET [2:?] OF mating_connector_termination;
      termination_usage_constraint : ee_requirement_occurrence;
   END_ENTITY;



   ENTITY tertiary_orientation_feature
   SUBTYPE OF (part_feature, datum_feature);
      associated_body_vertical_extent : OPTIONAL SET [1:2] OF package_body_surface;
   END_ENTITY;



   ENTITY test_point_part_feature
   SUBTYPE OF (part_tooling_feature);
   END_ENTITY;



   ENTITY test_requirement_allocation
   SUBTYPE OF (requirement_allocation);
      SELF\requirement_allocation.target_product_object : ee_product_version;
      SELF\requirement_allocation.allocated_requirement : test_requirement_occurrence;
      analytical_model_based_test_access : OPTIONAL SET [1:?] OF part_feature_model_port_assignment;
      functional_specification_based_test_access : OPTIONAL SET [1:?] OF functional_usage_view_to_part_terminal_assignment;
   WHERE
      WR1:
         NOT EXISTS(analytical_model_based_test_access) OR (SIZEOF(QUERY (ta <* analytical_model_based_test_access| NOT (ta.source.associated_definition.version = SELF\requirement_allocation.target_product_object))) = 0);
      WR2:
         NOT EXISTS(analytical_model_based_test_access) OR (SIZEOF(QUERY (ta <* analytical_model_based_test_access| NOT (ta.target.accessed_analytical_model = SELF\requirement_allocation.allocated_requirement.required_analytical_representation[1].model_representation))) = 0);
      WR3:
         EXISTS(analytical_model_based_test_access) XOR EXISTS(functional_specification_based_test_access);
      WR4:
         NOT EXISTS(analytical_model_based_test_access) OR EXISTS(SELF\requirement_allocation.allocated_requirement\ee_requirement_occurrence.required_analytical_representation);
      WR5:
         NOT EXISTS(functional_specification_based_test_access) OR (SIZEOF(QUERY (fa <* functional_specification_based_test_access| NOT (fa.physical_usage_view_terminal\part_feature.associated_definition.version = SELF\requirement_allocation.target_product_object))) = 0);
      WR6:
         NOT EXISTS(functional_specification_based_test_access) OR EXISTS(SELF\requirement_allocation.allocated_requirement\ee_requirement_occurrence.required_functional_specification);
      WR7:
         NOT EXISTS(functional_specification_based_test_access) OR (SIZEOF(QUERY (fa <* functional_specification_based_test_access| NOT (fa.functional_usage_view_terminal\functional_unit_usage_view_terminal_definition.associated_functional_unit_definition = SELF\requirement_allocation.allocated_requirement\ee_requirement_occurrence.required_functional_specification[1].characterizing_functional_unit.definition))) = 0);
   END_ENTITY;



   ENTITY test_requirement_occurrence
   SUBTYPE OF (ee_requirement_occurrence);
   WHERE
      WR1:
         SIZEOF(SELF\ee_requirement_occurrence.required_analytical_representation) + SIZEOF(SELF\ee_requirement_occurrence.required_functional_specification) > 0;
   END_ENTITY;



   ENTITY test_select_product
   SUBTYPE OF (alternate_select_product);
   END_ENTITY;



   ENTITY test_specification
   SUBTYPE OF (ee_specification);
   END_ENTITY;



   ENTITY text_literal
   SUBTYPE OF (geometric_representation_item);
      literal : presentable_text;
      placement : axis2_placement;
      alignment : text_alignment;
      path : text_path;
      font : font_select;
   END_ENTITY;



   ENTITY theoretically_exact_dimension_representation
   SUBTYPE OF (singular_dimension_representation);
   END_ENTITY;



   ENTITY thermal_component
   SUBTYPE OF (assembly_component);
   END_ENTITY;



   ENTITY thermal_feature
   SUBTYPE OF (part_feature);
   END_ENTITY;



   ENTITY thermal_isolation_laminate_component
   SUBTYPE OF (filled_area_material_removal_laminate_component);
      SELF\assembly_component.usage_definition : thermal_isolation_removal_template;
   END_ENTITY;



   ENTITY thermal_isolation_removal_structure
   SUBTYPE OF (filled_area_material_removal_structure);
   INVERSE
      thermal_isolation_spacing_requirement : thermal_isolation_requirement_assignment FOR resulting_structure;
   END_ENTITY;



   ENTITY thermal_isolation_removal_template
   SUBTYPE OF (material_removal_feature_template);
   INVERSE
      thermal_isolation_spacing_requirement : thermal_isolation_requirement_assignment FOR resulting_structure;
   END_ENTITY;



   ENTITY thermal_isolation_requirement_assignment;
      resulting_structure : thermal_isolation_removal_structure_or_template;
      thermal_isolation_spacing_requirement : layout_spacing_requirement_occurrence;
      effective_current_capacity_requirement : ee_requirement_occurrence;
      angular_orientation_requirement : ee_requirement_occurrence;
   END_ENTITY;



   ENTITY thermal_network_definition
   SUBTYPE OF (functional_unit_network_definition);
   END_ENTITY;



   ENTITY thermal_requirement_allocation
   SUBTYPE OF (assembly_requirement_allocation);
      SELF\requirement_allocation.target_product_object : thermal_component;
      SELF\requirement_allocation.allocated_requirement : thermal_requirement_occurrence;
   END_ENTITY;



   ENTITY thermal_requirement_occurrence
   SUBTYPE OF (ee_requirement_occurrence);
   END_ENTITY;



   ENTITY thermodynamic_temperature_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY thermodynamic_temperature_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY through_port_variable
   SUBTYPE OF (port_variable);
   WHERE
      WR1:
         EXISTS(SELF\port_variable.unit_of_measure);
   END_ENTITY;



   ENTITY time_interval;
      id : identifier;
      name : label;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY time_interval_relationship;
      name : label;
      description : OPTIONAL text;
      relating_time_interval : time_interval;
      related_time_interval : time_interval;
   END_ENTITY;



   ENTITY time_interval_role;
      name : label;
      description : OPTIONAL text;
   END_ENTITY;



   ENTITY time_interval_with_bounds
   SUBTYPE OF (time_interval);
      primary_bound : OPTIONAL date_time_or_event_occurrence;
      secondary_bound : OPTIONAL date_time_or_event_occurrence;
      duration : OPTIONAL time_measure_with_unit;
   WHERE
      WR1:
         NOT (EXISTS(secondary_bound) AND EXISTS(duration));
      WR2:
         EXISTS(primary_bound) OR EXISTS(secondary_bound);
   END_ENTITY;



   ENTITY time_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.TIME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY time_role;
      name : label;
   DERIVE
      description : text := get_description_value(SELF);
   WHERE
      WR1:
         SIZEOF(USEDIN(SELF, 'AP210_ARM_EXTENDED.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
   END_ENTITY;



   ENTITY time_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 0.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 1.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY tolerance_characteristic
   SUPERTYPE OF (ONEOF(minimum_tolerance_characteristic, statistical_tolerance_characteristic, symmetrical_tolerance_characteristic, maximum_tolerance_characteristic, plus_minus_tolerance_characteristic))
   SUBTYPE OF (coordinated_characteristic);
      SELF\coordinated_characteristic.component_characteristic : SET [1:?] OF numeric_parameter;
   END_ENTITY;



   ENTITY tolerance_specific_restraint_condition
   SUBTYPE OF (restraint_condition);
      affected_tolerances : SET [1:?] OF geometric_or_dimension_select;
   END_ENTITY;



   ENTITY tolerance_zone
   SUBTYPE OF (non_feature_shape_element);
      zone_boundary : tolerance_zone_boundary;
   INVERSE
      zone_definition : tolerance_zone_definition FOR defined_tolerance_zone;
   END_ENTITY;



   ENTITY tolerance_zone_and_viewing_plane_orienting_relationship;
      orienting_viewing_plane : viewing_plane;
      oriented_tolerance_zone : tolerance_zone;
   INVERSE
      zone_orientation : viewing_plane_based_orientation FOR orienting_relationship;
   END_ENTITY;



   ENTITY tolerance_zone_boundary
   ABSTRACT SUPERTYPE OF (ONEOF(tolerance_zone_circular_or_cylindrical_or_spherical_boundary, tolerance_zone_opposing_boundary_set, conical_tolerance_zone_boundary))
   SUBTYPE OF (non_feature_shape_element);
   INVERSE
      bounded_zone : tolerance_zone FOR zone_boundary;
      boundary_zone_definition : tolerance_zone_boundary_definition FOR defined_zone_boundary;
   END_ENTITY;



   ENTITY tolerance_zone_boundary_definition
   ABSTRACT SUPERTYPE OF (ONEOF(boundary_zone_definition_with_specified_size, conical_tolerance_zone_boundary_definition));
      defined_zone_boundary : tolerance_zone_boundary;
   INVERSE
      zone_definition : tolerance_zone_definition FOR boundary_definition;
   END_ENTITY;



   ENTITY tolerance_zone_boundary_member
   SUBTYPE OF (non_feature_shape_element);
   INVERSE
      explicit_opposing_boundary_set : tolerance_zone_explicit_opposing_boundary_set FOR boundary_members;
   END_ENTITY;



   ENTITY tolerance_zone_boundary_member_offset;
      offset_tolerance_zone_boundary_member : tolerance_zone_boundary_member;
      offset_value : length_measure_with_unit;
      type_of_offset : offset_types;
   INVERSE
      boundary_definition : profile_boundary_definition_with_offsets FOR boundary_offsets;
   END_ENTITY;



   ENTITY tolerance_zone_circular_or_cylindrical_or_spherical_boundary
   SUBTYPE OF (tolerance_zone_boundary);
   INVERSE
      size_characteristic : diametrical_boundary_size_characteristic FOR sized_boundary;
   END_ENTITY;



   ENTITY tolerance_zone_definition
   SUPERTYPE OF (ONEOF(projected_tolerance_zone_definition, runout_tolerance_zone_definition_with_specified_angle, tolerance_zone_definition_with_per_unit_size_specification, conical_tolerance_zone_definition, tolerance_zone_definition_with_specified_orientation));
      defined_tolerance_zone : tolerance_zone;
      boundary_definition : tolerance_zone_boundary_definition;
      form : OPTIONAL tolerance_zone_form;
   END_ENTITY;



   ENTITY tolerance_zone_definition_with_per_unit_size_specification
   SUBTYPE OF (tolerance_zone_definition);
      per_unit_size_specification : tolerance_zone_per_unit_size_specification;
   END_ENTITY;



   ENTITY tolerance_zone_definition_with_specified_orientation
   SUBTYPE OF (tolerance_zone_definition);
      zone_orientation : orientation_select;
   END_ENTITY;



   ENTITY tolerance_zone_explicit_opposing_boundary_set
   SUBTYPE OF (tolerance_zone_opposing_boundary_set);
      boundary_members : SET [2:2] OF tolerance_zone_boundary_member;
   END_ENTITY;



   ENTITY tolerance_zone_form;
      characterized_tolerance_zone : tolerance_zone;
      name : label;
   INVERSE
      zone_definition : tolerance_zone_definition FOR form;
   END_ENTITY;



   ENTITY tolerance_zone_implicit_opposing_boundary_set
   SUBTYPE OF (tolerance_zone_opposing_boundary_set);
   END_ENTITY;



   ENTITY tolerance_zone_opposing_boundary_set
   ABSTRACT SUPERTYPE OF (ONEOF(tolerance_zone_explicit_opposing_boundary_set, tolerance_zone_implicit_opposing_boundary_set))
   SUBTYPE OF (tolerance_zone_boundary);
   INVERSE
      size_characteristic : opposing_boundary_set_size_characteristic FOR sized_boundary_set;
   END_ENTITY;



   ENTITY tolerance_zone_per_unit_size_specification;
      specified_tolerance_zone : tolerance_zone;
      per_unit_size : SET [1:2] OF length_measure_with_unit;
   INVERSE
      zone_definition : tolerance_zone_definition_with_per_unit_size_specification FOR per_unit_size_specification;
   END_ENTITY;



   ENTITY tool_registration_mark
   SUBTYPE OF (part_tooling_feature);
   END_ENTITY;



   ENTITY topological_junction;
      scope : physical_connectivity_structure_definition;
      name : ee_name;
   UNIQUE
      ur1 : name, scope;
   END_ENTITY;



   ENTITY topological_representation_item
   SUPERTYPE OF (ONEOF(vertex, edge, face_bound, face, vertex_shell, wire_shell, connected_edge_set, connected_face_set, loop ANDOR path))
   SUBTYPE OF (representation_item);
   END_ENTITY;



   ENTITY toroidal_surface
   SUBTYPE OF (elementary_surface);
      major_radius : positive_length_measure;
      minor_radius : positive_length_measure;
   END_ENTITY;



   ENTITY torus
   SUBTYPE OF (geometric_representation_item);
      position : axis1_placement;
      major_radius : positive_length_measure;
      minor_radius : positive_length_measure;
   WHERE
      WR1:
         major_radius > minor_radius;
   END_ENTITY;



   ENTITY total_runout_tolerance
   SUBTYPE OF (geometric_tolerance_with_referenced_datum_system);
   END_ENTITY;



   ENTITY trace_template
   SUPERTYPE OF (default_trace_template)
   SUBTYPE OF (part_template);
      trace_style : curve_style;
   END_ENTITY;



   ENTITY transform_port_variable
   SUBTYPE OF (port_variable);
      nominal_signal_flow_direction : signal_flow_direction;
   WHERE
      WR1:
         not_applicable <> nominal_signal_flow_direction;
      WR2:
         bidirectional <> nominal_signal_flow_direction;
   END_ENTITY;



   ENTITY transmission_line_functional_unit_terminal_allocation;
      implementation : printed_component_join_terminal;
      transmission_line_functional_unit_terminal : functional_unit_terminal;
      functional_unit_design_path : transmission_line_functional_unit_to_routed_printed_component_allocation;
   UNIQUE
      ur1 : implementation, transmission_line_functional_unit_terminal;
   END_ENTITY;



   ENTITY transmission_line_functional_unit_to_routed_printed_component_allocation
   SUBTYPE OF (design_functional_unit_allocation_to_assembly_component);
      SELF\design_functional_unit_allocation_to_assembly_component.implementation : routed_printed_component;
   END_ENTITY;



   ENTITY trimmed_curve
   SUBTYPE OF (bounded_curve);
      basis_curve : curve;
      trim_1 : SET [1:2] OF trimming_select;
      trim_2 : SET [1:2] OF trimming_select;
      sense_agreement : BOOLEAN;
      master_representation : trimming_preference;
   WHERE
      WR1:
         (HIINDEX(trim_1) = 1) OR (TYPEOF(trim_1[1]) <> TYPEOF(trim_1[2]));
      WR2:
         (HIINDEX(trim_2) = 1) OR (TYPEOF(trim_2[1]) <> TYPEOF(trim_2[2]));
   END_ENTITY;



   ENTITY true_profile;
      profiled_surface : physical_feature_or_part_template;
      profile_representation : true_profile_representations;
   INVERSE
      boundary_definition : SET [1:?] OF profile_boundary_definition FOR basic_profile;
   END_ENTITY;



   ENTITY type_qualifier;
      name : label;
   END_ENTITY;



   ENTITY uncertainty_measure_with_unit
   SUBTYPE OF (measure_with_unit);
      name : label;
      description : OPTIONAL text;
   WHERE
      WR1:
         valid_measure_value(SELF\measure_with_unit.value_component);
   END_ENTITY;



   ENTITY uncertainty_qualifier
   SUPERTYPE OF (ONEOF(standard_uncertainty, qualitative_uncertainty));
      measure_name : text;
      description : text;
   END_ENTITY;



   ENTITY uniform_curve
   SUBTYPE OF (b_spline_curve);
   END_ENTITY;



   ENTITY uniform_surface
   SUBTYPE OF (b_spline_surface);
   END_ENTITY;



   ENTITY unrouted_conductive_interconnect_element
   SUBTYPE OF (conductive_interconnect_element);
   INVERSE
      connected_points : SET [1:?] OF conductive_interconnect_element_terminal_link FOR associated_element;
   WHERE
      WR1:
         NOT EXISTS(SELF\conductive_interconnect_element.composed_conductor);
      WR2:
         correlated_terminals(SELF\conductive_interconnect_element.access_mechanisms, connected_points);
   END_ENTITY;



   ENTITY unrouted_join_relationship
   SUBTYPE OF (join_relationship);
      unrouted_terminals : OPTIONAL SET [1:?] OF laminate_component_join_terminal;
      unrouted_lcp : OPTIONAL SET [1:?] OF layer_connection_point;
      unrouted_junction : OPTIONAL SET [1:?] OF layout_junction;
      unrouted_paa : OPTIONAL SET [1:?] OF probe_access_area;
      unrouted_via : OPTIONAL SET [1:?] OF via_terminal;
   WHERE
      WR1:
         SIZEOF(unrouted_terminals) + SIZEOF(unrouted_lcp) + SIZEOF(unrouted_paa) + SIZEOF(unrouted_via) + SIZEOF(unrouted_junction) > 1;
   END_ENTITY;



   ENTITY unsupported_passage
   SUBTYPE OF (inter_stratum_feature);
      SELF\assembly_component.usage_definition : unsupported_passage_template;
   END_ENTITY;



   ENTITY unsupported_passage_dependent_non_functional_land
   SUBTYPE OF (non_functional_land);
      reference_passage : unsupported_passage;
      SELF\assembly_component.usage_definition : default_unsupported_passage_based_land_physical_template;
   END_ENTITY;



   ENTITY unsupported_passage_template
   SUPERTYPE OF (ONEOF(counterbore_passage_template, countersunk_passage_template, blind_passage_template))
   SUBTYPE OF (inter_stratum_feature_template);
      SELF\inter_stratum_feature_template.of_passage_technology : default_unsupported_passage_definition;
   END_ENTITY;



   ENTITY usage_concept_usage_relationship;
      associating_usage_shape : feature_or_non_feature_usage;
      associated_usage : usage_concept;
      associated_shape_definition : shape_definition;
      associated_usage_origin : origin;
      associated_usage_placement : axis2_placement_or_cto2d;
   WHERE
      WR1:
         ('AP210_ARM_EXTENDED.NON_FEATURE_SHAPE_DEFINITION' IN TYPEOF(associated_shape_definition)) AND ('AP210_ARM_EXTENDED.NON_FEATURE_SHAPE_DEFINITION' IN TYPEOF(associating_usage_shape)) OR ('AP210_ARM_EXTENDED.FEATURE_SHAPE_DEFINITION' IN TYPEOF(associated_shape_definition)) AND ('AP210_ARM_EXTENDED.FEATURE_SHAPE_DEFINITION' IN TYPEOF(associating_usage_shape));
      WR2:
         NOT ('AP210_ARM_EXTENDED.CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF(associated_usage_placement)) OR ('AP210_ARM_EXTENDED.NON_FEATURE_SHAPE_DEFINITION' IN TYPEOF(associating_usage_shape));
      WR3:
         associated_usage_origin = associated_shape_definition.shape_origin;
   END_ENTITY;



   ENTITY usage_view_connection_zone_terminal_shape_relationship;
      associating_terminal_shape : feature_shape_definition;
      associated_usage : connection_zone;
      associated_usage_origin : origin;
      associated_connection_zone_shape_definition : feature_shape_definition;
      associated_usage_placement : axis2_placement;
   WHERE
      WR1:
         associating_terminal_shape :<>: associated_connection_zone_shape_definition;
      WR2:
         associated_connection_zone_shape_definition.shape_origin = associated_usage_origin;
   END_ENTITY;



   ENTITY user_defined_dimension_qualifier
   SUBTYPE OF (dimension_qualifier);
      description : text;
      name : text;
   END_ENTITY;



   ENTITY user_defined_geometric_tolerance_qualifier
   SUBTYPE OF (geometric_tolerance_qualifier);
      description : text;
      name : text;
   END_ENTITY;



   ENTITY vector
   SUBTYPE OF (geometric_representation_item);
      orientation : direction;
      magnitude : length_measure;
   WHERE
      WR1:
         magnitude >= 0.00000;
   END_ENTITY;



   ENTITY vertex
   SUBTYPE OF (topological_representation_item);
   END_ENTITY;



   ENTITY vertex_loop
   SUBTYPE OF (loop);
      loop_vertex : vertex;
   END_ENTITY;



   ENTITY vertex_point
   SUBTYPE OF (vertex, geometric_representation_item);
      vertex_geometry : point;
   END_ENTITY;



   ENTITY vertex_shell
   SUBTYPE OF (topological_representation_item);
      vertex_shell_extent : vertex_loop;
   END_ENTITY;



   ENTITY via
   ABSTRACT SUPERTYPE OF (ONEOF(blind_via, buried_via, interfacial_connection))
   SUBTYPE OF (plated_passage);
      SELF\assembly_component.usage_definition : via_template;
   END_ENTITY;



   ENTITY via_and_contact_size_dependent_land
   SUBTYPE OF (land);
      SELF\assembly_component.usage_definition : default_attachment_size_and_via_based_land_physical_template;
      reference_via : via;
   INVERSE
      interface_access_mechanism : land_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY via_and_contact_size_dependent_non_functional_land
   SUBTYPE OF (non_functional_land);
      reference_via : via;
      SELF\assembly_component.usage_definition : default_attachment_size_and_via_based_land_physical_template;
   INVERSE
      interface_access_mechanism : non_functional_land_interface_terminal FOR associated_component;
   END_ENTITY;



   ENTITY via_dependent_land
   SUBTYPE OF (land);
      reference_via : via;
      SELF\assembly_component.usage_definition : default_via_based_land_physical_template;
   END_ENTITY;



   ENTITY via_dependent_non_functional_land
   SUBTYPE OF (non_functional_land);
      reference_via : via;
      SELF\assembly_component.usage_definition : default_via_based_land_physical_template;
   END_ENTITY;



   ENTITY via_template
   SUBTYPE OF (inter_stratum_feature_template);
      SELF\inter_stratum_feature_template.of_passage_technology : default_via_definition;
   INVERSE
      access_mechanisms : SET [2:?] OF via_template_terminal FOR associated_definition;
   END_ENTITY;



   ENTITY via_template_terminal
   SUBTYPE OF (shape_element);
      associated_definition : via_template;
      disallowed_inter_stratum_extent : OPTIONAL inter_stratum_extent;
      SELF\shape_element.name : ee_name;
      terminal_connection_zone : OPTIONAL SET [1:?] OF connection_zone;
   INVERSE
      terminal_shape : SET [0:1] OF usage_concept_usage_relationship FOR associated_usage;
   UNIQUE
      ur1 : SELF\shape_element.name, associated_definition;
   END_ENTITY;



   ENTITY via_terminal
   SUBTYPE OF (laminate_component_feature);
      SELF\component_feature.definition : via_template_terminal;
      SELF\component_feature.associated_component : via;
   END_ENTITY;



   ENTITY view_level_non_feature_shape_definition
   SUPERTYPE OF (ONEOF(physical_unit_3d_keepout_shape, physical_unit_planar_keepout_shape, part_template_3d_keepout_shape, part_template_planar_keepout_shape))
   SUBTYPE OF (non_feature_shape_definition);
      SELF\non_feature_shape_definition.model_shape : view_shape_select;
   WHERE
      WR1:
         SELF\shape_definition.geometric_context = SELF\non_feature_shape_definition.model_shape\shape_definition.geometric_context;
   END_ENTITY;



   ENTITY viewing_plane
   SUBTYPE OF (non_feature_shape_element);
   INVERSE
      viewing_plane_specification : viewing_plane_definition FOR defined_viewing_plane;
   END_ENTITY;



   ENTITY viewing_plane_based_orientation;
      orienting_relationship : tolerance_zone_and_viewing_plane_orienting_relationship;
      viewing_plane_specification : viewing_plane_definition;
   END_ENTITY;



   ENTITY viewing_plane_definition;
      defined_viewing_plane : viewing_plane;
      viewing_plane_representation : axis2_placement;
   INVERSE
      zone_orientation : viewing_plane_based_orientation FOR viewing_plane_specification;
   END_ENTITY;



   ENTITY volume_measure_with_unit
   SUBTYPE OF (measure_with_unit);
   WHERE
      WR1:
         'AP210_ARM_EXTENDED.VOLUME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
   END_ENTITY;



   ENTITY volume_unit
   SUBTYPE OF (named_unit);
   WHERE
      WR1:
         ((((((SELF\named_unit.dimensions.length_exponent = 3.00000) AND (SELF\named_unit.dimensions.mass_exponent = 0.00000)) AND (SELF\named_unit.dimensions.time_exponent = 0.00000)) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.00000)) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.00000)) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.00000)) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.00000);
   END_ENTITY;



   ENTITY week_of_year_and_day_date
   SUBTYPE OF (date);
      week_component : week_in_year_number;
      day_component : OPTIONAL day_in_week_number;
   END_ENTITY;



   ENTITY wire_shell
   SUBTYPE OF (topological_representation_item);
      wire_shell_extent : SET [1:?] OF loop;
   WHERE
      WR1:
         NOT mixed_loop_type_set(wire_shell_extent);
   END_ENTITY;



   ENTITY wire_terminal
   SUBTYPE OF (package_terminal);
      SELF\package_terminal.internal_connection_zone : SET [1:?] OF connection_zone;
      maximum_wire_terminal_length : length_measure_with_unit;
      minimum_wire_terminal_length : length_measure_with_unit;
   END_ENTITY;



   ENTITY work_order
   ABSTRACT SUPERTYPE OF (ONEOF(change_order, start_order));
      referenced_work_request : SET [1:?] OF work_request;
      work_order_id : ee_name;
      resulting_product : SET [1:?] OF ee_product_version;
      analysis_data : OPTIONAL ee_text;
      additional_data : OPTIONAL ee_text;
      work_order_approval : ee_approval;
      initiator : SET [1:?] OF person_organization;
      start_date : date_or_date_and_time;
      release_date : date_or_date_and_time;
      authorizing_agreement : OPTIONAL contract;
   UNIQUE
      ur1 : work_order_id;
   END_ENTITY;



   ENTITY work_request
   ABSTRACT SUPERTYPE OF (ONEOF(start_request, change_request));
      work_request_approval : ee_approval;
      request_recipient : SET [1:?] OF person_organization;
      work_request_id : ee_name;
      referenced_product : SET [1:?] OF ee_product_version;
      request_date : date_or_date_and_time;
      description : ee_text;
      reason : evaluated_characteristic_or_description;
      initiator : SET [1:?] OF person_organization;
      status : STRING;
   INVERSE
      implementation_order : SET [0:1] OF work_order FOR referenced_work_request;
   UNIQUE
      ur1 : work_request_id;
   END_ENTITY;


(* ***********************************
Types in the schema AP210_ARM_EXTENDED
*********************************** *)


   TYPE ahead_or_behind = ENUMERATION OF
      (ahead,
       exact,
       behind);
   END_TYPE;



   TYPE alias_select = SELECT
      (ee_material,
       ee_product,
       ee_product_category,
       ee_product_configuration,
       ee_product_model,
       ee_product_version,
       organization);
   END_TYPE;



   TYPE amount_of_substance_measure = REAL;
   END_TYPE;



   TYPE angle_relator = ENUMERATION OF
      (equal,
       large,
       small);
   END_TYPE;



   TYPE application_environment = ENUMERATION OF
      (end_user_application,
       manufacturing);
   END_TYPE;



   TYPE area_measure = REAL;
   END_TYPE;



   TYPE assembled_feature_select = SELECT
      (interconnect_component_join_terminal,
       interconnect_component_interface_terminal,
       packaged_connector_component_interface_terminal,
       package_terminal_occurrence,
       bare_die_component_terminal,
       packaged_component_join_terminal,
       assembly_module_component_terminal,
       interconnect_module_component_surface_feature,
       interconnect_module_component_terminal,
       component_mounting_feature);
   END_TYPE;



   TYPE assembly_component_or_material = SELECT
      (assembly_component,
       material_definition);
   END_TYPE;



   TYPE assembly_module_or_assembly_group_component = SELECT
      (assembly_module,
       assembly_group_component);
   END_TYPE;



   TYPE assembly_or_interconnect_design_object_select = SELECT
      (assembly_component,
       component_feature,
       interconnect_module_design_object_select);
   END_TYPE;



   TYPE axial_geometry_constraint_element = SELECT
      (point,
       line,
       circle,
       plane,
       cylindrical_surface,
       conical_surface,
       spherical_surface,
       toroidal_surface,
       surface_of_revolution,
       sphere,
       right_circular_cone,
       right_circular_cylinder,
       torus,
       revolved_face_solid);
   END_TYPE;



   TYPE axis2_placement = SELECT
      (axis2_placement_2d,
       axis2_placement_3d);
   END_TYPE;



   TYPE axis2_placement_or_cto2d = SELECT
      (axis2_placement,
       cartesian_transformation_operator_2d);
   END_TYPE;



   TYPE axis2_placement_or_datum_based_vector_orientation_select = SELECT
      (axis2_placement,
       datum_based_vector_orientation);
   END_TYPE;



   TYPE b_spline_curve_form = ENUMERATION OF
      (polyline_form,
       circular_arc,
       elliptic_arc,
       parabolic_arc,
       hyperbolic_arc,
       unspecified);
   END_TYPE;



   TYPE b_spline_surface_form = ENUMERATION OF
      (plane_surf,
       cylindrical_surf,
       conical_surf,
       spherical_surf,
       toroidal_surf,
       surf_of_revolution,
       ruled_surf,
       generalised_cone,
       quadric_surf,
       surf_of_linear_extrusion,
       unspecified);
   END_TYPE;



   TYPE bare_die_component_or_packaged_component = SELECT
      (packaged_component,
       bare_die_component);
   END_TYPE;



   TYPE bare_die_terminal_or_packaged_part_terminal = SELECT
      (bare_die_terminal,
       packaged_part_terminal);
   END_TYPE;



   TYPE boolean_operand = SELECT
      (solid_model,
       half_space_solid,
       csg_primitive,
       boolean_result,
       half_space_2d);
   END_TYPE;



   TYPE boolean_operator = ENUMERATION OF
      (union,
       intersection,
       difference);
   END_TYPE;



   TYPE boolean_property = BOOLEAN;
   END_TYPE;



   TYPE bound_volume_shape = SELECT
      (advanced_brep_shape_representation,
       csg_shape_representation,
       default_assembly_bond_shape,
       design_intent_modification_3d_shape,
       edge_based_wireframe_shape_representation,
       geometrically_bounded_surface_shape_representation,
       part_template_3d_shape,
       part_template_3d_keepout_shape,
       physical_unit_3d_keepout_shape,
       physical_unit_3d_shape,
       pre_defined_datum_axis_3d_symbol,
       pre_defined_datum_plane_3d_symbol,
       shell_based_wireframe_shape_representation,
       stratum_3d_shape,
       stratum_feature_3d_shape);
   END_TYPE;



   TYPE bus_structural_definition_or_node = SELECT
      (functional_unit_network_node_definition,
       bus_structural_definition);
   END_TYPE;



   TYPE celsius_temperature_measure = REAL;
   END_TYPE;



   TYPE centre_type = ENUMERATION OF
      (centred_on_arc,
       centred_on_radial);
   END_TYPE;



   TYPE character_spacing_select = SELECT
      (length_measure,
       ratio_measure,
       measure_with_unit,
       descriptive_measure);
   END_TYPE;



   TYPE component_assembly_position = SELECT
      (component_assembly_2d_position,
       component_assembly_3d_position);
   END_TYPE;



   TYPE component_based_message_type = ENUMERATION OF
      (component_reference_designation,
       terminal_designation);
   END_TYPE;



   TYPE component_feature_or_stratum_surface = SELECT
      (stratum_surface,
       component_feature);
   END_TYPE;



   TYPE component_or_component_feature = SELECT
      (assembly_component,
       component_external_reference,
       component_feature,
       component_feature_external_reference);
   END_TYPE;



   TYPE component_or_feature = SELECT
      (assembly_component,
       assembly_joint,
       component_feature);
   END_TYPE;



   TYPE compound_characteristic_definition = SELECT
      (list_characteristic,
       set_characteristic);
   END_TYPE;



   TYPE conductive_interconnect_terminal_or_interconnect_component_join_terminal = SELECT
      (interconnect_component_interface_terminal,
       interconnect_component_join_terminal,
       movable_packaged_component_join_terminal);
   END_TYPE;



   TYPE constraining_element_definitions = SELECT
      (tolerance_zone_definition,
       profile_related_positional_boundary_definition,
       positional_boundary_member_definition,
       conical_tolerance_zone_boundary_diametrical_size_characteristic);
   END_TYPE;



   TYPE context_dependent_measure = REAL;
   END_TYPE;



   TYPE correlated_or_independent = SELECT
      (coordinated_characteristic,
       characteristic);
   END_TYPE;



   TYPE count_measure = NUMBER;
   END_TYPE;



   TYPE csg_primitive = SELECT
      (sphere,
       ellipsoid,
       block,
       right_angular_wedge,
       faceted_primitive,
       rectangular_pyramid,
       torus,
       right_circular_cone,
       eccentric_cone,
       right_circular_cylinder,
       cyclide_segment_solid,
       primitive_2d);
   END_TYPE;



   TYPE csg_select = SELECT
      (boolean_result,
       csg_primitive);
   END_TYPE;



   TYPE curve_font_or_scaled_curve_font_select = SELECT
      (curve_style_font_and_scaling,
       curve_style_font_select);
   END_TYPE;



   TYPE curve_on_surface = SELECT
      (pcurve,
       surface_curve,
       composite_curve_on_surface);
   END_TYPE;



   TYPE curve_or_annotation_curve_occurrence = SELECT
      (curve);
   END_TYPE;



   TYPE curve_or_surface_constraint_element = SELECT
      (curve,
       surface);
   END_TYPE;



   TYPE curve_style_font_select = SELECT
      (solid_curve,
       externally_defined_curve_font,
       curve_style_font);
   END_TYPE;



   TYPE date_or_date_and_time = SELECT
      (date_and_time,
       date);
   END_TYPE;



   TYPE date_time_or_event_occurrence = SELECT
      (date_time_select,
       event_occurrence);
   END_TYPE;



   TYPE date_time_select = SELECT
      (date,
       local_time,
       date_and_time);
   END_TYPE;



   TYPE day_in_month_number = INTEGER;
   WHERE
      WR1:
         (1 <= SELF) AND (SELF <= 31);
   END_TYPE;



   TYPE day_in_week_number = INTEGER;
   WHERE
      WR1:
         (1 <= SELF) AND (SELF <= 7);
   END_TYPE;



   TYPE day_in_year_number = INTEGER;
   WHERE
      WR1:
         (1 <= SELF) AND (SELF <= 366);
   END_TYPE;



   TYPE degree_of_freedom = ENUMERATION OF
      (x,
       y,
       z,
       u,
       v,
       w);
   END_TYPE;



   TYPE degree_or_radian = ENUMERATION OF
      (degree,
       radian);
   END_TYPE;



   TYPE description_attribute_select = SELECT
      (date_role,
       date_time_role,
       person_and_organization,
       representation,
       time_role);
   END_TYPE;



   TYPE descriptive_measure = STRING;
   END_TYPE;



   TYPE descriptive_or_geometric_orientation = SELECT
      (measure_orientation,
       direction);
   END_TYPE;



   TYPE design_composition_path_or_root = SELECT
      (design_composition_path,
       functional_unit_network_definition);
   END_TYPE;



   TYPE design_intent_modification_3d_shape_select = SELECT
      (design_intent_modification_non_planar_2d_shape,
       design_intent_modification_3d_shape);
   END_TYPE;



   TYPE design_intent_modification_or_material_removal_component = SELECT
      (design_intent_modification,
       material_removal_laminate_component);
   END_TYPE;



   TYPE design_intent_modification_planar_shape_select = SELECT
      (design_intent_modification_styled_area_representation,
       design_intent_modification_planar_shape);
   END_TYPE;



   TYPE design_object_management_relationship_or_description = SELECT
      (ee_text,
       design_object_management_relationship);
   END_TYPE;



   TYPE dimension_count = INTEGER;
   WHERE
      WR1:
         SELF > 0;
   END_TYPE;



   TYPE dimension_qualifiers = ENUMERATION OF
      (free_state,
       average);
   END_TYPE;



   TYPE dimensional_location_or_dimensional_size = SELECT
      (dimensional_size,
       dimensional_location);
   END_TYPE;



   TYPE dimensional_types = ENUMERATION OF
      (angular,
       radius,
       arc_length,
       diameter,
       linear,
       controlled_radius);
   END_TYPE;



   TYPE document_or_organization = SELECT
      (ee_document,
       organization);
   END_TYPE;



   TYPE documentation_layer_purpose = SELECT
      (predefined_documentation_layer_purpose,
       external_definition);
   END_TYPE;



   TYPE ee_name = label;
   END_TYPE;



   TYPE ee_product_definition_with_annotation_elements = SELECT
      (footprint_definition,
       padstack_definition,
       physical_unit,
       stratum,
       template_definition);
   END_TYPE;



   TYPE electric_current_measure = REAL;
   END_TYPE;



   TYPE evaluated_characteristic_or_description = SELECT
      (evaluated_characteristic,
       ee_text);
   END_TYPE;



   TYPE evaluation_result_value = ENUMERATION OF
      (pass,
       fail,
       undefined);
   END_TYPE;



   TYPE evaluation_type = ENUMERATION OF
      (not_evaluatable,
       invalid,
       valid,
       to_be_evaluated);
   END_TYPE;



   TYPE extend_or_chord_2_extend_or_truncate_or_round = ENUMERATION OF
      (truncate,
       chord_2_extend,
       round,
       extend);
   END_TYPE;



   TYPE extend_or_truncate = ENUMERATION OF
      (truncate,
       extend);
   END_TYPE;



   TYPE fabricated_feature_select = SELECT
      (component_termination_passage_join_terminal,
       via_terminal,
       printed_component_join_terminal,
       conductive_interconnect_element_terminal,
       embedded_component_terminal,
       land_join_terminal,
       non_functional_land_join_terminal);
   END_TYPE;



   TYPE feature_or_non_feature_usage = SELECT
      (view_level_non_feature_shape_definition,
       part_template_or_physical_unit_shape_select);
   END_TYPE;



   TYPE fill_area_style_tile_shape_select = SELECT
      (externally_defined_tile,
       fill_area_style_tile_symbol_with_style,
       fill_area_style_tile_solid_region,
       fill_area_style_tile_curve_with_style);
   END_TYPE;



   TYPE fill_style_select = SELECT
      (solid_fill_style,
       fill_area_style_tile,
       externally_defined_tile_style,
       externally_defined_hatch_style,
       fill_area_style_hatching);
   END_TYPE;



   TYPE font_select = SELECT
      (registered_font,
       font_definition);
   END_TYPE;



   TYPE founded_item_select = SELECT
      (founded_item,
       representation_item);
   END_TYPE;



   TYPE frozen_design_object = SELECT
      (managed_design_object);
   END_TYPE;



   TYPE geometric_constraint_element = SELECT
      (point,
       curve,
       surface,
       vector,
       direction);
   END_TYPE;



   TYPE geometric_or_dimension_select = SELECT
      (geometric_tolerance,
       dimensional_characteristic);
   END_TYPE;



   TYPE geometric_set_select = SELECT
      (point,
       curve,
       surface);
   END_TYPE;



   TYPE geometric_status = SELECT
      (predefined_geometric_status,
       external_definition);
   END_TYPE;



   TYPE geometric_tolerance_qualifiers = ENUMERATION OF
      (pitch_diameter,
       minor_diameter,
       each_element,
       major_diameter,
       each_radial_element,
       not_concave,
       not_convex,
       free_state);
   END_TYPE;



   TYPE hiding_or_blanking_select = SELECT
      (annotation_fill_area);
   END_TYPE;



   TYPE horizontal_justification = ENUMERATION OF
      (right,
       centre,
       left);
   END_TYPE;



   TYPE hour_in_day = INTEGER;
   WHERE
      WR1:
         (0 <= SELF) AND (SELF < 24);
   END_TYPE;



   TYPE id_attribute_select = SELECT
      (address,
       representation);
   END_TYPE;



   TYPE identifier = STRING;
   END_TYPE;



   TYPE interconnect_module_design_object_category = ENUMERATION OF
      (interconnect_module_via,
       interconnect_module_inter_stratum_feature,
       interconnect_module_cutout,
       interconnect_module_fill_area,
       interconnect_module_stratum_feature);
   END_TYPE;



   TYPE interconnect_module_design_object_select = SELECT
      (via,
       cutout,
       component_termination_passage,
       land,
       conductor,
       conductive_filled_area,
       stratum_feature,
       laminate_component,
       inter_stratum_feature,
       non_functional_land);
   END_TYPE;



   TYPE interconnect_or_assembly_module_select = SELECT
      (component_termination_passage_interface_terminal,
       printed_connector_component_interface_terminal,
       non_functional_land_interface_terminal,
       land_interface_terminal);
   END_TYPE;



   TYPE invisible_item = SELECT
      (representation);
   END_TYPE;



   TYPE keepout_product_design_object_category = ENUMERATION OF
      (assembly_module_assembly_component,
       assembly_module_component_feature,
       assembly_ee_material,
       interconnect_ee_material,
       interconnect_module_assembly_component,
       interconnect_module_via,
       interconnect_module_inter_stratum_feature,
       interconnect_module_cutout,
       interconnect_module_fill_area,
       interconnect_module_laminate_component,
       interconnect_module_stratum_feature);
   END_TYPE;



   TYPE keepout_purpose = SELECT
      (predefined_keepout_purpose,
       external_definition);
   END_TYPE;



   TYPE knot_type = ENUMERATION OF
      (uniform_knots,
       quasi_uniform_knots,
       piecewise_bezier_knots,
       unspecified);
   END_TYPE;



   TYPE label = STRING;
   END_TYPE;



   TYPE land_template_terminal_class = ENUMERATION OF
      (surface_point_class,
       edge_curve_class,
       edge_point_class,
       surface_area_class);
   END_TYPE;



   TYPE layer_position_type = ENUMERATION OF
      (secondary,
       all,
       external,
       primary,
       internal);
   END_TYPE;



   TYPE layer_purpose = ENUMERATION OF
      (other_signal,
       lands_only,
       power_or_ground);
   END_TYPE;



   TYPE layered_item = SELECT
      (representation_item);
   END_TYPE;



   TYPE lead_form_type = SELECT
      (predefined_lead_form,
       external_definition);
   END_TYPE;



   TYPE length_measure = REAL;
   END_TYPE;



   TYPE life_cycle_stage = ENUMERATION OF
      (conceptual_design,
       final_design,
       detailed_design,
       preliminary_design);
   END_TYPE;



   TYPE linear_geometry_constraint_element = SELECT
      (line,
       plane,
       direction,
       vector);
   END_TYPE;



   TYPE list_characteristic = LIST [1:?] OF characteristic;
   END_TYPE;



   TYPE list_of_reversible_topology_item = LIST [0:?] OF reversible_topology_item;
   END_TYPE;



   TYPE locating_or_refinement_linear_profile_tolerance = SELECT
      (composite_linear_profile_locating_tolerance,
       composite_linear_profile_refinement_tolerance);
   END_TYPE;



   TYPE locating_or_refinement_surface_profile_tolerance = SELECT
      (composite_surface_profile_locating_tolerance,
       composite_surface_profile_refinement_tolerance);
   END_TYPE;



   TYPE locating_or_relating_position_tolerance = SELECT
      (composite_feature_locating_position_tolerance,
       composite_feature_relating_position_tolerance);
   END_TYPE;



   TYPE logical_property = LOGICAL;
   END_TYPE;



   TYPE luminous_intensity_measure = REAL;
   END_TYPE;



   TYPE managed_design_object = SELECT
      (adjacent_stratum_surface_definition,
       adjacent_stratum_surface_embedded_component_surface_definition,
       alias_identification,
       alternate_select_product,
       analytical_model,
       analytical_model_make_from_relationship,
       analytical_model_port,
       analytical_model_port_assignment,
       analytical_representation,
       assembly_bond_definition,
       assembly_component,
       assembly_component_placement_link,
       assembly_composition_relationship,
       assembly_item_number,
       assembly_joint,
       bond_assembly_position,
       boundary_size_characteristic,
       bus_element_link,
       bus_structural_definition,
       cartesian_coordinate_system,
       certification,
       characteristic,
       component_2d_location,
       component_3d_location,
       component_assembly_2d_position,
       component_assembly_3d_position,
       component_assembly_non_planar_position,
       component_external_reference,
       component_feature,
       component_feature_external_reference,
       component_feature_make_from_relationship,
       component_feature_relationship,
       component_feature_to_layout_feature_relationship,
       component_feature_to_physical_usage_view_assignment,
       component_group_assignment,
       component_make_from_relationship,
       component_mounting_clearance_relationship,
       component_non_planar_location,
       component_overlap_relationship,
       component_placement_restriction_assignment,
       component_to_physical_usage_view_assignment,
       composite_curve_segment,
       composite_signal_property_relationship,
       conductive_interconnect_element_terminal_link,
       configuration_controlled_message,
       conical_tolerance_zone_boundary_and_surface_relationship,
       conical_tolerance_zone_boundary_diametrical_size_characteristic,
       connection_zone,
       connectivity_allocation,
       connectivity_allocation_to_physical_network,
       connection_zone_interface_plane_relationship,
       connection_zone_map_identification,
       connection_zone_model_port_assignment,
       coordinated_characteristic,
       curve_style,
       curve_style_font,
       curve_style_font_and_scaling,
       measure_with_unit,
       date,
       datum_axis_and_tolerance_zone_orienting_relationship,
       datum_axis_related_orientation,
       datum_based_direction_vector,
       datum_based_length_measure,
       datum_based_vector_orientation,
       datum_difference_analytical_model_port_assignment,
       datum_difference_functional_unit_usage_view_terminal_assignment,
       datum_feature_material_condition_property,
       datum_feature_usage_in_datum_system_relationship,
       datum_precedence_assignment,
       datum_system_defining_conditions,
       datum_target_usage_in_datum_target_set_relationship,
       datum_usage_in_datum_system_relationship,
       design_composition_path,
       design_functional_unit_allocation_to_assembly_component,
       design_functional_unit_allocation_to_assembly_joint,
       design_functional_unit_allocation_to_fabrication_joint,
       design_functional_unit_allocation_to_reference_functional_unit,
       design_intent_modification,
       design_intent_modification_sequence,
       design_intent_modification_3d_position,
       design_intent_modification_planar_position,
       design_intent_modification_styled_area_representation,
       design_view_connection_zone_position_relationship,
       design_view_terminal_component_shape_relationship,
       device_2d_position,
       device_3d_position,
       device_terminal_map,
       device_terminal_map_relationship,
       dimensional_characteristic,
       dimensional_characteristic_representation,
       dimension_qualifier,
       dimension_set,
       direct_stratum_component_join_implementation,
       direction,
       direction_element,
       ee_approval,
       ee_colour,
       ee_document,
       ee_document_identifier,
       ee_material,
       ee_product,
       ee_product_category,
       ee_product_category_relationship,
       ee_product_configuration,
       ee_product_definition,
       ee_product_model,
       ee_product_specific_parameter_value_assignment,
       ee_product_version,
       ee_requirement_occurrence,
       ee_text,
       engineering_make_from,
       equivalent_functional_terminals_assignment,
       equivalent_functional_unit_definition_assignment,
       evaluated_characteristic,
       externally_defined_curve_font,
       externally_defined_hatch_style,
       externally_defined_tile,
       externally_defined_tile_style,
       external_definition,
       fabrication_joint,
       fill_area,
       fill_area_occurrence,
       fill_area_style,
       fill_area_style_hatching,
       fill_area_style_tile,
       fill_area_style_tile_curve_with_style,
       fill_area_style_tile_solid_region,
       fill_area_style_tile_symbol_with_style,
       font_definition,
       frozen_assignment,
       functional_specification,
       functional_terminal_group,
       functional_terminal_group_assignment,
       functional_unit,
       functional_unit_network_node_definition,
       functional_unit_network_terminal_definition_bus_assignment,
       functional_unit_network_terminal_definition_node_assignment,
       functional_unit_terminal,
       functional_unit_terminal_bus_assignment,
       functional_unit_terminal_node_assignment,
       functional_unit_usage_view_terminal_definition,
       functional_usage_view_to_part_terminal_assignment,
       functional_usage_view_to_printed_part_template_terminal_assignment,
       geometric_tolerance,
       geometric_tolerance_qualifier,
       interconnect_module_product_assembly_view_fabrication_joint,
       interconnect_module_stratum_assembly_relationship,
       interface_component_allocation,
       interface_mounted_join,
       internal_stratum_access,
       inter_stratum_extent,
       inter_stratum_join_implementation,
       join_relationship,
       junction_vertex_allocation,
       layer,
       layer_connection_point,
       layout_spacing_requirement_non_conforming_design_object,
       line_width_class,
       linear_array_placement_group_component_link,
       located_interconnect_module_thickness_requirement,
       marking,
       material_composition_relationship,
       mating_connector_component,
       mating_connector_placement_relationship,
       mating_connector_termination,
       model_parameter,
       model_parameter_relationship,
       next_higher_assembly_interface_requirement,
       operational_requirement_occurrence_relationship,
       organization,
       package_external_reference,
       package_terminal_external_reference,
       package_terminal_occurrence,
       packaged_connector_terminal_relationship,
       parameter_assignment,
       parameter_assignment_override,
       participant_date_and_time_assignment,
       part_connected_terminals_definition,
       part_device,
       part_device_terminal,
       part_device_terminal_model_port_assignment,
       part_feature_model_port_assignment,
       part_terminal_external_reference,
       part_template_or_physical_unit_2d_shape_representation_relationship,
       part_template_or_physical_unit_3d_shape_representation_relationship,
       passage_technology,
       person,
       person_and_organization,
       physical_connectivity_abstraction_map,
       physical_connectivity_definition,
       physical_connectivity_definition_relationship,
       physical_connectivity_element,
       physical_connectivity_make_from_relationship,
       physical_interconnection_definition,
       physical_network,
       physical_node_requirement_to_implementing_component_allocation,
       physical_unit_relationship,
       pitch_class,
       placement_group,
       placement_group_area_assignment,
       planned_characteristic,
       planned_effectivity,
       port_variable,
       positional_boundary_and_profile_boundary_member_relationship,
       positional_boundary_definition,
       positional_boundary_member_definition,
       positional_boundary_offset,
       printed_connector_template_terminal_relationship,
       printed_part_template_connected_terminals_definition,
       printed_part_template_material,
       printed_part_template_material_link,
       printed_part_template_terminal_relationship,
       product_association,
       projected_zone_and_base_relationship,
       projected_zone_height_characteristic,
       promissory_usage_relationship,
       promissory_usage_in_product_model_relationship,
       reference_composition_path,
       reference_functional_unit_assignment_to_part,
       registered_font,
       requirement_allocation,
       requirement_composition,
       restraint_condition,
       rule_action,
       rule_complex_clause,
       rule_conclusion_definition,
       rule_function,
       rule_justification,
       rule_premise_definition,
       rule_priority,
       rule_simple_clause,
       runout_tolerance_zone_orienting_relationship,
       runout_zone_orientation,
       security_classification,
       scalar_terminal_definition_link,
       separate_geometric_tolerance_requirement,
       shape_definition,
       shape_dimension_representation,
       shape_element,
       shape_element_locating_relationship,
       shape_element_relationship,
       signal,
       signal_property,
       signal_specification,
       simultaneous_geometric_tolerance_requirement,
       solid_curve,
       solid_fill_style,
       specification_allocation,
       stratum_concept_relationship,
       stratum_concept_to_physical_usage_view_assignment,
       stratum_feature_in_stratum_3d_position,
       stratum_feature_in_stratum_planar_position,
       stratum_feature_shape_stratum_average_surface_shape_relationship,
       stratum_feature_shape_stratum_surface_shape_relationship,
       stratum_feature_styled_area_representation,
       stratum_interconnect_module_3d_position,
       stratum_interconnect_module_planar_position,
       stratum_make_from_relationship,
       stratum_average_surface,
       stratum_surface,
       stratum_surface_in_stratum_3d_position,
       stratum_technology,
       stratum_technology_link,
       structured_text,
       structured_text_id_in_document,
       styled_curve_occurrence,
       substitute_product,
       sub_assembly_relationship,
       sub_model_placement,
       supplied_product_version,
       technology,
       terminal_pair_port_equivalence_relationship,
       termination_constraint,
       thermal_isolation_requirement_assignment,
       tolerance_zone_and_viewing_plane_orienting_relationship,
       tolerance_zone_boundary_definition,
       tolerance_zone_boundary_member_offset,
       tolerance_zone_definition,
       tolerance_zone_form,
       tolerance_zone_per_unit_size_specification,
       topological_junction,
       transmission_line_functional_unit_terminal_allocation,
       true_profile,
       usage_concept_usage_relationship,
       usage_view_connection_zone_terminal_shape_relationship,
       vector,
       viewing_plane_based_orientation,
       viewing_plane_definition,
       work_order,
       work_request);
   END_TYPE;



   TYPE markable_item = SELECT
      (assembly_module,
       bare_die,
       interconnect_module,
       package,
       pca,
       pcb,
       packaged_part);
   END_TYPE;



   TYPE marked_message_select = SELECT
      (configuration_controlled_message,
       ee_text);
   END_TYPE;



   TYPE mass_measure = REAL;
   END_TYPE;



   TYPE mass_property_quality = ENUMERATION OF
      (high,
       medium,
       low,
       is_unknown);
   END_TYPE;



   TYPE material_condition = ENUMERATION OF
      (nominal_material_condition,
       minimum_material_condition,
       maximum_material_condition);
   END_TYPE;



   TYPE material_condition_property_names = ENUMERATION OF
      (maximum_material_principle,
       least_material_requirement);
   END_TYPE;



   TYPE material_conductivity_classification = ENUMERATION OF
      (conductive,
       resistive,
       semi_conductive,
       non_conductive);
   END_TYPE;



   TYPE material_or_specification = SELECT
      (ee_requirement_occurrence,
       ee_material);
   END_TYPE;



   TYPE material_state_change_enumeration = ENUMERATION OF
      (material_addition,
       material_removal);
   END_TYPE;



   TYPE mating_connector_part = SELECT
      (ee_specification,
       printed_connector_template,
       packaged_connector);
   END_TYPE;



   TYPE measure_orientation = ENUMERATION OF
      (reversed,
       normal);
   END_TYPE;



   TYPE measure_value = SELECT
      (length_measure,
       mass_measure,
       time_measure,
       electric_current_measure,
       thermodynamic_temperature_measure,
       celsius_temperature_measure,
       amount_of_substance_measure,
       luminous_intensity_measure,
       plane_angle_measure,
       solid_angle_measure,
       area_measure,
       volume_measure,
       ratio_measure,
       parameter_value,
       numeric_measure,
       context_dependent_measure,
       descriptive_measure,
       positive_length_measure,
       positive_plane_angle_measure,
       count_measure);
   END_TYPE;



   TYPE message_content = STRING;
   END_TYPE;



   TYPE message_source_select = SELECT
      (organization,
       ee_approval,
       ee_product_version);
   END_TYPE;



   TYPE message_type = ENUMERATION OF
      (part_number,
       manufacturer_code,
       revision_identifier,
       approval_date);
   END_TYPE;



   TYPE metal_or_dielectric = ENUMERATION OF
      (over_finished_conductor,
       over_finished_dielectric);
   END_TYPE;



   TYPE minute_in_hour = INTEGER;
   WHERE
      WR1:
         (0 <= SELF) AND (SELF <= 59);
   END_TYPE;



   TYPE model_parameter_type = ENUMERATION OF
      (string_property_type,
       boolean_property_type,
       logical_property_type,
       numeric_property_type,
       physical_property_type);
   END_TYPE;



   TYPE month_in_year_number = INTEGER;
   WHERE
      WR1:
         (1 <= SELF) AND (SELF <= 12);
   END_TYPE;



   TYPE month_representation = INTEGER;
   END_TYPE;



   TYPE mounting_technology_type = ENUMERATION OF
      (surface_mount,
       through_hole);
   END_TYPE;



   TYPE name_attribute_select = SELECT
      (address,
       derived_unit,
       person_and_organization);
   END_TYPE;



   TYPE nomenclature = LIST [1:?] OF STRING;
   END_TYPE;



   TYPE non_numeric_property_value = SELECT
      (string_property,
       boolean_property,
       logical_property);
   END_TYPE;



   TYPE numeric_measure = NUMBER;
   END_TYPE;



   TYPE numeric_or_non_numeric_select = SELECT
      (external_definition,
       compound_characteristic_definition,
       measure_with_unit,
       non_numeric_property_value);
   END_TYPE;



   TYPE offset_types = ENUMERATION OF
      (towards_material,
       away_from_material);
   END_TYPE;



   TYPE open_shell_or_subsurface = SELECT
      (open_shell_based_surface,
       manifold_subsurface_shape);
   END_TYPE;



   TYPE orientation_select = SELECT
      (datum_axis_related_orientation,
       viewing_plane_based_orientation,
       datum_based_vector_orientation);
   END_TYPE;



   TYPE orientation_type = ENUMERATION OF
      (parallel,
       undefined,
       perpendicular);
   END_TYPE;



   TYPE owned_design_object = SELECT
      (managed_design_object);
   END_TYPE;



   TYPE package_or_package_external_reference = SELECT
      (package,
       package_external_reference);
   END_TYPE;



   TYPE package_or_printed_part_template = SELECT
      (package,
       printed_part_template);
   END_TYPE;



   TYPE package_terminal_or_package_terminal_external_reference = SELECT
      (package_terminal,
       package_terminal_external_reference);
   END_TYPE;



   TYPE package_terminal_or_printed_part_template_terminal = SELECT
      (package_terminal,
       printed_part_template_terminal);
   END_TYPE;



   TYPE packaged_or_printed_terminal = SELECT
      (packaged_part_terminal,
       printed_part_template_terminal);
   END_TYPE;



   TYPE padstack_arrangement = ENUMERATION OF
      (top,
       bottom,
       symmetrical);
   END_TYPE;



   TYPE parameter_assignment_or_rule_general_clause = SELECT
      (parameter_assignment,
       rule_general_clause);
   END_TYPE;



   TYPE parameter_value = REAL;
   END_TYPE;



   TYPE part_feature_or_template_feature = SELECT
      (land_template_terminal,
       component_termination_passage_template_terminal,
       part_feature,
       printed_part_template_terminal,
       part_terminal_external_reference,
       via_template_terminal);
   END_TYPE;



   TYPE part_template_or_physical_unit_2d_shape_select = SELECT
      (part_template_planar_shape,
       physical_unit_planar_shape);
   END_TYPE;



   TYPE part_template_or_physical_unit_3d_shape_select = SELECT
      (part_template_3d_shape,
       part_template_non_planar_2d_shape,
       physical_unit_3d_shape);
   END_TYPE;



   TYPE part_template_or_physical_unit_shape_select = SELECT
      (part_template_or_physical_unit_2d_shape_select,
       part_template_or_physical_unit_3d_shape_select);
   END_TYPE;



   TYPE pca_interface_select = SELECT
      (interconnect_module_component_terminal,
       component_interface_terminal,
       assembly_module_component_terminal);
   END_TYPE;



   TYPE pca_product_design_object_category = ENUMERATION OF
      (assembly_component_category,
       assembly_module_category,
       assembly_module_component_category,
       assembly_module_component_terminal_category,
       assembly_module_macro_component_category,
       assembly_module_macro_component_join_terminal_category,
       bare_die_component_category,
       bare_die_component_terminal_category,
       bonded_conductive_base_blind_via_category,
       buried_via_category,
       cable_component_category,
       component_feature_category,
       component_mounting_feature_category,
       component_termination_passage_category,
       component_termination_passage_and_contact_size_dependent_land_category,
       component_termination_passage_and_contact_size_dependent_non_functional_land_category,
       component_termination_passage_dependent_land_category,
       component_termination_passage_dependent_non_functional_land_category,
       component_termination_passage_interface_terminal_category,
       component_termination_passage_join_terminal_category,
       conductive_interconnect_element_terminal_category,
       conductive_interconnect_element_with_pre_defined_transitions_category,
       conductive_interconnect_element_with_user_defined_single_transition_category,
       connected_area_component_category,
       contact_size_dependent_land_category,
       contact_size_dependent_non_functional_land_category,
       cutout_category,
       cutout_edge_segment_category,
       dielectric_material_passage_category,
       electrical_isolation_laminate_component_category,
       embedded_component_terminal_category,
       fiducial_category,
       fill_area_category,
       filled_area_material_removal_laminate_component_category,
       inter_stratum_feature_category,
       interconnect_component_interface_terminal_category,
       interconnect_component_join_terminal_category,
       interconnect_module_component_category,
       interconnect_module_component_stratum_based_terminal_category,
       interconnect_module_component_surface_feature_category,
       interconnect_module_component_terminal_category,
       interconnect_module_edge_category,
       interconnect_module_edge_segment_category,
       interconnect_module_macro_component_category,
       interconnect_module_macro_component_join_terminal_category,
       interface_access_material_removal_laminate_component_category,
       interface_access_stratum_feature_template_component_category,
       interface_component_category,
       interfacial_connection_category,
       internal_probe_access_area_category,
       join_two_physical_connectivity_definition_supporting_inter_stratum_feature_category,
       join_two_physical_connectivity_definition_supporting_printed_component_category,
       laminate_component_category,
       laminate_text_component_category,
       laminate_text_string_component_category,
       land_category,
       land_interface_terminal_category,
       land_join_terminal_category,
       material_removal_laminate_component_category,
       minimally_defined_component_terminal_category,
       movable_packaged_component_join_terminal_category,
       multi_layer_material_removal_laminate_component_category,
       multi_layer_stratum_feature_template_component_category,
       non_conductive_base_blind_via_category,
       non_functional_land_category,
       non_functional_land_interface_terminal_category,
       non_functional_land_join_terminal_category,
       packaged_component_category,
       packaged_component_join_terminal_category,
       packaged_connector_component_category,
       packaged_connector_component_interface_terminal_category,
       partially_plated_cutout_category,
       partially_plated_interconnect_module_edge_category,
       physical_component_category,
       physical_connectivity_interrupting_cutout_category,
       physical_laminate_component_category,
       physical_network_supporting_inter_stratum_feature_category,
       plated_conductive_base_blind_via_category,
       plated_cutout_category,
       plated_cutout_edge_segment_category,
       plated_interconnect_module_edge_category,
       plated_interconnect_module_edge_segment_category,
       plated_passage_category,
       plated_passage_or_unsupported_passage_category,
       primary_stratum_indicator_symbol_category,
       printed_component_join_terminal_category,
       printed_connector_component_interface_terminal_category,
       probe_access_area_category,
       routed_interconnect_component_category,
       routed_physical_component_category,
       special_symbol_laminate_component_category,
       stratum_feature_category,
       stratum_feature_template_component_category,
       thermal_isolation_laminate_component_category,
       unrouted_conductive_interconnect_element_category,
       unsupported_passage_category,
       unsupported_passage_dependent_non_functional_land_category,
       via_category,
       via_and_contact_size_dependent_land_category,
       via_and_contact_size_dependent_non_functional_land_category,
       via_dependent_land_category,
       via_dependent_non_functional_land_category,
       via_terminal_category);
   END_TYPE;



   TYPE pcurve_or_surface = SELECT
      (pcurve,
       surface);
   END_TYPE;



   TYPE person_organization = SELECT
      (person_and_organization,
       organization);
   END_TYPE;



   TYPE person_organization_select = SELECT
      (person,
       organization,
       person_and_organization);
   END_TYPE;



   TYPE physical_unit_or_part_template = SELECT
      (part_template,
       physical_unit);
   END_TYPE;



   TYPE physical_unit_or_part_template_or_fp_or_pd = SELECT
      (part_template,
       physical_unit,
       footprint_definition,
       padstack_definition);
   END_TYPE;



   TYPE physical_unit_or_pund = SELECT
      (physical_unit_network_definition,
       physical_unit);
   END_TYPE;



   TYPE physical_unit_shape_select = SELECT
      (physical_unit_3d_shape,
       physical_unit_planar_shape,
       part_template_3d_shape,
       part_template_planar_shape);
   END_TYPE;



   TYPE placement_select = SELECT
      (axis2_placement_2d,
       axis2_placement_3d);
   END_TYPE;



   TYPE planar_purpose = SELECT
      (predefined_planar_purpose,
       external_definition);
   END_TYPE;



   TYPE plane_angle_measure = REAL;
   END_TYPE;



   TYPE point_curve_or_surface_constraint_element = SELECT
      (point,
       curve,
       surface);
   END_TYPE;



   TYPE positive_integer = INTEGER;
   END_TYPE;



   TYPE positive_length_measure = length_measure;
   WHERE
      WR1:
         SELF > 0.00000;
   END_TYPE;



   TYPE positive_plane_angle_measure = plane_angle_measure;
   WHERE
      WR1:
         SELF > 0.00000;
   END_TYPE;



   TYPE positive_ratio_measure = REAL;
   END_TYPE;



   TYPE precedence_type = ENUMERATION OF
      (secondary,
       tertiary,
       primary);
   END_TYPE;



   TYPE predefined_3d_purpose = ENUMERATION OF
      (analysis_input,
       analysis_output,
       shock_analysis_input,
       shock_analysis_output,
       design,
       vibration_analysis_input,
       vibration_analysis_output,
       electromagnetic_compatibility_analysis_input,
       electromagnetic_compatibility_analysis_output,
       thermal_analysis_input,
       thermal_analysis_output);
   END_TYPE;



   TYPE predefined_documentation_layer_purpose = ENUMERATION OF
      (soldermask,
       solderpaste,
       silkscreen,
       generic_layer,
       glue,
       gluemask,
       pastemask);
   END_TYPE;



   TYPE predefined_geometric_status = ENUMERATION OF
      (undefined,
       standard_datum_condition,
       perpendicular_primary_datum_axis,
       perpendicular_primary_datum_plane);
   END_TYPE;



   TYPE predefined_keepout_purpose = ENUMERATION OF
      (thermal,
       generic_clearance,
       shock,
       vibration,
       electromagnetic_compatibility);
   END_TYPE;



   TYPE predefined_lead_form = ENUMERATION OF
      (gull_wing,
       j_lead,
       reversed_j_lead,
       integral_terminal,
       undefined,
       ball,
       straight);
   END_TYPE;



   TYPE predefined_planar_purpose = ENUMERATION OF
      (analysis_input,
       analysis_output,
       shock_analysis_input,
       shock_analysis_output,
       assembly_symbol,
       design,
       design_profile,
       vibration_analysis_input,
       vibration_analysis_output,
       electromagnetic_compatibility_analysis_input,
       electromagnetic_compatibility_analysis_output,
       physical_extent,
       thermal_analysis_input,
       thermal_analysis_output);
   END_TYPE;



   TYPE preferred_surface_curve_representation = ENUMERATION OF
      (curve_3d,
       pcurve_s1,
       pcurve_s2);
   END_TYPE;



   TYPE presentable_text = STRING;
   END_TYPE;



   TYPE printed_part_template_or_printed_part_cross_section_template = SELECT
      (printed_part_template,
       printed_part_cross_section_template);
   END_TYPE;



   TYPE printed_part_template_terminal_class = ENUMERATION OF
      (curve_edge_segment,
       surface_point,
       area_edge_segment,
       surface_area);
   END_TYPE;



   TYPE product_object_select = SELECT
      (ee_product_configuration,
       assembly_item_number,
       ee_product_definition,
       ee_product_version,
       ee_product,
       functional_unit,
       assembly_joint,
       part_feature,
       physical_connectivity_element,
       physical_connectivity_definition,
       restriction_basis_item);
   END_TYPE;



   TYPE radial_geometry_constraint_element = SELECT
      (circle,
       cylindrical_surface,
       conical_surface,
       spherical_surface,
       right_circular_cylinder,
       right_circular_cone,
       sphere);
   END_TYPE;



   TYPE range_class = ENUMERATION OF
      (closed,
       lower_open,
       upper_open,
       open);
   END_TYPE;



   TYPE ratio_measure = REAL;
   END_TYPE;



   TYPE relationship_operation = ENUMERATION OF
      (and_operation,
       derived_from,
       or_operation);
   END_TYPE;



   TYPE requirement_allocation_select = SELECT
      (assembly_requirement_allocation,
       requirement_allocation,
       functional_unit_requirement_allocation);
   END_TYPE;



   TYPE restrained_item_select = SELECT
      (datum_feature_usage_in_datum_relationship,
       physical_feature_or_part_template);
   END_TYPE;



   TYPE restriction_basis_item = SELECT
      (stratum_concept,
       ee_requirement_occurrence,
       part_feature,
       stratum,
       component_or_component_feature);
   END_TYPE;



   TYPE reversible_topology = SELECT
      (reversible_topology_item,
       list_of_reversible_topology_item,
       set_of_reversible_topology_item);
   END_TYPE;



   TYPE reversible_topology_item = SELECT
      (edge,
       path,
       face,
       face_bound,
       closed_shell,
       open_shell);
   END_TYPE;



   TYPE rule_complex_or_simple = SELECT
      (rule_complex_clause,
       rule_simple_clause);
   END_TYPE;



   TYPE scalar_or_coordinated_characteristics = SELECT
      (coordinated_characteristic,
       characteristic);
   END_TYPE;



   TYPE seating_plane_intersection_type = ENUMERATION OF
      (surface_intersection,
       through_intersection,
       does_not_intersect);
   END_TYPE;



   TYPE second_in_minute = REAL;
   WHERE
      WR1:
         (0 <= SELF) AND (SELF <= 60.0000);
   END_TYPE;



   TYPE set_characteristic = SET [1:?] OF characteristic;
   END_TYPE;



   TYPE set_of_reversible_topology_item = SET [0:?] OF reversible_topology_item;
   END_TYPE;



   TYPE shape_approximation_level = ENUMERATION OF
      (coarse,
       detailed,
       is_unknown);
   END_TYPE;



   TYPE shape_class = ENUMERATION OF
      (extrusion,
       manhattan_block,
       other,
       is_unknown);
   END_TYPE;



   TYPE shape_extent = ENUMERATION OF
      (envelope,
       over_body,
       over_lands,
       over_breakout);
   END_TYPE;



   TYPE shape_location = ENUMERATION OF
      (above,
       below,
       congruent);
   END_TYPE;



   TYPE shell = SELECT
      (vertex_shell,
       wire_shell,
       open_shell,
       closed_shell);
   END_TYPE;



   TYPE shieldable_item = SELECT
      (assembly_component,
       component_feature,
       physical_connectivity_definition);
   END_TYPE;



   TYPE si_prefix = ENUMERATION OF
      (exa,
       peta,
       tera,
       giga,
       mega,
       kilo,
       hecto,
       deca,
       deci,
       centi,
       milli,
       micro,
       nano,
       pico,
       femto,
       atto);
   END_TYPE;



   TYPE si_unit_name = ENUMERATION OF
      (metre,
       gram,
       second,
       ampere,
       kelvin,
       mole,
       candela,
       radian,
       steradian,
       hertz,
       newton,
       pascal,
       joule,
       watt,
       coulomb,
       volt,
       farad,
       ohm,
       siemens,
       weber,
       tesla,
       henry,
       degree_Celsius,
       lumen,
       lux,
       becquerel,
       gray,
       sievert);
   END_TYPE;



   TYPE signal_flow_direction = ENUMERATION OF
      (unknown_direction,
       not_applicable,
       output_direction,
       input_direction,
       bidirectional);
   END_TYPE;



   TYPE size_select = SELECT
      (positive_length_measure,
       measure_with_unit,
       descriptive_measure);
   END_TYPE;



   TYPE solid_angle_measure = REAL;
   END_TYPE;



   TYPE source_item = SELECT
      (identifier);
   END_TYPE;



   TYPE space_context_select = SELECT
      (representation_item);
   END_TYPE;



   TYPE spacing_type = ENUMERATION OF
      (nearest_boundary,
       centroid,
       furthest_boundary);
   END_TYPE;



   TYPE specification_product_object_select = SELECT
      (ee_product_configuration,
       ee_product_definition,
       ee_product_version,
       ee_product,
       part_feature,
       physical_connectivity_element,
       physical_connectivity_definition,
       stratum_concept,
       stratum,
       component_or_component_feature);
   END_TYPE;



   TYPE square_or_round = ENUMERATION OF
      (square,
       round);
   END_TYPE;



   TYPE standard_document_identification_string = STRING;
   END_TYPE;



   TYPE standard_or_reference_document = SELECT
      (ee_document,
       standard_document_identification_string);
   END_TYPE;



   TYPE status = ENUMERATION OF
      (disapproved,
       withdrawn,
       not_yet_approved,
       approved);
   END_TYPE;



   TYPE stiffness_class = ENUMERATION OF
      (fluid_like,
       conformal_coat,
       stiff_laminate);
   END_TYPE;



   TYPE stratum_concept = SELECT
      (laminate_component,
       inter_stratum_feature,
       stratum_feature,
       stratum,
       stratum_surface);
   END_TYPE;



   TYPE stratum_feature_3d_shape_select = SELECT
      (stratum_feature_non_planar_2d_shape,
       stratum_feature_3d_shape);
   END_TYPE;



   TYPE stratum_feature_or_stratum_feature_template_component = SELECT
      (stratum_feature,
       stratum_feature_template_component);
   END_TYPE;



   TYPE stratum_feature_planar_representation_select = SELECT
      (stratum_feature_styled_area_representation,
       stratum_feature_planar_shape);
   END_TYPE;



   TYPE stratum_surface_designation = ENUMERATION OF
      (primary_surface,
       secondary_surface);
   END_TYPE;



   TYPE stratum_surface_shape_select = SELECT
      (stratum_surface_shape,
       stratum_average_surface_shape);
   END_TYPE;



   TYPE string_property = STRING;
   END_TYPE;



   TYPE style_context_select = SELECT
      (representation,
       representation_item);
   END_TYPE;



   TYPE styled_area_representation = SELECT
      (fill_area_occurrence,
       styled_curve_occurrence);
   END_TYPE;



   TYPE surface_boundary = SELECT
      (boundary_curve,
       degenerate_pcurve);
   END_TYPE;



   TYPE surface_model = SELECT
      (shell_based_surface_model);
   END_TYPE;



   TYPE surface_or_solid_model = SELECT
      (surface_model,
       solid_model);
   END_TYPE;



   TYPE swept_surface_or_solid = SELECT
      (swept_surface,
       swept_face_solid,
       swept_area_solid);
   END_TYPE;



   TYPE template_select = SELECT
      (stratum_feature_template,
       material_addition_feature_template,
       material_removal_feature_template);
   END_TYPE;



   TYPE terminal_or_inter_stratum_feature = SELECT
      (inter_stratum_feature,
       embedded_component_terminal,
       interconnect_module_macro_component_join_terminal,
       interconnect_module_terminal,
       printed_component_join_terminal);
   END_TYPE;



   TYPE termination_or_junction = SELECT
      (component_terminal,
       topological_junction);
   END_TYPE;



   TYPE text = STRING;
   END_TYPE;



   TYPE text_alignment = label;
   END_TYPE;



   TYPE text_or_character = SELECT
      (text_literal);
   END_TYPE;



   TYPE text_path = ENUMERATION OF
      (left,
       right,
       up,
       down);
   END_TYPE;



   TYPE thermal_isolation_removal_structure_or_template = SELECT
      (thermal_isolation_removal_structure,
       thermal_isolation_removal_template);
   END_TYPE;



   TYPE thermodynamic_temperature_measure = REAL;
   END_TYPE;



   TYPE three_d_purpose = SELECT
      (predefined_3d_purpose,
       external_definition);
   END_TYPE;



   TYPE time_measure = REAL;
   END_TYPE;



   TYPE toleranceable_shape_element = SELECT
      (centre_axis,
       centre_plane,
       centre_point,
       tangent_plane,
       physical_feature_or_part_template);
   END_TYPE;



   TYPE trace_junction_or_via = SELECT
      (inter_stratum_join_relationship,
       explicitly_located_layer_connection_point);
   END_TYPE;



   TYPE transformation = SELECT
      (functionally_defined_transformation);
   END_TYPE;



   TYPE transition_code = ENUMERATION OF
      (discontinuous,
       continuous,
       cont_same_gradient,
       cont_same_gradient_same_curvature);
   END_TYPE;



   TYPE trimming_preference = ENUMERATION OF
      (cartesian,
       parameter,
       unspecified);
   END_TYPE;



   TYPE trimming_select = SELECT
      (cartesian_point,
       parameter_value);
   END_TYPE;



   TYPE true_profile_representations = SELECT
      (dimension_set,
       ee_document,
       rule_function,
       bound_volume_shape);
   END_TYPE;



   TYPE two_or_three_dimensional = ENUMERATION OF
      (three_dimensional,
       two_dimensional);
   END_TYPE;



   TYPE unit = SELECT
      (named_unit,
       derived_unit);
   END_TYPE;



   TYPE usage_concept = SELECT
      (land_template_terminal,
       component_termination_passage_template_terminal,
       via_template_terminal,
       non_feature_shape_element,
       part_feature,
       printed_part_template_terminal);
   END_TYPE;



   TYPE usage_view_terminal = SELECT
      (assembly_module_terminal,
       bare_die_terminal,
       component_termination_passage_template_terminal,
       interconnect_module_terminal,
       land_template_terminal,
       package_terminal,
       printed_part_template_terminal,
       via_template_terminal,
       part_mounting_feature);
   END_TYPE;



   TYPE value_context_select = SELECT
      (representation_item);
   END_TYPE;



   TYPE value_qualifier = SELECT
      (precision_qualifier,
       type_qualifier,
       uncertainty_qualifier);
   END_TYPE;



   TYPE vector_or_direction = SELECT
      (vector,
       direction);
   END_TYPE;



   TYPE vertical_justification = ENUMERATION OF
      (centre,
       top,
       bottom);
   END_TYPE;



   TYPE view_shape_select = SELECT
      (part_template_3d_shape,
       physical_unit_3d_shape,
       part_template_non_planar_2d_shape,
       part_template_planar_shape,
       physical_unit_planar_shape);
   END_TYPE;



   TYPE volume_measure = REAL;
   END_TYPE;



   TYPE week_in_year_number = INTEGER;
   WHERE
      WR1:
         (1 <= SELF) AND (SELF <= 53);
   END_TYPE;



   TYPE wireframe_model = SELECT
      (shell_based_wireframe_model,
       edge_based_wireframe_model);
   END_TYPE;



   TYPE year_number = INTEGER;
   END_TYPE;


(* ***********************************
Functions in the schema AP210_ARM_EXTENDED
*********************************** *)


   FUNCTION acyclic_curve_replica
      (rep : curve_replica;
       parent : curve ) : BOOLEAN;
      IF NOT ('AP210_ARM_EXTENDED.CURVE_REPLICA' IN TYPEOF(parent)) THEN
         RETURN (TRUE);
      END_IF;
      IF parent :=: rep THEN
         RETURN (FALSE);
      ELSE
         RETURN (acyclic_curve_replica(rep, parent\curve_replica.parent_curve));
      END_IF;
   END_FUNCTION;



   FUNCTION acyclic_mapped_representation
      (parent_set : SET OF representation;
       children_set : SET OF representation_item ) : BOOLEAN;
   LOCAL
      x : SET OF representation_item;
      y : SET OF representation_item;
   END_LOCAL;
      x := QUERY (z <* children_set| 'AP210_ARM_EXTENDED.MAPPED_ITEM' IN TYPEOF(z));
      IF SIZEOF(x) > 0 THEN
         REPEAT i := 1 TO HIINDEX(x);
            IF x[i]\mapped_item.mapping_source.mapped_representation IN parent_set THEN
               RETURN (FALSE);
            END_IF;
            IF NOT acyclic_mapped_representation((parent_set + x[i]\mapped_item.mapping_source.mapped_representation), x[i]\mapped_item.mapping_source.mapped_representation.items) THEN
               RETURN (FALSE);
            END_IF;
         END_REPEAT;
      END_IF;
      x := children_set - x;
      IF SIZEOF(x) > 0 THEN
         REPEAT i := 1 TO HIINDEX(x);
            y := QUERY (z <* bag_to_set(USEDIN(x[i], ''))| 'AP210_ARM_EXTENDED.REPRESENTATION_ITEM' IN TYPEOF(z));
            IF NOT acyclic_mapped_representation(parent_set, y) THEN
               RETURN (FALSE);
            END_IF;
         END_REPEAT;
      END_IF;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION acyclic_point_replica
      (rep : point_replica;
       parent : point ) : BOOLEAN;
      IF NOT ('AP210_ARM_EXTENDED.POINT_REPLICA' IN TYPEOF(parent)) THEN
         RETURN (TRUE);
      END_IF;
      IF parent :=: rep THEN
         RETURN (FALSE);
      ELSE
         RETURN (acyclic_point_replica(rep, parent\point_replica.parent_pt));
      END_IF;
   END_FUNCTION;



   FUNCTION acyclic_solid_replica
      (rep : solid_replica;
       parent : solid_model ) : BOOLEAN;
      IF NOT ('AP210_ARM_EXTENDED.SOLID_REPLICA' IN TYPEOF(parent)) THEN
         RETURN (TRUE);
      END_IF;
      IF parent :=: rep THEN
         RETURN (FALSE);
      ELSE
         RETURN (acyclic_solid_replica(rep, parent\solid_replica.parent_solid));
      END_IF;
   END_FUNCTION;



   FUNCTION acyclic_surface_replica
      (rep : surface_replica;
       parent : surface ) : BOOLEAN;
      IF NOT ('AP210_ARM_EXTENDED.SURFACE_REPLICA' IN TYPEOF(parent)) THEN
         RETURN (TRUE);
      END_IF;
      IF parent :=: rep THEN
         RETURN (FALSE);
      ELSE
         RETURN (acyclic_surface_replica(rep, parent\surface_replica.parent_surface));
      END_IF;
   END_FUNCTION;



   FUNCTION add_data_element
      (input1 : length_measure_with_unit;
       input2 : length_measure_with_unit ) : length_measure_with_unit;
      RETURN (input1);
   END_FUNCTION;



   FUNCTION advanced_face_properties
      (testface : face ) : BOOLEAN;
      IF 'AP210_ARM_EXTENDED.ADVANCED_FACE' IN TYPEOF(testface) THEN
         RETURN (TRUE);
      END_IF;
      IF 'AP210_ARM_EXTENDED.SUBFACE' IN TYPEOF(testface) THEN
         RETURN (advanced_face_properties(testface.parent_face));
      ELSE
         RETURN (FALSE);
      END_IF;
   END_FUNCTION;



   FUNCTION associated_surface
      (arg : pcurve_or_surface ) : surface;
   LOCAL
      surf : surface;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(arg) THEN
         surf := arg.basis_surface;
      ELSE
         surf := arg;
      END_IF;
      RETURN (surf);
   END_FUNCTION;



   FUNCTION bag_to_set
      (the_bag : BAG OF GENERIC : intype ) : SET OF GENERIC : intype;
   LOCAL
      the_set : SET OF GENERIC : intype := [];
      i : INTEGER;
   END_LOCAL;
      IF SIZEOF(the_bag) > 0 THEN
         REPEAT i := 1 TO HIINDEX(the_bag);
            the_set := the_set + the_bag[i];
         END_REPEAT;
      END_IF;
      RETURN (the_set);
   END_FUNCTION;



   FUNCTION base_axis
      (dim : INTEGER;
       axis1 : direction;
       axis2 : direction;
       axis3 : direction ) : LIST [2:3] OF direction;
   LOCAL
      u : LIST [2:3] OF direction;
      factor : REAL;
      d1 : direction;
      d2 : direction;
   END_LOCAL;
      IF dim = 3 THEN
         d1 := NVL(normalise(axis3), dummy_gri || direction([ 0.00000, 0.00000, 1.00000 ]));
         d2 := first_proj_axis(d1, axis1);
         u := [ d2, second_proj_axis(d1, d2, axis2), d1 ];
      ELSE
         IF EXISTS(axis1) THEN
            d1 := normalise(axis1);
            u := [ d1, orthogonal_complement(d1) ];
            IF EXISTS(axis2) THEN
               factor := dot_product(axis2, u[2]);
               IF factor < 0.00000 THEN
                  u[2].direction_ratios[1] := -u[2].direction_ratios[1];
                  u[2].direction_ratios[2] := -u[2].direction_ratios[2];
               END_IF;
            END_IF;
         ELSE
            IF EXISTS(axis2) THEN
               d1 := normalise(axis2);
               u := [ orthogonal_complement(d1), d1 ];
               u[1].direction_ratios[1] := -u[1].direction_ratios[1];
               u[1].direction_ratios[2] := -u[1].direction_ratios[2];
            ELSE
               u := [ dummy_gri || direction([ 1.00000, 0.00000 ]), dummy_gri || direction([ 0.00000, 1.00000 ]) ];
            END_IF;
         END_IF;
      END_IF;
      RETURN (u);
   END_FUNCTION;



   FUNCTION boolean_choose
      (b : BOOLEAN;
       choice1 : GENERIC : item;
       choice2 : GENERIC : item ) : GENERIC : item;
      IF b THEN
         RETURN (choice1);
      ELSE
         RETURN (choice2);
      END_IF;
   END_FUNCTION;



   FUNCTION build_2axes
      (ref_direction : direction ) : LIST [2:2] OF direction;
   LOCAL
      d : direction := NVL(normalise(ref_direction), dummy_gri || direction([ 1.00000, 0.00000 ]));
   END_LOCAL;
      RETURN ([ d, orthogonal_complement(d) ]);
   END_FUNCTION;



   FUNCTION build_axes
      (axis : direction;
       ref_direction : direction ) : LIST [3:3] OF direction;
   LOCAL
      d1 : direction;
      d2 : direction;
   END_LOCAL;
      d1 := NVL(normalise(axis), dummy_gri || direction([ 0.00000, 0.00000, 1.00000 ]));
      d2 := first_proj_axis(d1, ref_direction);
      RETURN ([ d2, normalise(cross_product(d1, d2)).orientation, d1 ]);
   END_FUNCTION;



   FUNCTION closed_shell_reversed
      (a_shell : closed_shell ) : oriented_closed_shell;
   LOCAL
      the_reverse : oriented_closed_shell;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.ORIENTED_CLOSED_SHELL' IN TYPEOF(a_shell) THEN
         the_reverse := dummy_tri || connected_face_set(a_shell\connected_face_set.cfs_faces) || closed_shell() || oriented_closed_shell(a_shell\oriented_closed_shell.closed_shell_element, NOT a_shell\oriented_closed_shell.orientation);
      ELSE
         the_reverse := dummy_tri || connected_face_set(a_shell\connected_face_set.cfs_faces) || closed_shell() || oriented_closed_shell(a_shell, FALSE);
      END_IF;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION conditional_reverse
      (p : BOOLEAN;
       an_item : reversible_topology ) : reversible_topology;
      IF p THEN
         RETURN (an_item);
      ELSE
         RETURN (topology_reversed(an_item));
      END_IF;
   END_FUNCTION;



   FUNCTION consistent_bus_structural_definition
      (input : SET OF bus_element_link ) : BOOLEAN;
   LOCAL
      vertex : SET OF managed_design_object := [];
      edge : INTEGER := SIZEOF(input);
      vc : INTEGER := 0;
      vertex_degree : INTEGER := 0;
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(input) BY 1;
         vertex := vertex + input[i].precedent_element;
         vertex := vertex + input[i].subsequent_element;
      END_REPEAT;
      vc := SIZEOF(vertex);
      IF vc <> edge + 1 THEN
         RETURN (FALSE);
      END_IF;
      REPEAT i := 1 TO vc BY 1;
         vertex_degree := 0;
         REPEAT j := 1 TO SIZEOF(input) BY 1;
            IF input[j].precedent_element = vertex[i] THEN
               vertex_degree := vertex_degree + 1;
            END_IF;
            IF input[j].subsequent_element = vertex[i] THEN
               vertex_degree := vertex_degree + 1;
            END_IF;
         END_REPEAT;
         IF vertex_degree > 2 THEN
            RETURN (FALSE);
         END_IF;
      END_REPEAT;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION consistent_stack_definition
      (input1 : printed_part_template;
       input2 : SET OF printed_component_link ) : BOOLEAN;
   LOCAL
      pass : BOOLEAN := FALSE;
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(input2) BY 1;
         pass := input2[i].definition.associated_printed_part_template :=: input1;
      END_REPEAT;
      RETURN (pass);
   END_FUNCTION;



   FUNCTION constraints_composite_curve_on_surface
      (c : composite_curve_on_surface ) : BOOLEAN;
   LOCAL
      n_segments : INTEGER := SIZEOF(c.segments);
   END_LOCAL;
      REPEAT k := 1 TO n_segments;
         IF (NOT ('AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(c\composite_curve.segments[k].parent_curve)) AND NOT ('AP210_ARM_EXTENDED.SURFACE_CURVE' IN TYPEOF(c\composite_curve.segments[k].parent_curve))) AND NOT ('AP210_ARM_EXTENDED.COMPOSITE_CURVE_ON_SURFACE' IN TYPEOF(c\composite_curve.segments[k].parent_curve)) THEN
            RETURN (FALSE);
         END_IF;
      END_REPEAT;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION constraints_geometry_shell_based_surface_model
      (m : shell_based_surface_model ) : BOOLEAN;
   LOCAL
      result : BOOLEAN := TRUE;
   END_LOCAL;
      REPEAT j := 1 TO SIZEOF(m.sbsm_boundary);
         IF NOT ('AP210_ARM_EXTENDED.OPEN_SHELL' IN TYPEOF(m.sbsm_boundary[j])) AND NOT ('AP210_ARM_EXTENDED.CLOSED_SHELL' IN TYPEOF(m.sbsm_boundary[j])) THEN
            result := FALSE;
            RETURN (result);
         END_IF;
      END_REPEAT;
      RETURN (result);
   END_FUNCTION;



   FUNCTION constraints_geometry_shell_based_wireframe_model
      (m : shell_based_wireframe_model ) : BOOLEAN;
   LOCAL
      result : BOOLEAN := TRUE;
   END_LOCAL;
      REPEAT j := 1 TO SIZEOF(m.sbwm_boundary);
         IF NOT ('AP210_ARM_EXTENDED.WIRE_SHELL' IN TYPEOF(m.sbwm_boundary[j])) AND NOT ('AP210_ARM_EXTENDED.VERTEX_SHELL' IN TYPEOF(m.sbwm_boundary[j])) THEN
            result := FALSE;
            RETURN (result);
         END_IF;
      END_REPEAT;
      RETURN (result);
   END_FUNCTION;



   FUNCTION constraints_param_b_spline
      (degree : INTEGER;
       up_knots : INTEGER;
       up_cp : INTEGER;
       knot_mult : LIST OF INTEGER;
       knots : LIST OF parameter_value ) : BOOLEAN;
   LOCAL
      result : BOOLEAN := TRUE;
      k : INTEGER;
      sum : INTEGER;
   END_LOCAL;
      sum := knot_mult[1];
      REPEAT i := 2 TO up_knots;
         sum := sum + knot_mult[i];
      END_REPEAT;
      IF (((degree < 1) OR (up_knots < 2)) OR (up_cp < degree)) OR (sum <> degree + up_cp + 2) THEN
         result := FALSE;
         RETURN (result);
      END_IF;
      k := knot_mult[1];
      IF (k < 1) OR (k > degree + 1) THEN
         result := FALSE;
         RETURN (result);
      END_IF;
      REPEAT i := 2 TO up_knots;
         IF (knot_mult[i] < 1) OR (knots[i] <= knots[(i - 1)]) THEN
            result := FALSE;
            RETURN (result);
         END_IF;
         k := knot_mult[i];
         IF (i < up_knots) AND (k > degree) THEN
            result := FALSE;
            RETURN (result);
         END_IF;
         IF (i = up_knots) AND (k > degree + 1) THEN
            result := FALSE;
            RETURN (result);
         END_IF;
      END_REPEAT;
      RETURN (result);
   END_FUNCTION;



   FUNCTION constraints_rectangular_composite_surface
      (s : rectangular_composite_surface ) : BOOLEAN;
      REPEAT i := 1 TO s.n_u;
         REPEAT j := 1 TO s.n_v;
            IF NOT (('AP210_ARM_EXTENDED.B_SPLINE_SURFACE' IN TYPEOF(s.segments[i][j].parent_surface)) OR ('AP210_ARM_EXTENDED.RECTANGULAR_TRIMMED_SURFACE' IN TYPEOF(s.segments[i][j].parent_surface))) THEN
               RETURN (FALSE);
            END_IF;
         END_REPEAT;
      END_REPEAT;
      REPEAT i := 1 TO s.n_u - 1;
         REPEAT j := 1 TO s.n_v;
            IF s.segments[i][j].u_transition = discontinuous THEN
               RETURN (FALSE);
            END_IF;
         END_REPEAT;
      END_REPEAT;
      REPEAT i := 1 TO s.n_u;
         REPEAT j := 1 TO s.n_v - 1;
            IF s.segments[i][j].v_transition = discontinuous THEN
               RETURN (FALSE);
            END_IF;
         END_REPEAT;
      END_REPEAT;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION correlated_terminals
      (input1 : SET OF conductive_interconnect_element_terminal;
       input2 : SET OF conductive_interconnect_element_terminal_link ) : BOOLEAN;
   LOCAL
      pass : BOOLEAN := FALSE;
      ciet : SET OF conductive_interconnect_element_terminal := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(input2) BY 1;
         ciet := ciet + input2[i].precedent_point;
         ciet := ciet + input2[i].subsequent_point;
      END_REPEAT;
      pass := input1 = ciet;
      RETURN (pass);
   END_FUNCTION;



   FUNCTION cross_product
      (arg1 : direction;
       arg2 : direction ) : vector;
   LOCAL
      mag : REAL;
      res : direction;
      v1 : LIST [3:3] OF REAL;
      v2 : LIST [3:3] OF REAL;
      result : vector;
   END_LOCAL;
      IF (NOT EXISTS(arg1) OR (arg1.dim = 2)) OR (NOT EXISTS(arg2) OR (arg2.dim = 2)) THEN
         RETURN (?);
      ELSE
         BEGIN
            v1 := normalise(arg1).direction_ratios;
            v2 := normalise(arg2).direction_ratios;
            res := dummy_gri || direction([ (v1[2] * v2[3] - v1[3] * v2[2]), (v1[3] * v2[1] - v1[1] * v2[3]), (v1[1] * v2[2] - v1[2] * v2[1]) ]);
            mag := 0.00000;
            REPEAT i := 1 TO 3;
               mag := mag + res.direction_ratios[i] * res.direction_ratios[i];
            END_REPEAT;
            IF mag > 0.00000 THEN
               result := dummy_gri || vector(res, sqrt(mag));
            ELSE
               result := dummy_gri || vector(arg1, 0.00000);
            END_IF;
            RETURN (result);
         END;
      END_IF;
   END_FUNCTION;



   FUNCTION curve_weights_positive
      (b : rational_b_spline_curve ) : BOOLEAN;
   LOCAL
      result : BOOLEAN := TRUE;
   END_LOCAL;
      REPEAT i := 0 TO b.upper_index_on_control_points;
         IF b.weights[i] <= 0.00000 THEN
            result := FALSE;
            RETURN (result);
         END_IF;
      END_REPEAT;
      RETURN (result);
   END_FUNCTION;



   FUNCTION derive_dimensional_exponents
      (x : unit ) : dimensional_exponents;
   LOCAL
      result : dimensional_exponents := dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.DERIVED_UNIT' IN TYPEOF(x) THEN
         REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
            result.length_exponent := result.length_exponent + x.elements[i].exponent * x.elements[i].unit.dimensions.length_exponent;
            result.mass_exponent := result.mass_exponent + x.elements[i].exponent * x.elements[i].unit.dimensions.mass_exponent;
            result.time_exponent := result.time_exponent + x.elements[i].exponent * x.elements[i].unit.dimensions.time_exponent;
            result.electric_current_exponent := result.electric_current_exponent + x.elements[i].exponent * x.elements[i].unit.dimensions.electric_current_exponent;
            result.thermodynamic_temperature_exponent := result.thermodynamic_temperature_exponent + x.elements[i].exponent * x.elements[i].unit.dimensions.thermodynamic_temperature_exponent;
            result.amount_of_substance_exponent := result.amount_of_substance_exponent + x.elements[i].exponent * x.elements[i].unit.dimensions.amount_of_substance_exponent;
            result.luminous_intensity_exponent := result.luminous_intensity_exponent + x.elements[i].exponent * x.elements[i].unit.dimensions.luminous_intensity_exponent;
         END_REPEAT;
      ELSE
         result := x.dimensions;
      END_IF;
      RETURN (result);
   END_FUNCTION;



   FUNCTION derive_mirror
      (cto2d : cartesian_transformation_operator_2d ) : BOOLEAN;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION dimension_of
      (item : geometric_representation_item ) : dimension_count;
   LOCAL
      x : SET OF representation;
      y : representation_context;
      dim : dimension_count;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.CARTESIAN_POINT' IN TYPEOF(item) THEN
         dim := SIZEOF(item\cartesian_point.coordinates);
         RETURN (dim);
      END_IF;
      IF 'AP210_ARM_EXTENDED.DIRECTION' IN TYPEOF(item) THEN
         dim := SIZEOF(item\direction.direction_ratios);
         RETURN (dim);
      END_IF;
      IF 'AP210_ARM_EXTENDED.VECTOR' IN TYPEOF(item) THEN
         dim := SIZEOF(item\vector.orientation\direction.direction_ratios);
         RETURN (dim);
      END_IF;
      x := using_representations(item);
      y := x[1].context_of_items;
      dim := y\geometric_representation_context.coordinate_space_dimension;
      RETURN (dim);
   END_FUNCTION;



   FUNCTION dimensions_for_si_unit
      (n : si_unit_name ) : dimensional_exponents;
      CASE n OF
         metre :
               RETURN (dimensional_exponents(1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         gram :
               RETURN (dimensional_exponents(0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         second :
               RETURN (dimensional_exponents(0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         ampere :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000));
         kelvin :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000));
         mole :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000));
         candela :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000));
         radian :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         steradian :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         hertz :
               RETURN (dimensional_exponents(0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         newton :
               RETURN (dimensional_exponents(1.00000, 1.00000, -2.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         pascal :
               RETURN (dimensional_exponents(-1.00000, 1.00000, -2.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         joule :
               RETURN (dimensional_exponents(2.00000, 1.00000, -2.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         watt :
               RETURN (dimensional_exponents(2.00000, 1.00000, -3.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         coulomb :
               RETURN (dimensional_exponents(0.00000, 0.00000, 1.00000, 1.00000, 0.00000, 0.00000, 0.00000));
         volt :
               RETURN (dimensional_exponents(2.00000, 1.00000, -3.00000, -1.00000, 0.00000, 0.00000, 0.00000));
         farad :
               RETURN (dimensional_exponents(-2.00000, -1.00000, 4.00000, 1.00000, 0.00000, 0.00000, 0.00000));
         ohm :
               RETURN (dimensional_exponents(2.00000, 1.00000, -3.00000, -2.00000, 0.00000, 0.00000, 0.00000));
         siemens :
               RETURN (dimensional_exponents(-2.00000, -1.00000, 3.00000, 2.00000, 0.00000, 0.00000, 0.00000));
         weber :
               RETURN (dimensional_exponents(2.00000, 1.00000, -2.00000, -1.00000, 0.00000, 0.00000, 0.00000));
         tesla :
               RETURN (dimensional_exponents(0.00000, 1.00000, -2.00000, -1.00000, 0.00000, 0.00000, 0.00000));
         henry :
               RETURN (dimensional_exponents(2.00000, 1.00000, -2.00000, -2.00000, 0.00000, 0.00000, 0.00000));
         degree_Celsius :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000));
         lumen :
               RETURN (dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000));
         lux :
               RETURN (dimensional_exponents(-2.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000));
         becquerel :
               RETURN (dimensional_exponents(0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         gray :
               RETURN (dimensional_exponents(2.00000, 0.00000, -2.00000, 0.00000, 0.00000, 0.00000, 0.00000));
         sievert :
               RETURN (dimensional_exponents(2.00000, 0.00000, -2.00000, 0.00000, 0.00000, 0.00000, 0.00000));
      OTHERWISE :
            RETURN (?);
      END_CASE;
   END_FUNCTION;



   FUNCTION disjoint_package_terminals
      (input : packaged_part_terminal ) : BOOLEAN;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION dot_product
      (arg1 : direction;
       arg2 : direction ) : REAL;
   LOCAL
      scalar : REAL;
      vec1 : direction;
      vec2 : direction;
      ndim : INTEGER;
   END_LOCAL;
      IF NOT EXISTS(arg1) OR NOT EXISTS(arg2) THEN
         scalar := ?;
      ELSE
         IF arg1.dim <> arg2.dim THEN
            scalar := ?;
         ELSE
            BEGIN
               vec1 := normalise(arg1);
               vec2 := normalise(arg2);
               ndim := arg1.dim;
               scalar := 0.00000;
               REPEAT i := 1 TO ndim;
                  scalar := scalar + vec1.direction_ratios[i] * vec2.direction_ratios[i];
               END_REPEAT;
            END;
         END_IF;
      END_IF;
      RETURN (scalar);
   END_FUNCTION;



   FUNCTION edge_reversed
      (an_edge : edge ) : oriented_edge;
   LOCAL
      the_reverse : oriented_edge;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.ORIENTED_EDGE' IN TYPEOF(an_edge) THEN
         the_reverse := dummy_tri || edge(an_edge.edge_end, an_edge.edge_start) || oriented_edge(an_edge\oriented_edge.edge_element, NOT an_edge\oriented_edge.orientation);
      ELSE
         the_reverse := dummy_tri || edge(an_edge.edge_end, an_edge.edge_start) || oriented_edge(an_edge, FALSE);
      END_IF;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION face_bound_reversed
      (a_face_bound : face_bound ) : face_bound;
   LOCAL
      the_reverse : face_bound;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.FACE_OUTER_BOUND' IN TYPEOF(a_face_bound) THEN
         the_reverse := dummy_tri || face_bound(a_face_bound\face_bound.bound, NOT a_face_bound\face_bound.orientation) || face_outer_bound();
      ELSE
         the_reverse := dummy_tri || face_bound(a_face_bound.bound, NOT a_face_bound.orientation);
      END_IF;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION face_reversed
      (a_face : face ) : oriented_face;
   LOCAL
      the_reverse : oriented_face;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.ORIENTED_FACE' IN TYPEOF(a_face) THEN
         the_reverse := dummy_tri || face(set_of_topology_reversed(a_face.bounds)) || oriented_face(a_face\oriented_face.face_element, NOT a_face\oriented_face.orientation);
      ELSE
         the_reverse := dummy_tri || face(set_of_topology_reversed(a_face.bounds)) || oriented_face(a_face, FALSE);
      END_IF;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION first_proj_axis
      (z_axis : direction;
       arg : direction ) : direction;
   LOCAL
      x_axis : direction;
      v : direction;
      z : direction;
      x_vec : vector;
   END_LOCAL;
      IF NOT EXISTS(z_axis) THEN
         RETURN (?);
      ELSE
         z := normalise(z_axis);
         IF NOT EXISTS(arg) THEN
            IF (z.direction_ratios <> [ 1.00000, 0.00000, 0.00000 ]) AND (z.direction_ratios <> [ -1.00000, 0.00000, 0.00000 ]) THEN
               v := dummy_gri || direction([ 1.00000, 0.00000, 0.00000 ]);
            ELSE
               v := dummy_gri || direction([ 0.00000, 1.00000, 0.00000 ]);
            END_IF;
         ELSE
            IF arg.dim <> 3 THEN
               RETURN (?);
            END_IF;
            IF cross_product(arg, z).magnitude = 0.00000 THEN
               RETURN (?);
            ELSE
               v := normalise(arg);
            END_IF;
         END_IF;
         x_vec := scalar_times_vector(dot_product(v, z), z);
         x_axis := vector_difference(v, x_vec).orientation;
         x_axis := normalise(x_axis);
      END_IF;
      RETURN (x_axis);
   END_FUNCTION;



   FUNCTION gbsf_check_curve
      (cv : curve ) : BOOLEAN;
      IF SIZEOF([ 'AP210_ARM_EXTENDED.BOUNDED_CURVE', 'AP210_ARM_EXTENDED.CIRCLE', 'AP210_ARM_EXTENDED.ELLIPSE' ] * TYPEOF(cv)) = 1 THEN
         RETURN (TRUE);
      ELSE
         IF ('AP210_ARM_EXTENDED.B_SPLINE_CURVE' IN TYPEOF(cv)) AND (cv\b_spline_curve.self_intersect = FALSE) THEN
            RETURN (TRUE);
         ELSE
            IF ('AP210_ARM_EXTENDED.COMPOSITE_CURVE' IN TYPEOF(cv)) AND (cv\composite_curve.self_intersect = FALSE) THEN
               RETURN (SIZEOF(QUERY (seg <* cv\composite_curve.segments| NOT gbsf_check_curve(seg.parent_curve))) = 0);
            ELSE
               IF SIZEOF([ 'AP210_ARM_EXTENDED.BOUNDED_CURVE', 'AP210_ARM_EXTENDED.CURVE_REPLICA' ] * TYPEOF(cv)) = 1 THEN
                  RETURN (gbsf_check_curve(cv\curve_replica.parent_curve));
               ELSE
                  IF (SIZEOF([ 'AP210_ARM_EXTENDED.BOUNDED_CURVE', 'AP210_ARM_EXTENDED.OFFSET_CURVE_3D' ] * TYPEOF(cv)) = 1) AND (cv\offset_curve_3d.self_intersect = FALSE) THEN
                     RETURN (gbsf_check_curve(cv\offset_curve_3d.basis_curve));
                  ELSE
                     IF SIZEOF([ 'AP210_ARM_EXTENDED.BOUNDED_CURVE', 'AP210_ARM_EXTENDED.PCURVE' ] * TYPEOF(cv)) = 1 THEN
                        RETURN (gbsf_check_curve(cv\pcurve.reference_to_curve.items[1]) AND gbsf_check_surface(cv\pcurve.basis_surface));
                     ELSE
                        IF 'AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(cv) THEN
                           IF (SIZEOF(cv\polyline.points) >= 3) AND (SIZEOF(bag_to_set(USEDIN(cv, '')) - bag_to_set(USEDIN(cv, 'AP210_ARM_EXTENDED.SURFACE_CURVE.CURVE_3D'))) = 0) THEN
                              RETURN (TRUE);
                           END_IF;
                        ELSE
                           IF SIZEOF([ 'AP210_ARM_EXTENDED.BOUNDED_CURVE', 'AP210_ARM_EXTENDED.SURFACE_CURVE' ] * TYPEOF(cv)) = 1 THEN
                              IF gbsf_check_curve(cv\surface_curve.curve_3d) THEN
                                 REPEAT i := 1 TO SIZEOF(cv\surface_curve.associated_geometry);
                                    IF 'AP210_ARM_EXTENDED.SURFACE' IN TYPEOF(cv\surface_curve.associated_geometry[i]) THEN
                                       IF NOT gbsf_check_surface(cv\surface_curve.associated_geometry[i]) THEN
                                          RETURN (FALSE);
                                       END_IF;
                                    ELSE
                                       IF 'AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(cv\surface_curve.associated_geometry[i]) THEN
                                          IF NOT gbsf_check_curve(cv\surface_curve.associated_geometry[i]) THEN
                                             RETURN (FALSE);
                                          END_IF;
                                       END_IF;
                                    END_IF;
                                 END_REPEAT;
                                 RETURN (TRUE);
                              END_IF;
                           ELSE
                              IF 'AP210_ARM_EXTENDED.TRIMMED_CURVE' IN TYPEOF(cv) THEN
                                 IF SIZEOF([ 'AP210_ARM_EXTENDED.BOUNDED_CURVE', 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.PARABOLA', 'AP210_ARM_EXTENDED.HYPERBOLA' ] * TYPEOF(cv\trimmed_curve.basis_curve)) = 1 THEN
                                    RETURN (TRUE);
                                 ELSE
                                    RETURN (gbsf_check_curve(cv\trimmed_curve.basis_curve));
                                 END_IF;
                              END_IF;
                           END_IF;
                        END_IF;
                     END_IF;
                  END_IF;
               END_IF;
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION gbsf_check_point
      (pnt : point ) : BOOLEAN;
      IF 'AP210_ARM_EXTENDED.CARTESIAN_POINT' IN TYPEOF(pnt) THEN
         RETURN (TRUE);
      ELSE
         IF 'AP210_ARM_EXTENDED.POINT_ON_CURVE' IN TYPEOF(pnt) THEN
            RETURN (gbsf_check_curve(pnt\point_on_curve.basis_curve));
         ELSE
            IF 'AP210_ARM_EXTENDED.POINT_ON_SURFACE' IN TYPEOF(pnt) THEN
               RETURN (gbsf_check_surface(pnt\point_on_surface.basis_surface));
            ELSE
               IF 'AP210_ARM_EXTENDED.DEGENERATE_PCURVE' IN TYPEOF(pnt) THEN
                  RETURN (gbsf_check_curve(pnt\degenerate_pcurve.reference_to_curve.items[1]) AND gbsf_check_surface(pnt\degenerate_pcurve.basis_surface));
               END_IF;
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION gbsf_check_surface
      (sf : surface ) : BOOLEAN;
      IF ('AP210_ARM_EXTENDED.B_SPLINE_SURFACE' IN TYPEOF(sf)) AND (sf\b_spline_surface.self_intersect = FALSE) THEN
         RETURN (TRUE);
      ELSE
         IF SIZEOF([ 'AP210_ARM_EXTENDED.SPHERICAL_SURFACE', 'AP210_ARM_EXTENDED.TOROIDAL_SURFACE' ] * TYPEOF(sf)) = 1 THEN
            RETURN (TRUE);
         ELSE
            IF 'AP210_ARM_EXTENDED.CURVE_BOUNDED_SURFACE' IN TYPEOF(sf) THEN
               IF SIZEOF([ 'AP210_ARM_EXTENDED.CONICAL_SURFACE', 'AP210_ARM_EXTENDED.CYLINDRICAL_SURFACE', 'AP210_ARM_EXTENDED.PLANE' ] * TYPEOF(sf\curve_bounded_surface.basis_surface)) = 1 THEN
                  RETURN (SIZEOF(QUERY (bcurve <* sf\curve_bounded_surface.boundaries| NOT gbsf_check_curve(bcurve))) = 0);
               ELSE
                  IF gbsf_check_surface(sf\curve_bounded_surface.basis_surface) THEN
                     RETURN (SIZEOF(QUERY (bcurve <* sf\curve_bounded_surface.boundaries| NOT gbsf_check_curve(bcurve))) = 0);
                  END_IF;
               END_IF;
            ELSE
               IF ('AP210_ARM_EXTENDED.OFFSET_SURFACE' IN TYPEOF(sf)) AND (sf\offset_surface.self_intersect = FALSE) THEN
                  RETURN (gbsf_check_surface(sf\offset_surface.basis_surface));
               ELSE
                  IF 'AP210_ARM_EXTENDED.RECTANGULAR_COMPOSITE_SURFACE' IN TYPEOF(sf) THEN
                     REPEAT i := 1 TO SIZEOF(sf\rectangular_composite_surface.segments);
                        REPEAT j := 1 TO SIZEOF(sf\rectangular_composite_surface.segments[i]);
                           IF NOT gbsf_check_surface(sf\rectangular_composite_surface.segments[i][j].parent_surface) THEN
                              RETURN (FALSE);
                           END_IF;
                        END_REPEAT;
                     END_REPEAT;
                     RETURN (TRUE);
                  ELSE
                     IF 'AP210_ARM_EXTENDED.RECTANGULAR_TRIMMED_SURFACE' IN TYPEOF(sf) THEN
                        IF SIZEOF([ 'AP210_ARM_EXTENDED.CONICAL_SURFACE', 'AP210_ARM_EXTENDED.CYLINDRICAL_SURFACE', 'AP210_ARM_EXTENDED.PLANE' ] * TYPEOF(sf\rectangular_trimmed_surface.basis_surface)) = 1 THEN
                           RETURN (TRUE);
                        ELSE
                           RETURN (gbsf_check_surface(sf\rectangular_trimmed_surface.basis_surface));
                        END_IF;
                     ELSE
                        IF 'AP210_ARM_EXTENDED.SURFACE_REPLICA' IN TYPEOF(sf) THEN
                           RETURN (gbsf_check_surface(sf\surface_replica.parent_surface));
                        ELSE
                           IF 'AP210_ARM_EXTENDED.SWEPT_SURFACE' IN TYPEOF(sf) THEN
                              RETURN (gbsf_check_curve(sf\swept_surface.swept_curve));
                           END_IF;
                        END_IF;
                     END_IF;
                  END_IF;
               END_IF;
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION get_basis_surface
      (c : curve_on_surface ) : SET [0:2] OF surface;
   LOCAL
      surfs : SET [0:2] OF surface;
      n : INTEGER;
   END_LOCAL;
      surfs := [];
      IF 'AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(c) THEN
         surfs := [ c\pcurve.basis_surface ];
      ELSE
         IF 'AP210_ARM_EXTENDED.SURFACE_CURVE' IN TYPEOF(c) THEN
            n := SIZEOF(c\surface_curve.associated_geometry);
            REPEAT i := 1 TO n;
               surfs := surfs + associated_surface(c\surface_curve.associated_geometry[i]);
            END_REPEAT;
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.COMPOSITE_CURVE_ON_SURFACE' IN TYPEOF(c) THEN
         n := SIZEOF(c\composite_curve.segments);
         surfs := get_basis_surface(c\composite_curve.segments[1].parent_curve);
         IF n > 1 THEN
            REPEAT i := 2 TO n;
               surfs := surfs * get_basis_surface(c\composite_curve.segments[i].parent_curve);
            END_REPEAT;
         END_IF;
      END_IF;
      RETURN (surfs);
   END_FUNCTION;



   FUNCTION get_cit
      (ac : assembly_component;
       ajb : SET OF assembly_joint ) : component_interface_terminal;
   LOCAL
      cf : LIST [1:?] OF component_feature := [];
      cit : component_interface_terminal;
   END_LOCAL;
      REPEAT i := 1 TO 2 BY 1;
         cf[1] := ajb[1].assembly_features_1;
         cf[2] := ajb[1].assembly_features_2;
         IF ac :=: cf[i].associated_component THEN
            IF 'AP210_ARM_EXTENDED.INTERFACE_COMPONENT' IN TYPEOF(cf[i].associated_component) THEN
               RETURN (cf[i]);
            ELSE
               RETURN (?);
            END_IF;
         ELSE
            RETURN (?);
         END_IF;
      END_REPEAT;
      RETURN (?);
   END_FUNCTION;



   FUNCTION get_cos
      (sd : SET OF shape_definition ) : SET OF cartesian_coordinate_system;
   LOCAL
      gc : SET OF cartesian_coordinate_system := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(sd) BY 1;
         gc := gc + sd[i].geometric_context;
      END_REPEAT;
      RETURN (gc);
   END_FUNCTION;



   FUNCTION get_description_value
      (obj : description_attribute_select ) : text;
   LOCAL
      description_bag : BAG OF description_attribute := USEDIN(obj, 'AP210_ARM_EXTENDED.' + 'DESCRIPTION_ATTRIBUTE.' + 'DESCRIBED_ITEM');
   END_LOCAL;
      IF SIZEOF(description_bag) = 1 THEN
         RETURN (description_bag[1].attribute_value);
      ELSE
         RETURN (?);
      END_IF;
   END_FUNCTION;



   FUNCTION get_id_value
      (obj : id_attribute_select ) : identifier;
   LOCAL
      id_bag : BAG OF id_attribute := USEDIN(obj, 'AP210_ARM_EXTENDED.' + 'ID_ATTRIBUTE.' + 'IDENTIFIED_ITEM');
   END_LOCAL;
      IF SIZEOF(id_bag) = 1 THEN
         RETURN (id_bag[1].attribute_value);
      ELSE
         RETURN (?);
      END_IF;
   END_FUNCTION;



   FUNCTION get_name_value
      (obj : name_attribute_select ) : label;
   LOCAL
      name_bag : BAG OF name_attribute := USEDIN(obj, 'AP210_ARM_EXTENDED.' + 'NAME_ATTRIBUTE.' + 'NAMED_ITEM');
   END_LOCAL;
      IF SIZEOF(name_bag) = 1 THEN
         RETURN (name_bag[1].attribute_value);
      ELSE
         RETURN (?);
      END_IF;
   END_FUNCTION;



   FUNCTION get_padstack_arrangement
      (input : SET OF padstack_location_in_footprint_definition ) : padstack_arrangement;
   LOCAL
      pabt : BAG OF STRING := [];
      pabb : BAG OF STRING := [];
      pabs : BAG OF STRING := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(input) BY 1;
         IF input[i].padstack.padstack_location = padstack_arrangement.top THEN
            pabt := pabt + 'top';
         END_IF;
         IF input[i].padstack.padstack_location = padstack_arrangement.bottom THEN
            pabb := pabb + 'bottom';
         END_IF;
         IF input[i].padstack.padstack_location = padstack_arrangement.symmetrical THEN
            pabs := pabs + 'symmetrical';
         END_IF;
      END_REPEAT;
      IF (SIZEOF(pabt) > 0) AND (SIZEOF(pabb) = 0) THEN
         RETURN (padstack_arrangement.top);
      END_IF;
      IF (SIZEOF(pabb) > 0) AND (SIZEOF(pabt) = 0) THEN
         RETURN (padstack_arrangement.bottom);
      END_IF;
      IF ((SIZEOF(pabb) = 0) AND (SIZEOF(pabt) = 0)) AND (SIZEOF(pabs) > 0) THEN
         RETURN (padstack_arrangement.symmetrical);
      END_IF;
      RETURN (?);
   END_FUNCTION;



   FUNCTION get_pctd
      (ac : assembly_component;
       ajb : SET OF assembly_joint ) : SET OF part_connected_terminals_definition;
   LOCAL
      cf : LIST [1:?] OF component_feature;
      pctd : SET OF part_connected_terminals_definition := [];
   END_LOCAL;
      REPEAT i := 1 TO 2 BY 1;
         cf[1] := ajb[1].assembly_features_1;
         cf[2] := ajb[1].assembly_features_2;
         IF ac :=: cf[i].associated_component THEN
            IF 'AP210_ARM_EXTENDED.PART_TERMINAL' IN TYPEOF(cf[i].definition) THEN
               pctd := cf[i].definition.connection_requirement;
               RETURN (pctd);
            ELSE
               RETURN (pctd);
            END_IF;
         ELSE
            RETURN (pctd);
         END_IF;
      END_REPEAT;
      RETURN (?);
   END_FUNCTION;



   FUNCTION get_pctr
      (ac : assembly_component;
       imjb : SET OF interface_mounted_join ) : SET OF packaged_connector_terminal_relationship;
   LOCAL
      cf : component_feature;
      pctr : SET OF packaged_connector_terminal_relationship := [];
   END_LOCAL;
      cf := imjb[1].connection_to_interconnect_module_component;
      IF ac :=: cf.associated_component THEN
         IF 'AP210_ARM_EXTENDED.PACKAGED_PART_INTERFACE_TERMINAL' IN TYPEOF(cf.definition) THEN
            pctr := cf.definition.external_connector_function;
            RETURN (pctr);
         ELSE
            RETURN (pctr);
         END_IF;
      ELSE
         RETURN (pctr);
      END_IF;
      RETURN (?);
   END_FUNCTION;



   FUNCTION item_in_context
      (item : representation_item;
       cntxt : representation_context ) : BOOLEAN;
   LOCAL
      y : BAG OF representation_item;
   END_LOCAL;
      IF SIZEOF(USEDIN(item, 'AP210_ARM_EXTENDED.REPRESENTATION.ITEMS') * cntxt.representations_in_context) > 0 THEN
         RETURN (TRUE);
      ELSE
         y := QUERY (z <* USEDIN(item, '')| 'AP210_ARM_EXTENDED.REPRESENTATION_ITEM' IN TYPEOF(z));
         IF SIZEOF(y) > 0 THEN
            REPEAT i := 1 TO HIINDEX(y);
               IF item_in_context(y[i], cntxt) THEN
                  RETURN (TRUE);
               END_IF;
            END_REPEAT;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION leap_year
      (year : year_number ) : BOOLEAN;
      IF (year MOD 4 = 0) AND (year MOD 100 <> 0) OR (year MOD 400 = 0) THEN
         RETURN (TRUE);
      ELSE
         RETURN (FALSE);
      END_IF;
   END_FUNCTION;



   FUNCTION list_face_loops
      (f : face ) : LIST [0:?] OF loop;
   LOCAL
      loops : LIST [0:?] OF loop := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(f.bounds);
         loops := loops + f.bounds[i].bound;
      END_REPEAT;
      RETURN (loops);
   END_FUNCTION;



   FUNCTION list_of_topology_reversed
      (a_list : list_of_reversible_topology_item ) : list_of_reversible_topology_item;
   LOCAL
      the_reverse : list_of_reversible_topology_item;
   END_LOCAL;
      the_reverse := [];
      REPEAT i := 1 TO SIZEOF(a_list);
         the_reverse := topology_reversed(a_list[i]) + the_reverse;
      END_REPEAT;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION list_to_array
      (lis : LIST [0:?] OF GENERIC : T;
       low : INTEGER;
       u : INTEGER ) : ARRAY [low:u] OF GENERIC : T;
   LOCAL
      n : INTEGER;
      res : ARRAY [low:u] OF GENERIC : T;
   END_LOCAL;
      n := SIZEOF(lis);
      IF n <> u - low + 1 THEN
         RETURN (?);
      ELSE
         res := [ lis[1] ];
         REPEAT i := 2 TO n;
            res[(low + i - 1)] := lis[i];
         END_REPEAT;
         RETURN (res);
      END_IF;
   END_FUNCTION;



   FUNCTION list_to_set
      (l : LIST [0:?] OF GENERIC : T ) : SET OF GENERIC : T;
   LOCAL
      s : SET OF GENERIC : T := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(l);
         s := s + l[i];
      END_REPEAT;
      RETURN (s);
   END_FUNCTION;



   FUNCTION make_aggregate_join
      (input1 : SET OF inter_stratum_join_relationship;
       input2 : intra_stratum_join_relationship;
       input3 : SET OF stratum_embedded_component_join_relationship ) : SET OF join_relationship;
   LOCAL
      v1 : SET OF join_relationship := input1;
   END_LOCAL;
      v1 := v1 + input2;
      v1 := v1 + input3;
      RETURN (v1);
   END_FUNCTION;



   FUNCTION make_array_of_array
      (lis : LIST [1:?] OF LIST [1:?] OF GENERIC : T;
       low1 : INTEGER;
       u1 : INTEGER;
       low2 : INTEGER;
       u2 : INTEGER ) : ARRAY [low1:u1] OF ARRAY [low2:u2] OF GENERIC : T;
   LOCAL
      res : ARRAY [low1:u1] OF ARRAY [low2:u2] OF GENERIC : T;
   END_LOCAL;
      IF u1 - low1 + 1 <> SIZEOF(lis) THEN
         RETURN (?);
      END_IF;
      IF u2 - low2 + 1 <> SIZEOF(lis[1]) THEN
         RETURN (?);
      END_IF;
      res := [ list_to_array(lis[1], low2, u2) ];
      REPEAT i := 2 TO HIINDEX(lis);
         IF u2 - low2 + 1 <> SIZEOF(lis[i]) THEN
            RETURN (?);
         END_IF;
         res[(low1 + i - 1)] := list_to_array(lis[i], low2, u2);
      END_REPEAT;
      RETURN (res);
   END_FUNCTION;



   FUNCTION max_data_element
      (input1 : length_measure_with_unit;
       input2 : length_measure_with_unit ) : length_measure_with_unit;
      RETURN (input1);
   END_FUNCTION;



   FUNCTION mixed_loop_type_set
      (l : SET [0:?] OF loop ) : LOGICAL;
   LOCAL
      poly_loop_type : LOGICAL;
   END_LOCAL;
      IF SIZEOF(l) <= 1 THEN
         RETURN (FALSE);
      END_IF;
      poly_loop_type := 'AP210_ARM_EXTENDED.POLY_LOOP' IN TYPEOF(l[1]);
      REPEAT i := 2 TO SIZEOF(l);
         IF ('AP210_ARM_EXTENDED.POLY_LOOP' IN TYPEOF(l[i])) <> poly_loop_type THEN
            RETURN (TRUE);
         END_IF;
      END_REPEAT;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION msb_shells
      (brep : manifold_solid_brep;
       schema_name : STRING ) : SET [1:?] OF closed_shell;
      IF schema_name + '.BREP_WITH_VOIDS' IN TYPEOF(brep) THEN
         RETURN (brep\brep_with_voids.voids + brep.outer);
      ELSE
         RETURN ([ brep.outer ]);
      END_IF;
   END_FUNCTION;



   FUNCTION msf_curve_check
      (cv : curve ) : BOOLEAN;
      IF SIZEOF([ 'AP210_ARM_EXTENDED.BOUNDED_CURVE', 'AP210_ARM_EXTENDED.CONIC', 'AP210_ARM_EXTENDED.CURVE_REPLICA', 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.OFFSET_CURVE_3D' ] * TYPEOF(cv)) > 1 THEN
         RETURN (FALSE);
      ELSE
         IF ('AP210_ARM_EXTENDED.B_SPLINE_CURVE' IN TYPEOF(cv)) AND (cv\b_spline_curve.self_intersect = FALSE) THEN
            RETURN (TRUE);
         ELSE
            IF SIZEOF([ 'AP210_ARM_EXTENDED.CONIC', 'AP210_ARM_EXTENDED.LINE' ] * TYPEOF(cv)) = 1 THEN
               RETURN (TRUE);
            ELSE
               IF 'AP210_ARM_EXTENDED.CURVE_REPLICA' IN TYPEOF(cv) THEN
                  RETURN (msf_curve_check(cv\curve_replica.parent_curve));
               ELSE
                  IF ('AP210_ARM_EXTENDED.OFFSET_CURVE_3D' IN TYPEOF(cv)) AND (cv\offset_curve_3d.self_intersect = FALSE) THEN
                     RETURN (msf_curve_check(cv\offset_curve_3d.basis_curve));
                  ELSE
                     IF 'AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(cv) THEN
                        RETURN (msf_curve_check(cv\pcurve.reference_to_curve\representation.items[1]) AND msf_surface_check(cv\pcurve.basis_surface));
                     ELSE
                        IF 'AP210_ARM_EXTENDED.SURFACE_CURVE' IN TYPEOF(cv) THEN
                           IF msf_curve_check(cv\surface_curve.curve_3d) THEN
                              REPEAT i := 1 TO SIZEOF(cv\surface_curve.associated_geometry);
                                 IF 'AP210_ARM_EXTENDED.SURFACE' IN TYPEOF(cv\surface_curve.associated_geometry[i]) THEN
                                    IF NOT msf_surface_check(cv\surface_curve.associated_geometry[i]) THEN
                                       RETURN (FALSE);
                                    END_IF;
                                 ELSE
                                    IF 'AP210_ARM_EXTENDED.PCURVE' IN TYPEOF(cv\surface_curve.associated_geometry[i]) THEN
                                       IF NOT msf_curve_check(cv\surface_curve.associated_geometry[i]) THEN
                                          RETURN (FALSE);
                                       END_IF;
                                    END_IF;
                                 END_IF;
                              END_REPEAT;
                              RETURN (TRUE);
                           END_IF;
                        ELSE
                           IF 'AP210_ARM_EXTENDED.POLYLINE' IN TYPEOF(cv) THEN
                              IF SIZEOF(cv\polyline.points) >= 3 THEN
                                 RETURN (TRUE);
                              END_IF;
                           END_IF;
                        END_IF;
                     END_IF;
                  END_IF;
               END_IF;
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION msf_surface_check
      (surf : surface ) : BOOLEAN;
      IF 'AP210_ARM_EXTENDED.ELEMENTARY_SURFACE' IN TYPEOF(surf) THEN
         RETURN (TRUE);
      ELSE
         IF 'AP210_ARM_EXTENDED.SWEPT_SURFACE' IN TYPEOF(surf) THEN
            RETURN (msf_curve_check(surf\swept_surface.swept_curve));
         ELSE
            IF ('AP210_ARM_EXTENDED.OFFSET_SURFACE' IN TYPEOF(surf)) AND (surf\offset_surface.self_intersect = FALSE) THEN
               RETURN (msf_surface_check(surf\offset_surface.basis_surface));
            ELSE
               IF 'AP210_ARM_EXTENDED.SURFACE_REPLICA' IN TYPEOF(surf) THEN
                  RETURN (msf_surface_check(surf\surface_replica.parent_surface));
               ELSE
                  IF ('AP210_ARM_EXTENDED.B_SPLINE_SURFACE' IN TYPEOF(surf)) AND (surf\b_spline_surface.self_intersect = FALSE) THEN
                     RETURN (TRUE);
                  END_IF;
               END_IF;
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION normalise
      (arg : vector_or_direction ) : vector_or_direction;
   LOCAL
      ndim : INTEGER;
      v : direction;
      result : vector_or_direction;
      vec : vector;
      mag : REAL;
   END_LOCAL;
      IF NOT EXISTS(arg) THEN
         result := ?;
      ELSE
         ndim := arg.dim;
         IF 'AP210_ARM_EXTENDED.VECTOR' IN TYPEOF(arg) THEN
            BEGIN
               v := dummy_gri || direction(arg.orientation.direction_ratios);
               IF arg.magnitude = 0.00000 THEN
                  RETURN (?);
               ELSE
                  vec := dummy_gri || vector(v, 1.00000);
               END_IF;
            END;
         ELSE
            v := dummy_gri || direction(arg.direction_ratios);
         END_IF;
         mag := 0.00000;
         REPEAT i := 1 TO ndim;
            mag := mag + v.direction_ratios[i] * v.direction_ratios[i];
         END_REPEAT;
         IF mag > 0.00000 THEN
            mag := sqrt(mag);
            REPEAT i := 1 TO ndim;
               v.direction_ratios[i] := v.direction_ratios[i] / mag;
            END_REPEAT;
            IF 'AP210_ARM_EXTENDED.VECTOR' IN TYPEOF(arg) THEN
               vec.orientation := v;
               result := vec;
            ELSE
               result := v;
            END_IF;
         ELSE
            RETURN (?);
         END_IF;
      END_IF;
      RETURN (result);
   END_FUNCTION;



   FUNCTION open_shell_reversed
      (a_shell : open_shell ) : oriented_open_shell;
   LOCAL
      the_reverse : oriented_open_shell;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.ORIENTED_OPEN_SHELL' IN TYPEOF(a_shell) THEN
         the_reverse := dummy_tri || connected_face_set(a_shell\connected_face_set.cfs_faces) || open_shell() || oriented_open_shell(a_shell\oriented_open_shell.open_shell_element, NOT a_shell\oriented_open_shell.orientation);
      ELSE
         the_reverse := dummy_tri || connected_face_set(a_shell\connected_face_set.cfs_faces) || open_shell() || oriented_open_shell(a_shell, FALSE);
      END_IF;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION orthogonal_complement
      (vec : direction ) : direction;
   LOCAL
      result : direction;
   END_LOCAL;
      IF (vec.dim <> 2) OR NOT EXISTS(vec) THEN
         RETURN (?);
      ELSE
         result := dummy_gri || direction([ -vec.direction_ratios[2], vec.direction_ratios[1] ]);
         RETURN (result);
      END_IF;
   END_FUNCTION;



   FUNCTION path_head_to_tail
      (a_path : path ) : LOGICAL;
   LOCAL
      n : INTEGER;
      p : LOGICAL := TRUE;
   END_LOCAL;
      n := SIZEOF(a_path.edge_list);
      REPEAT i := 2 TO n;
         p := p AND (a_path.edge_list[(i - 1)].edge_end :=: a_path.edge_list[i].edge_start);
      END_REPEAT;
      RETURN (p);
   END_FUNCTION;



   FUNCTION path_reversed
      (a_path : path ) : oriented_path;
   LOCAL
      the_reverse : oriented_path;
   END_LOCAL;
      IF 'AP210_ARM_EXTENDED.ORIENTED_PATH' IN TYPEOF(a_path) THEN
         the_reverse := dummy_tri || path(list_of_topology_reversed(a_path.edge_list)) || oriented_path(a_path\oriented_path.path_element, NOT a_path\oriented_path.orientation);
      ELSE
         the_reverse := dummy_tri || path(list_of_topology_reversed(a_path.edge_list)) || oriented_path(a_path, FALSE);
      END_IF;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION printed_component_access_mechanisms
      (input : SET OF printed_component_link ) : SET OF printed_component_join_terminal;
   LOCAL
      pcjt : SET OF printed_component_join_terminal := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(input) BY 1;
         pcjt := input[i].precedent_printed_component.raw_access_mechanism + pcjt;
         pcjt := input[i].subsequent_printed_component.raw_access_mechanism + pcjt;
      END_REPEAT;
      RETURN (pcjt);
   END_FUNCTION;



   FUNCTION printed_part_template_access_mechanisms
      (input : SET OF printed_part_template_link ) : SET OF printed_part_template_terminal;
   LOCAL
      pptt : SET OF printed_part_template_terminal := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(input) BY 1;
         pptt := input[i].precedent_printed_part_template.raw_access_mechanisms + pptt;
         pptt := input[i].subsequent_printed_part_template.raw_access_mechanisms + pptt;
      END_REPEAT;
      RETURN (pptt);
   END_FUNCTION;



   FUNCTION same_stratum
      (input : SET OF stratum_feature ) : BOOLEAN;
   LOCAL
      pass : BOOLEAN := FALSE;
      s : SET OF stratum := [];
      pptt : SET OF printed_part_template_terminal := [];
   END_LOCAL;
      REPEAT i := 1 TO SIZEOF(input) BY 1;
         s := input[i].resident_stratum + s;
      END_REPEAT;
      pass := SIZEOF(s) = 1;
      RETURN (pass);
   END_FUNCTION;



   FUNCTION scalar_times_vector
      (scalar : REAL;
       vec : vector_or_direction ) : vector;
   LOCAL
      v : direction;
      mag : REAL;
      result : vector;
   END_LOCAL;
      IF NOT EXISTS(scalar) OR NOT EXISTS(vec) THEN
         RETURN (?);
      ELSE
         IF 'AP210_ARM_EXTENDED.VECTOR' IN TYPEOF(vec) THEN
            v := dummy_gri || direction(vec.orientation.direction_ratios);
            mag := scalar * vec.magnitude;
         ELSE
            v := dummy_gri || direction(vec.direction_ratios);
            mag := scalar;
         END_IF;
         IF mag < 0.00000 THEN
            REPEAT i := 1 TO SIZEOF(v.direction_ratios);
               v.direction_ratios[i] := -v.direction_ratios[i];
            END_REPEAT;
            mag := -mag;
         END_IF;
         result := dummy_gri || vector(normalise(v), mag);
      END_IF;
      RETURN (result);
   END_FUNCTION;



   FUNCTION second_proj_axis
      (z_axis : direction;
       x_axis : direction;
       arg : direction ) : direction;
   LOCAL
      y_axis : vector;
      v : direction;
      temp : vector;
   END_LOCAL;
      IF NOT EXISTS(arg) THEN
         v := dummy_gri || direction([ 0.00000, 1.00000, 0.00000 ]);
      ELSE
         v := arg;
      END_IF;
      temp := scalar_times_vector(dot_product(v, z_axis), z_axis);
      y_axis := vector_difference(v, temp);
      temp := scalar_times_vector(dot_product(v, x_axis), x_axis);
      y_axis := vector_difference(y_axis, temp);
      y_axis := normalise(y_axis);
      RETURN (y_axis.orientation);
   END_FUNCTION;



   FUNCTION set_of_topology_reversed
      (a_set : set_of_reversible_topology_item ) : set_of_reversible_topology_item;
   LOCAL
      the_reverse : set_of_reversible_topology_item;
   END_LOCAL;
      the_reverse := [];
      REPEAT i := 1 TO SIZEOF(a_set);
         the_reverse := the_reverse + topology_reversed(a_set[i]);
      END_REPEAT;
      RETURN (the_reverse);
   END_FUNCTION;



   FUNCTION shell_reversed
      (a_shell : shell ) : shell;
      IF 'AP210_ARM_EXTENDED.OPEN_SHELL' IN TYPEOF(a_shell) THEN
         RETURN (open_shell_reversed(a_shell));
      ELSE
         IF 'AP210_ARM_EXTENDED.CLOSED_SHELL' IN TYPEOF(a_shell) THEN
            RETURN (closed_shell_reversed(a_shell));
         ELSE
            RETURN (?);
         END_IF;
      END_IF;
   END_FUNCTION;



   FUNCTION single_package_version
      (input : packaged_part ) : BOOLEAN;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION substrate_in_assembly
      (c2dl : component_2d_location ) : BOOLEAN;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION surface_weights_positive
      (b : rational_b_spline_surface ) : BOOLEAN;
   LOCAL
      result : BOOLEAN := TRUE;
   END_LOCAL;
      REPEAT i := 0 TO b.u_upper;
         REPEAT j := 0 TO b.v_upper;
            IF b.weights[i][j] <= 0.00000 THEN
               result := FALSE;
               RETURN (result);
            END_IF;
         END_REPEAT;
      END_REPEAT;
      RETURN (result);
   END_FUNCTION;



   FUNCTION topology_reversed
      (an_item : reversible_topology ) : reversible_topology;
      IF 'AP210_ARM_EXTENDED.EDGE' IN TYPEOF(an_item) THEN
         RETURN (edge_reversed(an_item));
      END_IF;
      IF 'AP210_ARM_EXTENDED.PATH' IN TYPEOF(an_item) THEN
         RETURN (path_reversed(an_item));
      END_IF;
      IF 'AP210_ARM_EXTENDED.FACE_BOUND' IN TYPEOF(an_item) THEN
         RETURN (face_bound_reversed(an_item));
      END_IF;
      IF 'AP210_ARM_EXTENDED.FACE' IN TYPEOF(an_item) THEN
         RETURN (face_reversed(an_item));
      END_IF;
      IF 'AP210_ARM_EXTENDED.SHELL' IN TYPEOF(an_item) THEN
         RETURN (shell_reversed(an_item));
      END_IF;
      IF 'SET' IN TYPEOF(an_item) THEN
         RETURN (set_of_topology_reversed(an_item));
      END_IF;
      IF 'LIST' IN TYPEOF(an_item) THEN
         RETURN (list_of_topology_reversed(an_item));
      END_IF;
      RETURN (?);
   END_FUNCTION;



   FUNCTION using_items
      (item : founded_item_select;
       checked_items : SET OF founded_item_select ) : SET OF founded_item_select;
   LOCAL
      new_check_items : SET OF founded_item_select;
      result_items : SET OF founded_item_select;
      next_items : SET OF founded_item_select;
   END_LOCAL;
      result_items := [];
      new_check_items := checked_items + item;
      next_items := QUERY (z <* bag_to_set(USEDIN(item, ''))| ('AP210_ARM_EXTENDED.REPRESENTATION_ITEM' IN TYPEOF(z)) OR ('AP210_ARM_EXTENDED.FOUNDED_ITEM' IN TYPEOF(z)));
      IF SIZEOF(next_items) > 0 THEN
         REPEAT i := 1 TO HIINDEX(next_items);
            IF NOT (next_items[i] IN new_check_items) THEN
               result_items := result_items + next_items[i] + using_items(next_items[i], new_check_items);
            END_IF;
         END_REPEAT;
      END_IF;
      RETURN (result_items);
   END_FUNCTION;



   FUNCTION using_representations
      (item : founded_item_select ) : SET OF representation;
   LOCAL
      results : SET OF representation;
      result_bag : BAG OF representation;
      intermediate_items : SET OF founded_item_select;
   END_LOCAL;
      results := [];
      result_bag := USEDIN(item, 'AP210_ARM_EXTENDED.REPRESENTATION.ITEMS');
      IF SIZEOF(result_bag) > 0 THEN
         REPEAT i := 1 TO HIINDEX(result_bag);
            results := results + result_bag[i];
         END_REPEAT;
      END_IF;
      intermediate_items := using_items(item, []);
      IF SIZEOF(intermediate_items) > 0 THEN
         REPEAT i := 1 TO HIINDEX(intermediate_items);
            result_bag := USEDIN(intermediate_items[i], 'AP210_ARM_EXTENDED.REPRESENTATION.ITEMS');
            IF SIZEOF(result_bag) > 0 THEN
               REPEAT j := 1 TO HIINDEX(result_bag);
                  results := results + result_bag[j];
               END_REPEAT;
            END_IF;
         END_REPEAT;
      END_IF;
      RETURN (results);
   END_FUNCTION;



   FUNCTION valid_basis_curve_in_2d_wireframe
      (crv : curve ) : BOOLEAN;
      IF SIZEOF([ 'AP210_ARM_EXTENDED.POLYLINE', 'AP210_ARM_EXTENDED.B_SPLINE_CURVE', 'AP210_ARM_EXTENDED.ELLIPSE', 'AP210_ARM_EXTENDED.CIRCLE' ] * TYPEOF(crv)) = 1 THEN
         RETURN (TRUE);
      ELSE
         IF 'AP210_ARM_EXTENDED.TRIMMED_CURVE' IN TYPEOF(crv) THEN
            IF SIZEOF([ 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.PARABOLA', 'AP210_ARM_EXTENDED.HYPERBOLA' ] * TYPEOF(crv\trimmed_curve.basis_curve)) = 1 THEN
               RETURN (TRUE);
            ELSE
               RETURN (valid_basis_curve_in_2d_wireframe(crv\trimmed_curve.basis_curve));
            END_IF;
         ELSE
            IF 'AP210_ARM_EXTENDED.OFFSET_CURVE_2D' IN TYPEOF(crv) THEN
               RETURN (valid_basis_curve_in_2d_wireframe(crv\offset_curve_2d.basis_curve));
            ELSE
               IF 'AP210_ARM_EXTENDED.CURVE_REPLICA' IN TYPEOF(crv) THEN
                  RETURN (valid_basis_curve_in_2d_wireframe(crv\curve_replica.parent_curve));
               ELSE
                  IF 'AP210_ARM_EXTENDED.COMPOSITE_CURVE' IN TYPEOF(crv) THEN
                     RETURN (SIZEOF(QUERY (ccs <* crv\composite_curve.segments| NOT valid_basis_curve_in_2d_wireframe(ccs.parent_curve))) = 0);
                  END_IF;
               END_IF;
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION valid_calendar_date
      (date : calendar_date ) : LOGICAL;
      CASE date.month_component OF
         1 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 31));
         2 :
               BEGIN
                  IF leap_year(date.year_component) THEN
                     RETURN ((1 <= date.day_component) AND (date.day_component <= 29));
                  ELSE
                     RETURN ((1 <= date.day_component) AND (date.day_component <= 28));
                  END_IF;
               END;
         3 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 31));
         4 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 30));
         5 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 31));
         6 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 30));
         7 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 31));
         8 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 31));
         9 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 30));
         10 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 31));
         11 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 30));
         12 :
               RETURN ((1 <= date.day_component) AND (date.day_component <= 31));
      END_CASE;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION valid_constraining_shape
      (sd : SET OF shape_definition;
       eepd : ee_product_definition ) : BOOLEAN;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION valid_geometrically_bounded_wf_curve
      (crv : curve;
       schma : STRING ) : BOOLEAN;
      IF SIZEOF([ (schma + '.POLYLINE'), (schma + '.B_SPLINE_CURVE'), (schma + '.ELLIPSE'), (schma + '.CIRCLE') ] * TYPEOF(crv)) = 1 THEN
         RETURN (TRUE);
      ELSE
         IF schma + '.TRIMMED_CURVE' IN TYPEOF(crv) THEN
            IF SIZEOF([ (schma + '.LINE'), (schma + '.PARABOLA'), (schma + '.HYPERBOLA') ] * TYPEOF(crv\trimmed_curve.basis_curve)) = 1 THEN
               RETURN (TRUE);
            ELSE
               RETURN (valid_geometrically_bounded_wf_curve(crv\trimmed_curve.basis_curve, schma));
            END_IF;
         ELSE
            IF schma + '.OFFSET_CURVE_3D' IN TYPEOF(crv) THEN
               RETURN (valid_geometrically_bounded_wf_curve(crv\offset_curve_3d.basis_curve, schma));
            ELSE
               IF schma + '.CURVE_REPLICA' IN TYPEOF(crv) THEN
                  RETURN (valid_geometrically_bounded_wf_curve(crv\curve_replica.parent_curve, schma));
               ELSE
                  IF schma + '.COMPOSITE_CURVE' IN TYPEOF(crv) THEN
                     RETURN (SIZEOF(QUERY (ccs <* crv\composite_curve.segments| NOT valid_geometrically_bounded_wf_curve(ccs.parent_curve, schma))) = 0);
                  END_IF;
               END_IF;
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION valid_geometrically_bounded_wf_point
      (pnt : point;
       schma : STRING ) : BOOLEAN;
      IF schma + '.CARTESIAN_POINT' IN TYPEOF(pnt) THEN
         RETURN (TRUE);
      ELSE
         IF schma + '.POINT_ON_CURVE' IN TYPEOF(pnt) THEN
            RETURN (valid_geometrically_bounded_wf_curve(pnt\point_on_curve.basis_curve, schma));
         ELSE
            IF schma + '.POINT_REPLICA' IN TYPEOF(pnt) THEN
               RETURN (valid_geometrically_bounded_wf_point(pnt\point_replica.parent_pt, schma));
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION valid_measure_value
      (m : measure_value ) : BOOLEAN;
      IF 'REAL' IN TYPEOF(m) THEN
         RETURN (m > 0.00000);
      ELSE
         IF 'INTEGER' IN TYPEOF(m) THEN
            RETURN (m > 0);
         ELSE
            RETURN (TRUE);
         END_IF;
      END_IF;
   END_FUNCTION;



   FUNCTION valid_time
      (time : local_time ) : BOOLEAN;
      IF EXISTS(time.second_component) THEN
         RETURN (EXISTS(time.minute_component));
      ELSE
         RETURN (TRUE);
      END_IF;
   END_FUNCTION;



   FUNCTION valid_units
      (m : measure_with_unit ) : BOOLEAN;
      IF 'AP210_ARM_EXTENDED.LENGTH_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.MASS_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.TIME_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.ELECTRIC_CURRENT_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.THERMODYNAMIC_TEMPERATURE_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.CELSIUS_TEMPERATURE_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.AMOUNT_OF_SUBSTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.LUMINOUS_INTENSITY_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.PLANE_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.SOLID_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.AREA_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(2.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.VOLUME_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(3.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.RATIO_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.POSITIVE_LENGTH_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      IF 'AP210_ARM_EXTENDED.POSITIVE_PLANE_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
         IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000) THEN
            RETURN (FALSE);
         END_IF;
      END_IF;
      RETURN (TRUE);
   END_FUNCTION;



   FUNCTION valid_wireframe_edge_curve
      (crv : curve ) : BOOLEAN;
      IF SIZEOF([ 'AP210_ARM_EXTENDED.LINE', 'AP210_ARM_EXTENDED.CONIC', 'AP210_ARM_EXTENDED.B_SPLINE_CURVE', 'AP210_ARM_EXTENDED.POLYLINE' ] * TYPEOF(crv)) = 1 THEN
         RETURN (TRUE);
      ELSE
         IF 'AP210_ARM_EXTENDED.CURVE_REPLICA' IN TYPEOF(crv) THEN
            RETURN (valid_wireframe_edge_curve(crv\curve_replica.parent_curve));
         ELSE
            IF 'AP210_ARM_EXTENDED.OFFSET_CURVE_3D' IN TYPEOF(crv) THEN
               RETURN (valid_wireframe_edge_curve(crv\offset_curve_3d.basis_curve));
            END_IF;
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION valid_wireframe_vertex_point
      (pnt : point ) : BOOLEAN;
      IF 'AP210_ARM_EXTENDED.CARTESIAN_POINT' IN TYPEOF(pnt) THEN
         RETURN (TRUE);
      ELSE
         IF 'AP210_ARM_EXTENDED.POINT_REPLICA' IN TYPEOF(pnt) THEN
            RETURN (valid_wireframe_vertex_point(pnt\point_replica.parent_pt));
         END_IF;
      END_IF;
      RETURN (FALSE);
   END_FUNCTION;



   FUNCTION vector_difference
      (arg1 : vector_or_direction;
       arg2 : vector_or_direction ) : vector;
   LOCAL
      result : vector;
      res : direction;
      vec1 : direction;
      vec2 : direction;
      mag : REAL;
      mag1 : REAL;
      mag2 : REAL;
      ndim : INTEGER;
   END_LOCAL;
      IF (NOT EXISTS(arg1) OR NOT EXISTS(arg2)) OR (arg1.dim <> arg2.dim) THEN
         RETURN (?);
      ELSE
         BEGIN
            IF 'AP210_ARM_EXTENDED.VECTOR' IN TYPEOF(arg1) THEN
               mag1 := arg1.magnitude;
               vec1 := arg1.orientation;
            ELSE
               mag1 := 1.00000;
               vec1 := arg1;
            END_IF;
            IF 'AP210_ARM_EXTENDED.VECTOR' IN TYPEOF(arg2) THEN
               mag2 := arg2.magnitude;
               vec2 := arg2.orientation;
            ELSE
               mag2 := 1.00000;
               vec2 := arg2;
            END_IF;
            vec1 := normalise(vec1);
            vec2 := normalise(vec2);
            ndim := SIZEOF(vec1.direction_ratios);
            mag := 0.00000;
            res := dummy_gri || direction(vec1.direction_ratios);
            REPEAT i := 1 TO ndim;
               res.direction_ratios[i] := mag1 * vec1.direction_ratios[i] + mag2 * vec2.direction_ratios[i];
               mag := mag + res.direction_ratios[i] * res.direction_ratios[i];
            END_REPEAT;
            IF mag > 0.00000 THEN
               result := dummy_gri || vector(res, sqrt(mag));
            ELSE
               result := dummy_gri || vector(vec1, 0.00000);
            END_IF;
         END;
      END_IF;
      RETURN (result);
   END_FUNCTION;


(* ***********************************
Rules in the schema AP210_ARM_EXTENDED
*********************************** *)


   RULE compatible_dimension FOR (cartesian_point, direction, representation_context, geometric_representation_context );
   WHERE
      WR1:
         SIZEOF(QUERY (x <* cartesian_point| (SIZEOF(QUERY (y <* geometric_representation_context| item_in_context(x, y) AND (HIINDEX(x.coordinates) <> y.coordinate_space_dimension))) > 0))) = 0;
      WR2:
         SIZEOF(QUERY (x <* direction| (SIZEOF(QUERY (y <* geometric_representation_context| item_in_context(x, y) AND (HIINDEX(x.direction_ratios) <> y.coordinate_space_dimension))) > 0))) = 0;
   END_RULE;


(* *********************************** *)

FUNCTION get_lead_pitch_parameter_assignment_from_product(
    input1 : product) : length_measure_with_unit;
--input1 is the product we are interested in.
--return value is the string for the lead pitch parameter for that product.
--we are using specific names because of the differeing way to handle the property typing.
--the return values are needed to be fully resolved types.
--This method avoids need to scan product categories etc...
--This method assumes that Ee_product_category does not apply parameter_assignment for lead pitch.

--example usage: get_lead_pitch_parameter_assignment_from_product(#2200,'Lead Pitch');
--returns Length_measure_with_unit
--note the Length_measure_with_unit could be a conversion_based_unit (inches)

--initialize variables
    LOCAL
--get the ee_product_specific_parameter_value_assignment that reference this product.
      eepspva : BAG OF ee_product_specific_parameter_value_assignment := USEDIN(input1,
      'AP210_ARM.EE_PRODUCT_SPECIFIC_PARAMETER_VALUE_ASSIGNMENT.OF_PRODUCT');
    END_LOCAL;

--get the value
    REPEAT i := 1 TO SIZEOF(eepspva) BY 1;
      IF (
         (eepspva[i].assigned_parameter.assigned_parameter.type_name = 'Lead Pitch')
         AND
         ('AP210_ARM.LENGTH_MEASURE_WITH_UNIT' IN TYPEOF(eepspva[i].assigned_parameter.parameter_value))
         )         
      THEN
        RETURN(eepspva[i].assigned_parameter.parameter_value.property_value)
    END_REPEAT;   
    RETURN('');
END_FUNCTION; -- get_lead_pitch_parameter_assignment_from_product


END_SCHEMA;


(* ************************************************************************** *)
